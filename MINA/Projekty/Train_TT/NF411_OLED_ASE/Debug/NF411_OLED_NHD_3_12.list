
NF411_OLED_NHD_3_12.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00007904  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000c70  08007aa8  08007aa8  00017aa8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM          00000008  08008718  08008718  00018718  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .init_array   00000004  08008720  08008720  00018720  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .fini_array   00000004  08008724  08008724  00018724  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .data         00000680  20000000  08008728  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .bss          00002088  20000680  08008da8  00020680  2**2
                  ALLOC
  8 ._user_heap_stack 00000400  20002708  08008da8  00022708  2**0
                  ALLOC
  9 .ARM.attributes 00000030  00000000  00000000  00020680  2**0
                  CONTENTS, READONLY
 10 .debug_info   00005b87  00000000  00000000  000206b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 0000112f  00000000  00000000  00026237  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_aranges 00000350  00000000  00000000  00027368  2**3
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000280  00000000  00000000  000276b8  2**3
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   00001bef  00000000  00000000  00027938  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    000014fc  00000000  00000000  00029527  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .comment      0000007c  00000000  00000000  0002aa23  2**0
                  CONTENTS, READONLY
 17 .debug_frame  00001cf8  00000000  00000000  0002aaa0  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000680 	.word	0x20000680
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08007a8c 	.word	0x08007a8c

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000684 	.word	0x20000684
 80001dc:	08007a8c 	.word	0x08007a8c

080001e0 <strlen>:
 80001e0:	4603      	mov	r3, r0
 80001e2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001e6:	2a00      	cmp	r2, #0
 80001e8:	d1fb      	bne.n	80001e2 <strlen+0x2>
 80001ea:	1a18      	subs	r0, r3, r0
 80001ec:	3801      	subs	r0, #1
 80001ee:	4770      	bx	lr

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_drsub>:
 8000290:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000294:	e002      	b.n	800029c <__adddf3>
 8000296:	bf00      	nop

08000298 <__aeabi_dsub>:
 8000298:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800029c <__adddf3>:
 800029c:	b530      	push	{r4, r5, lr}
 800029e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002a6:	ea94 0f05 	teq	r4, r5
 80002aa:	bf08      	it	eq
 80002ac:	ea90 0f02 	teqeq	r0, r2
 80002b0:	bf1f      	itttt	ne
 80002b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002c2:	f000 80e2 	beq.w	800048a <__adddf3+0x1ee>
 80002c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ce:	bfb8      	it	lt
 80002d0:	426d      	neglt	r5, r5
 80002d2:	dd0c      	ble.n	80002ee <__adddf3+0x52>
 80002d4:	442c      	add	r4, r5
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	ea82 0000 	eor.w	r0, r2, r0
 80002e2:	ea83 0101 	eor.w	r1, r3, r1
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	2d36      	cmp	r5, #54	; 0x36
 80002f0:	bf88      	it	hi
 80002f2:	bd30      	pophi	{r4, r5, pc}
 80002f4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002fc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000300:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000304:	d002      	beq.n	800030c <__adddf3+0x70>
 8000306:	4240      	negs	r0, r0
 8000308:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800030c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000310:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000314:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000318:	d002      	beq.n	8000320 <__adddf3+0x84>
 800031a:	4252      	negs	r2, r2
 800031c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000320:	ea94 0f05 	teq	r4, r5
 8000324:	f000 80a7 	beq.w	8000476 <__adddf3+0x1da>
 8000328:	f1a4 0401 	sub.w	r4, r4, #1
 800032c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000330:	db0d      	blt.n	800034e <__adddf3+0xb2>
 8000332:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000336:	fa22 f205 	lsr.w	r2, r2, r5
 800033a:	1880      	adds	r0, r0, r2
 800033c:	f141 0100 	adc.w	r1, r1, #0
 8000340:	fa03 f20e 	lsl.w	r2, r3, lr
 8000344:	1880      	adds	r0, r0, r2
 8000346:	fa43 f305 	asr.w	r3, r3, r5
 800034a:	4159      	adcs	r1, r3
 800034c:	e00e      	b.n	800036c <__adddf3+0xd0>
 800034e:	f1a5 0520 	sub.w	r5, r5, #32
 8000352:	f10e 0e20 	add.w	lr, lr, #32
 8000356:	2a01      	cmp	r2, #1
 8000358:	fa03 fc0e 	lsl.w	ip, r3, lr
 800035c:	bf28      	it	cs
 800035e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000362:	fa43 f305 	asr.w	r3, r3, r5
 8000366:	18c0      	adds	r0, r0, r3
 8000368:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800036c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000370:	d507      	bpl.n	8000382 <__adddf3+0xe6>
 8000372:	f04f 0e00 	mov.w	lr, #0
 8000376:	f1dc 0c00 	rsbs	ip, ip, #0
 800037a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800037e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000382:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000386:	d31b      	bcc.n	80003c0 <__adddf3+0x124>
 8000388:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800038c:	d30c      	bcc.n	80003a8 <__adddf3+0x10c>
 800038e:	0849      	lsrs	r1, r1, #1
 8000390:	ea5f 0030 	movs.w	r0, r0, rrx
 8000394:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000398:	f104 0401 	add.w	r4, r4, #1
 800039c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003a0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003a4:	f080 809a 	bcs.w	80004dc <__adddf3+0x240>
 80003a8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003ac:	bf08      	it	eq
 80003ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003b2:	f150 0000 	adcs.w	r0, r0, #0
 80003b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ba:	ea41 0105 	orr.w	r1, r1, r5
 80003be:	bd30      	pop	{r4, r5, pc}
 80003c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003c4:	4140      	adcs	r0, r0
 80003c6:	eb41 0101 	adc.w	r1, r1, r1
 80003ca:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80003ce:	f1a4 0401 	sub.w	r4, r4, #1
 80003d2:	d1e9      	bne.n	80003a8 <__adddf3+0x10c>
 80003d4:	f091 0f00 	teq	r1, #0
 80003d8:	bf04      	itt	eq
 80003da:	4601      	moveq	r1, r0
 80003dc:	2000      	moveq	r0, #0
 80003de:	fab1 f381 	clz	r3, r1
 80003e2:	bf08      	it	eq
 80003e4:	3320      	addeq	r3, #32
 80003e6:	f1a3 030b 	sub.w	r3, r3, #11
 80003ea:	f1b3 0220 	subs.w	r2, r3, #32
 80003ee:	da0c      	bge.n	800040a <__adddf3+0x16e>
 80003f0:	320c      	adds	r2, #12
 80003f2:	dd08      	ble.n	8000406 <__adddf3+0x16a>
 80003f4:	f102 0c14 	add.w	ip, r2, #20
 80003f8:	f1c2 020c 	rsb	r2, r2, #12
 80003fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000400:	fa21 f102 	lsr.w	r1, r1, r2
 8000404:	e00c      	b.n	8000420 <__adddf3+0x184>
 8000406:	f102 0214 	add.w	r2, r2, #20
 800040a:	bfd8      	it	le
 800040c:	f1c2 0c20 	rsble	ip, r2, #32
 8000410:	fa01 f102 	lsl.w	r1, r1, r2
 8000414:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000418:	bfdc      	itt	le
 800041a:	ea41 010c 	orrle.w	r1, r1, ip
 800041e:	4090      	lslle	r0, r2
 8000420:	1ae4      	subs	r4, r4, r3
 8000422:	bfa2      	ittt	ge
 8000424:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000428:	4329      	orrge	r1, r5
 800042a:	bd30      	popge	{r4, r5, pc}
 800042c:	ea6f 0404 	mvn.w	r4, r4
 8000430:	3c1f      	subs	r4, #31
 8000432:	da1c      	bge.n	800046e <__adddf3+0x1d2>
 8000434:	340c      	adds	r4, #12
 8000436:	dc0e      	bgt.n	8000456 <__adddf3+0x1ba>
 8000438:	f104 0414 	add.w	r4, r4, #20
 800043c:	f1c4 0220 	rsb	r2, r4, #32
 8000440:	fa20 f004 	lsr.w	r0, r0, r4
 8000444:	fa01 f302 	lsl.w	r3, r1, r2
 8000448:	ea40 0003 	orr.w	r0, r0, r3
 800044c:	fa21 f304 	lsr.w	r3, r1, r4
 8000450:	ea45 0103 	orr.w	r1, r5, r3
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	f1c4 040c 	rsb	r4, r4, #12
 800045a:	f1c4 0220 	rsb	r2, r4, #32
 800045e:	fa20 f002 	lsr.w	r0, r0, r2
 8000462:	fa01 f304 	lsl.w	r3, r1, r4
 8000466:	ea40 0003 	orr.w	r0, r0, r3
 800046a:	4629      	mov	r1, r5
 800046c:	bd30      	pop	{r4, r5, pc}
 800046e:	fa21 f004 	lsr.w	r0, r1, r4
 8000472:	4629      	mov	r1, r5
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f094 0f00 	teq	r4, #0
 800047a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800047e:	bf06      	itte	eq
 8000480:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000484:	3401      	addeq	r4, #1
 8000486:	3d01      	subne	r5, #1
 8000488:	e74e      	b.n	8000328 <__adddf3+0x8c>
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf18      	it	ne
 8000490:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000494:	d029      	beq.n	80004ea <__adddf3+0x24e>
 8000496:	ea94 0f05 	teq	r4, r5
 800049a:	bf08      	it	eq
 800049c:	ea90 0f02 	teqeq	r0, r2
 80004a0:	d005      	beq.n	80004ae <__adddf3+0x212>
 80004a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004a6:	bf04      	itt	eq
 80004a8:	4619      	moveq	r1, r3
 80004aa:	4610      	moveq	r0, r2
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	ea91 0f03 	teq	r1, r3
 80004b2:	bf1e      	ittt	ne
 80004b4:	2100      	movne	r1, #0
 80004b6:	2000      	movne	r0, #0
 80004b8:	bd30      	popne	{r4, r5, pc}
 80004ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004be:	d105      	bne.n	80004cc <__adddf3+0x230>
 80004c0:	0040      	lsls	r0, r0, #1
 80004c2:	4149      	adcs	r1, r1
 80004c4:	bf28      	it	cs
 80004c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ca:	bd30      	pop	{r4, r5, pc}
 80004cc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004d0:	bf3c      	itt	cc
 80004d2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004d6:	bd30      	popcc	{r4, r5, pc}
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004dc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004e0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004e4:	f04f 0000 	mov.w	r0, #0
 80004e8:	bd30      	pop	{r4, r5, pc}
 80004ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ee:	bf1a      	itte	ne
 80004f0:	4619      	movne	r1, r3
 80004f2:	4610      	movne	r0, r2
 80004f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004f8:	bf1c      	itt	ne
 80004fa:	460b      	movne	r3, r1
 80004fc:	4602      	movne	r2, r0
 80004fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000502:	bf06      	itte	eq
 8000504:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000508:	ea91 0f03 	teqeq	r1, r3
 800050c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000510:	bd30      	pop	{r4, r5, pc}
 8000512:	bf00      	nop

08000514 <__aeabi_ui2d>:
 8000514:	f090 0f00 	teq	r0, #0
 8000518:	bf04      	itt	eq
 800051a:	2100      	moveq	r1, #0
 800051c:	4770      	bxeq	lr
 800051e:	b530      	push	{r4, r5, lr}
 8000520:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000524:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000528:	f04f 0500 	mov.w	r5, #0
 800052c:	f04f 0100 	mov.w	r1, #0
 8000530:	e750      	b.n	80003d4 <__adddf3+0x138>
 8000532:	bf00      	nop

08000534 <__aeabi_i2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000548:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800054c:	bf48      	it	mi
 800054e:	4240      	negmi	r0, r0
 8000550:	f04f 0100 	mov.w	r1, #0
 8000554:	e73e      	b.n	80003d4 <__adddf3+0x138>
 8000556:	bf00      	nop

08000558 <__aeabi_f2d>:
 8000558:	0042      	lsls	r2, r0, #1
 800055a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800055e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000562:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000566:	bf1f      	itttt	ne
 8000568:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800056c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000570:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000574:	4770      	bxne	lr
 8000576:	f092 0f00 	teq	r2, #0
 800057a:	bf14      	ite	ne
 800057c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000580:	4770      	bxeq	lr
 8000582:	b530      	push	{r4, r5, lr}
 8000584:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000588:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800058c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000590:	e720      	b.n	80003d4 <__adddf3+0x138>
 8000592:	bf00      	nop

08000594 <__aeabi_ul2d>:
 8000594:	ea50 0201 	orrs.w	r2, r0, r1
 8000598:	bf08      	it	eq
 800059a:	4770      	bxeq	lr
 800059c:	b530      	push	{r4, r5, lr}
 800059e:	f04f 0500 	mov.w	r5, #0
 80005a2:	e00a      	b.n	80005ba <__aeabi_l2d+0x16>

080005a4 <__aeabi_l2d>:
 80005a4:	ea50 0201 	orrs.w	r2, r0, r1
 80005a8:	bf08      	it	eq
 80005aa:	4770      	bxeq	lr
 80005ac:	b530      	push	{r4, r5, lr}
 80005ae:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005b2:	d502      	bpl.n	80005ba <__aeabi_l2d+0x16>
 80005b4:	4240      	negs	r0, r0
 80005b6:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005ba:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005be:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005c2:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005c6:	f43f aedc 	beq.w	8000382 <__adddf3+0xe6>
 80005ca:	f04f 0203 	mov.w	r2, #3
 80005ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005d2:	bf18      	it	ne
 80005d4:	3203      	addne	r2, #3
 80005d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005da:	bf18      	it	ne
 80005dc:	3203      	addne	r2, #3
 80005de:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005e2:	f1c2 0320 	rsb	r3, r2, #32
 80005e6:	fa00 fc03 	lsl.w	ip, r0, r3
 80005ea:	fa20 f002 	lsr.w	r0, r0, r2
 80005ee:	fa01 fe03 	lsl.w	lr, r1, r3
 80005f2:	ea40 000e 	orr.w	r0, r0, lr
 80005f6:	fa21 f102 	lsr.w	r1, r1, r2
 80005fa:	4414      	add	r4, r2
 80005fc:	e6c1      	b.n	8000382 <__adddf3+0xe6>
 80005fe:	bf00      	nop

08000600 <__aeabi_dmul>:
 8000600:	b570      	push	{r4, r5, r6, lr}
 8000602:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000606:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800060a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800060e:	bf1d      	ittte	ne
 8000610:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000614:	ea94 0f0c 	teqne	r4, ip
 8000618:	ea95 0f0c 	teqne	r5, ip
 800061c:	f000 f8de 	bleq	80007dc <__aeabi_dmul+0x1dc>
 8000620:	442c      	add	r4, r5
 8000622:	ea81 0603 	eor.w	r6, r1, r3
 8000626:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 800062a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800062e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 8000632:	bf18      	it	ne
 8000634:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000638:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800063c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000640:	d038      	beq.n	80006b4 <__aeabi_dmul+0xb4>
 8000642:	fba0 ce02 	umull	ip, lr, r0, r2
 8000646:	f04f 0500 	mov.w	r5, #0
 800064a:	fbe1 e502 	umlal	lr, r5, r1, r2
 800064e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 8000652:	fbe0 e503 	umlal	lr, r5, r0, r3
 8000656:	f04f 0600 	mov.w	r6, #0
 800065a:	fbe1 5603 	umlal	r5, r6, r1, r3
 800065e:	f09c 0f00 	teq	ip, #0
 8000662:	bf18      	it	ne
 8000664:	f04e 0e01 	orrne.w	lr, lr, #1
 8000668:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 800066c:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000670:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 8000674:	d204      	bcs.n	8000680 <__aeabi_dmul+0x80>
 8000676:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 800067a:	416d      	adcs	r5, r5
 800067c:	eb46 0606 	adc.w	r6, r6, r6
 8000680:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8000684:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000688:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 800068c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000690:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8000694:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000698:	bf88      	it	hi
 800069a:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 800069e:	d81e      	bhi.n	80006de <__aeabi_dmul+0xde>
 80006a0:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006a4:	bf08      	it	eq
 80006a6:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006aa:	f150 0000 	adcs.w	r0, r0, #0
 80006ae:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006b2:	bd70      	pop	{r4, r5, r6, pc}
 80006b4:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006b8:	ea46 0101 	orr.w	r1, r6, r1
 80006bc:	ea40 0002 	orr.w	r0, r0, r2
 80006c0:	ea81 0103 	eor.w	r1, r1, r3
 80006c4:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006c8:	bfc2      	ittt	gt
 80006ca:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006ce:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006d2:	bd70      	popgt	{r4, r5, r6, pc}
 80006d4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006d8:	f04f 0e00 	mov.w	lr, #0
 80006dc:	3c01      	subs	r4, #1
 80006de:	f300 80ab 	bgt.w	8000838 <__aeabi_dmul+0x238>
 80006e2:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006e6:	bfde      	ittt	le
 80006e8:	2000      	movle	r0, #0
 80006ea:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006ee:	bd70      	pople	{r4, r5, r6, pc}
 80006f0:	f1c4 0400 	rsb	r4, r4, #0
 80006f4:	3c20      	subs	r4, #32
 80006f6:	da35      	bge.n	8000764 <__aeabi_dmul+0x164>
 80006f8:	340c      	adds	r4, #12
 80006fa:	dc1b      	bgt.n	8000734 <__aeabi_dmul+0x134>
 80006fc:	f104 0414 	add.w	r4, r4, #20
 8000700:	f1c4 0520 	rsb	r5, r4, #32
 8000704:	fa00 f305 	lsl.w	r3, r0, r5
 8000708:	fa20 f004 	lsr.w	r0, r0, r4
 800070c:	fa01 f205 	lsl.w	r2, r1, r5
 8000710:	ea40 0002 	orr.w	r0, r0, r2
 8000714:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000718:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 800071c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000720:	fa21 f604 	lsr.w	r6, r1, r4
 8000724:	eb42 0106 	adc.w	r1, r2, r6
 8000728:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800072c:	bf08      	it	eq
 800072e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000732:	bd70      	pop	{r4, r5, r6, pc}
 8000734:	f1c4 040c 	rsb	r4, r4, #12
 8000738:	f1c4 0520 	rsb	r5, r4, #32
 800073c:	fa00 f304 	lsl.w	r3, r0, r4
 8000740:	fa20 f005 	lsr.w	r0, r0, r5
 8000744:	fa01 f204 	lsl.w	r2, r1, r4
 8000748:	ea40 0002 	orr.w	r0, r0, r2
 800074c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000750:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000754:	f141 0100 	adc.w	r1, r1, #0
 8000758:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800075c:	bf08      	it	eq
 800075e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000762:	bd70      	pop	{r4, r5, r6, pc}
 8000764:	f1c4 0520 	rsb	r5, r4, #32
 8000768:	fa00 f205 	lsl.w	r2, r0, r5
 800076c:	ea4e 0e02 	orr.w	lr, lr, r2
 8000770:	fa20 f304 	lsr.w	r3, r0, r4
 8000774:	fa01 f205 	lsl.w	r2, r1, r5
 8000778:	ea43 0302 	orr.w	r3, r3, r2
 800077c:	fa21 f004 	lsr.w	r0, r1, r4
 8000780:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000784:	fa21 f204 	lsr.w	r2, r1, r4
 8000788:	ea20 0002 	bic.w	r0, r0, r2
 800078c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000790:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000794:	bf08      	it	eq
 8000796:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800079a:	bd70      	pop	{r4, r5, r6, pc}
 800079c:	f094 0f00 	teq	r4, #0
 80007a0:	d10f      	bne.n	80007c2 <__aeabi_dmul+0x1c2>
 80007a2:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007a6:	0040      	lsls	r0, r0, #1
 80007a8:	eb41 0101 	adc.w	r1, r1, r1
 80007ac:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007b0:	bf08      	it	eq
 80007b2:	3c01      	subeq	r4, #1
 80007b4:	d0f7      	beq.n	80007a6 <__aeabi_dmul+0x1a6>
 80007b6:	ea41 0106 	orr.w	r1, r1, r6
 80007ba:	f095 0f00 	teq	r5, #0
 80007be:	bf18      	it	ne
 80007c0:	4770      	bxne	lr
 80007c2:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007c6:	0052      	lsls	r2, r2, #1
 80007c8:	eb43 0303 	adc.w	r3, r3, r3
 80007cc:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007d0:	bf08      	it	eq
 80007d2:	3d01      	subeq	r5, #1
 80007d4:	d0f7      	beq.n	80007c6 <__aeabi_dmul+0x1c6>
 80007d6:	ea43 0306 	orr.w	r3, r3, r6
 80007da:	4770      	bx	lr
 80007dc:	ea94 0f0c 	teq	r4, ip
 80007e0:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007e4:	bf18      	it	ne
 80007e6:	ea95 0f0c 	teqne	r5, ip
 80007ea:	d00c      	beq.n	8000806 <__aeabi_dmul+0x206>
 80007ec:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007f0:	bf18      	it	ne
 80007f2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007f6:	d1d1      	bne.n	800079c <__aeabi_dmul+0x19c>
 80007f8:	ea81 0103 	eor.w	r1, r1, r3
 80007fc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000800:	f04f 0000 	mov.w	r0, #0
 8000804:	bd70      	pop	{r4, r5, r6, pc}
 8000806:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800080a:	bf06      	itte	eq
 800080c:	4610      	moveq	r0, r2
 800080e:	4619      	moveq	r1, r3
 8000810:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000814:	d019      	beq.n	800084a <__aeabi_dmul+0x24a>
 8000816:	ea94 0f0c 	teq	r4, ip
 800081a:	d102      	bne.n	8000822 <__aeabi_dmul+0x222>
 800081c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000820:	d113      	bne.n	800084a <__aeabi_dmul+0x24a>
 8000822:	ea95 0f0c 	teq	r5, ip
 8000826:	d105      	bne.n	8000834 <__aeabi_dmul+0x234>
 8000828:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 800082c:	bf1c      	itt	ne
 800082e:	4610      	movne	r0, r2
 8000830:	4619      	movne	r1, r3
 8000832:	d10a      	bne.n	800084a <__aeabi_dmul+0x24a>
 8000834:	ea81 0103 	eor.w	r1, r1, r3
 8000838:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800083c:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000840:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000844:	f04f 0000 	mov.w	r0, #0
 8000848:	bd70      	pop	{r4, r5, r6, pc}
 800084a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 800084e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 8000852:	bd70      	pop	{r4, r5, r6, pc}

08000854 <__aeabi_ddiv>:
 8000854:	b570      	push	{r4, r5, r6, lr}
 8000856:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800085a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800085e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000862:	bf1d      	ittte	ne
 8000864:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000868:	ea94 0f0c 	teqne	r4, ip
 800086c:	ea95 0f0c 	teqne	r5, ip
 8000870:	f000 f8a7 	bleq	80009c2 <__aeabi_ddiv+0x16e>
 8000874:	eba4 0405 	sub.w	r4, r4, r5
 8000878:	ea81 0e03 	eor.w	lr, r1, r3
 800087c:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000880:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000884:	f000 8088 	beq.w	8000998 <__aeabi_ddiv+0x144>
 8000888:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800088c:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000890:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 8000894:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000898:	ea4f 2202 	mov.w	r2, r2, lsl #8
 800089c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008a0:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008a4:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008a8:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008ac:	429d      	cmp	r5, r3
 80008ae:	bf08      	it	eq
 80008b0:	4296      	cmpeq	r6, r2
 80008b2:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008b6:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008ba:	d202      	bcs.n	80008c2 <__aeabi_ddiv+0x6e>
 80008bc:	085b      	lsrs	r3, r3, #1
 80008be:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c2:	1ab6      	subs	r6, r6, r2
 80008c4:	eb65 0503 	sbc.w	r5, r5, r3
 80008c8:	085b      	lsrs	r3, r3, #1
 80008ca:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ce:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008d2:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008d6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008da:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008de:	bf22      	ittt	cs
 80008e0:	1ab6      	subcs	r6, r6, r2
 80008e2:	4675      	movcs	r5, lr
 80008e4:	ea40 000c 	orrcs.w	r0, r0, ip
 80008e8:	085b      	lsrs	r3, r3, #1
 80008ea:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ee:	ebb6 0e02 	subs.w	lr, r6, r2
 80008f2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008f6:	bf22      	ittt	cs
 80008f8:	1ab6      	subcs	r6, r6, r2
 80008fa:	4675      	movcs	r5, lr
 80008fc:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	ebb6 0e02 	subs.w	lr, r6, r2
 800090a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800090e:	bf22      	ittt	cs
 8000910:	1ab6      	subcs	r6, r6, r2
 8000912:	4675      	movcs	r5, lr
 8000914:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000918:	085b      	lsrs	r3, r3, #1
 800091a:	ea4f 0232 	mov.w	r2, r2, rrx
 800091e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000922:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000926:	bf22      	ittt	cs
 8000928:	1ab6      	subcs	r6, r6, r2
 800092a:	4675      	movcs	r5, lr
 800092c:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000930:	ea55 0e06 	orrs.w	lr, r5, r6
 8000934:	d018      	beq.n	8000968 <__aeabi_ddiv+0x114>
 8000936:	ea4f 1505 	mov.w	r5, r5, lsl #4
 800093a:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 800093e:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8000942:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000946:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 800094a:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800094e:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 8000952:	d1c0      	bne.n	80008d6 <__aeabi_ddiv+0x82>
 8000954:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000958:	d10b      	bne.n	8000972 <__aeabi_ddiv+0x11e>
 800095a:	ea41 0100 	orr.w	r1, r1, r0
 800095e:	f04f 0000 	mov.w	r0, #0
 8000962:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 8000966:	e7b6      	b.n	80008d6 <__aeabi_ddiv+0x82>
 8000968:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 800096c:	bf04      	itt	eq
 800096e:	4301      	orreq	r1, r0
 8000970:	2000      	moveq	r0, #0
 8000972:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000976:	bf88      	it	hi
 8000978:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 800097c:	f63f aeaf 	bhi.w	80006de <__aeabi_dmul+0xde>
 8000980:	ebb5 0c03 	subs.w	ip, r5, r3
 8000984:	bf04      	itt	eq
 8000986:	ebb6 0c02 	subseq.w	ip, r6, r2
 800098a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800098e:	f150 0000 	adcs.w	r0, r0, #0
 8000992:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000996:	bd70      	pop	{r4, r5, r6, pc}
 8000998:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 800099c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009a0:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009a4:	bfc2      	ittt	gt
 80009a6:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009aa:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009ae:	bd70      	popgt	{r4, r5, r6, pc}
 80009b0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009b4:	f04f 0e00 	mov.w	lr, #0
 80009b8:	3c01      	subs	r4, #1
 80009ba:	e690      	b.n	80006de <__aeabi_dmul+0xde>
 80009bc:	ea45 0e06 	orr.w	lr, r5, r6
 80009c0:	e68d      	b.n	80006de <__aeabi_dmul+0xde>
 80009c2:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009c6:	ea94 0f0c 	teq	r4, ip
 80009ca:	bf08      	it	eq
 80009cc:	ea95 0f0c 	teqeq	r5, ip
 80009d0:	f43f af3b 	beq.w	800084a <__aeabi_dmul+0x24a>
 80009d4:	ea94 0f0c 	teq	r4, ip
 80009d8:	d10a      	bne.n	80009f0 <__aeabi_ddiv+0x19c>
 80009da:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009de:	f47f af34 	bne.w	800084a <__aeabi_dmul+0x24a>
 80009e2:	ea95 0f0c 	teq	r5, ip
 80009e6:	f47f af25 	bne.w	8000834 <__aeabi_dmul+0x234>
 80009ea:	4610      	mov	r0, r2
 80009ec:	4619      	mov	r1, r3
 80009ee:	e72c      	b.n	800084a <__aeabi_dmul+0x24a>
 80009f0:	ea95 0f0c 	teq	r5, ip
 80009f4:	d106      	bne.n	8000a04 <__aeabi_ddiv+0x1b0>
 80009f6:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009fa:	f43f aefd 	beq.w	80007f8 <__aeabi_dmul+0x1f8>
 80009fe:	4610      	mov	r0, r2
 8000a00:	4619      	mov	r1, r3
 8000a02:	e722      	b.n	800084a <__aeabi_dmul+0x24a>
 8000a04:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a08:	bf18      	it	ne
 8000a0a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a0e:	f47f aec5 	bne.w	800079c <__aeabi_dmul+0x19c>
 8000a12:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a16:	f47f af0d 	bne.w	8000834 <__aeabi_dmul+0x234>
 8000a1a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a1e:	f47f aeeb 	bne.w	80007f8 <__aeabi_dmul+0x1f8>
 8000a22:	e712      	b.n	800084a <__aeabi_dmul+0x24a>

08000a24 <__gedf2>:
 8000a24:	f04f 3cff 	mov.w	ip, #4294967295
 8000a28:	e006      	b.n	8000a38 <__cmpdf2+0x4>
 8000a2a:	bf00      	nop

08000a2c <__ledf2>:
 8000a2c:	f04f 0c01 	mov.w	ip, #1
 8000a30:	e002      	b.n	8000a38 <__cmpdf2+0x4>
 8000a32:	bf00      	nop

08000a34 <__cmpdf2>:
 8000a34:	f04f 0c01 	mov.w	ip, #1
 8000a38:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a44:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a48:	bf18      	it	ne
 8000a4a:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a4e:	d01b      	beq.n	8000a88 <__cmpdf2+0x54>
 8000a50:	b001      	add	sp, #4
 8000a52:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a56:	bf0c      	ite	eq
 8000a58:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a5c:	ea91 0f03 	teqne	r1, r3
 8000a60:	bf02      	ittt	eq
 8000a62:	ea90 0f02 	teqeq	r0, r2
 8000a66:	2000      	moveq	r0, #0
 8000a68:	4770      	bxeq	lr
 8000a6a:	f110 0f00 	cmn.w	r0, #0
 8000a6e:	ea91 0f03 	teq	r1, r3
 8000a72:	bf58      	it	pl
 8000a74:	4299      	cmppl	r1, r3
 8000a76:	bf08      	it	eq
 8000a78:	4290      	cmpeq	r0, r2
 8000a7a:	bf2c      	ite	cs
 8000a7c:	17d8      	asrcs	r0, r3, #31
 8000a7e:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a82:	f040 0001 	orr.w	r0, r0, #1
 8000a86:	4770      	bx	lr
 8000a88:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a8c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a90:	d102      	bne.n	8000a98 <__cmpdf2+0x64>
 8000a92:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a96:	d107      	bne.n	8000aa8 <__cmpdf2+0x74>
 8000a98:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a9c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa0:	d1d6      	bne.n	8000a50 <__cmpdf2+0x1c>
 8000aa2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aa6:	d0d3      	beq.n	8000a50 <__cmpdf2+0x1c>
 8000aa8:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000aac:	4770      	bx	lr
 8000aae:	bf00      	nop

08000ab0 <__aeabi_cdrcmple>:
 8000ab0:	4684      	mov	ip, r0
 8000ab2:	4610      	mov	r0, r2
 8000ab4:	4662      	mov	r2, ip
 8000ab6:	468c      	mov	ip, r1
 8000ab8:	4619      	mov	r1, r3
 8000aba:	4663      	mov	r3, ip
 8000abc:	e000      	b.n	8000ac0 <__aeabi_cdcmpeq>
 8000abe:	bf00      	nop

08000ac0 <__aeabi_cdcmpeq>:
 8000ac0:	b501      	push	{r0, lr}
 8000ac2:	f7ff ffb7 	bl	8000a34 <__cmpdf2>
 8000ac6:	2800      	cmp	r0, #0
 8000ac8:	bf48      	it	mi
 8000aca:	f110 0f00 	cmnmi.w	r0, #0
 8000ace:	bd01      	pop	{r0, pc}

08000ad0 <__aeabi_dcmpeq>:
 8000ad0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ad4:	f7ff fff4 	bl	8000ac0 <__aeabi_cdcmpeq>
 8000ad8:	bf0c      	ite	eq
 8000ada:	2001      	moveq	r0, #1
 8000adc:	2000      	movne	r0, #0
 8000ade:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ae2:	bf00      	nop

08000ae4 <__aeabi_dcmplt>:
 8000ae4:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ae8:	f7ff ffea 	bl	8000ac0 <__aeabi_cdcmpeq>
 8000aec:	bf34      	ite	cc
 8000aee:	2001      	movcc	r0, #1
 8000af0:	2000      	movcs	r0, #0
 8000af2:	f85d fb08 	ldr.w	pc, [sp], #8
 8000af6:	bf00      	nop

08000af8 <__aeabi_dcmple>:
 8000af8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000afc:	f7ff ffe0 	bl	8000ac0 <__aeabi_cdcmpeq>
 8000b00:	bf94      	ite	ls
 8000b02:	2001      	movls	r0, #1
 8000b04:	2000      	movhi	r0, #0
 8000b06:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b0a:	bf00      	nop

08000b0c <__aeabi_dcmpge>:
 8000b0c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b10:	f7ff ffce 	bl	8000ab0 <__aeabi_cdrcmple>
 8000b14:	bf94      	ite	ls
 8000b16:	2001      	movls	r0, #1
 8000b18:	2000      	movhi	r0, #0
 8000b1a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1e:	bf00      	nop

08000b20 <__aeabi_dcmpgt>:
 8000b20:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b24:	f7ff ffc4 	bl	8000ab0 <__aeabi_cdrcmple>
 8000b28:	bf34      	ite	cc
 8000b2a:	2001      	movcc	r0, #1
 8000b2c:	2000      	movcs	r0, #0
 8000b2e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b32:	bf00      	nop

08000b34 <__aeabi_dcmpun>:
 8000b34:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b38:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b3c:	d102      	bne.n	8000b44 <__aeabi_dcmpun+0x10>
 8000b3e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b42:	d10a      	bne.n	8000b5a <__aeabi_dcmpun+0x26>
 8000b44:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b4c:	d102      	bne.n	8000b54 <__aeabi_dcmpun+0x20>
 8000b4e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b52:	d102      	bne.n	8000b5a <__aeabi_dcmpun+0x26>
 8000b54:	f04f 0000 	mov.w	r0, #0
 8000b58:	4770      	bx	lr
 8000b5a:	f04f 0001 	mov.w	r0, #1
 8000b5e:	4770      	bx	lr

08000b60 <__aeabi_d2iz>:
 8000b60:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b64:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b68:	d215      	bcs.n	8000b96 <__aeabi_d2iz+0x36>
 8000b6a:	d511      	bpl.n	8000b90 <__aeabi_d2iz+0x30>
 8000b6c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b70:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b74:	d912      	bls.n	8000b9c <__aeabi_d2iz+0x3c>
 8000b76:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b7a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b7e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b82:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b86:	fa23 f002 	lsr.w	r0, r3, r2
 8000b8a:	bf18      	it	ne
 8000b8c:	4240      	negne	r0, r0
 8000b8e:	4770      	bx	lr
 8000b90:	f04f 0000 	mov.w	r0, #0
 8000b94:	4770      	bx	lr
 8000b96:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b9a:	d105      	bne.n	8000ba8 <__aeabi_d2iz+0x48>
 8000b9c:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000ba0:	bf08      	it	eq
 8000ba2:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000ba6:	4770      	bx	lr
 8000ba8:	f04f 0000 	mov.w	r0, #0
 8000bac:	4770      	bx	lr
 8000bae:	bf00      	nop

08000bb0 <__aeabi_uldivmod>:
 8000bb0:	b953      	cbnz	r3, 8000bc8 <__aeabi_uldivmod+0x18>
 8000bb2:	b94a      	cbnz	r2, 8000bc8 <__aeabi_uldivmod+0x18>
 8000bb4:	2900      	cmp	r1, #0
 8000bb6:	bf08      	it	eq
 8000bb8:	2800      	cmpeq	r0, #0
 8000bba:	bf1c      	itt	ne
 8000bbc:	f04f 31ff 	movne.w	r1, #4294967295
 8000bc0:	f04f 30ff 	movne.w	r0, #4294967295
 8000bc4:	f000 b97a 	b.w	8000ebc <__aeabi_idiv0>
 8000bc8:	f1ad 0c08 	sub.w	ip, sp, #8
 8000bcc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000bd0:	f000 f806 	bl	8000be0 <__udivmoddi4>
 8000bd4:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000bd8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000bdc:	b004      	add	sp, #16
 8000bde:	4770      	bx	lr

08000be0 <__udivmoddi4>:
 8000be0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000be4:	468c      	mov	ip, r1
 8000be6:	460d      	mov	r5, r1
 8000be8:	4604      	mov	r4, r0
 8000bea:	9e08      	ldr	r6, [sp, #32]
 8000bec:	2b00      	cmp	r3, #0
 8000bee:	d151      	bne.n	8000c94 <__udivmoddi4+0xb4>
 8000bf0:	428a      	cmp	r2, r1
 8000bf2:	4617      	mov	r7, r2
 8000bf4:	d96d      	bls.n	8000cd2 <__udivmoddi4+0xf2>
 8000bf6:	fab2 fe82 	clz	lr, r2
 8000bfa:	f1be 0f00 	cmp.w	lr, #0
 8000bfe:	d00b      	beq.n	8000c18 <__udivmoddi4+0x38>
 8000c00:	f1ce 0c20 	rsb	ip, lr, #32
 8000c04:	fa01 f50e 	lsl.w	r5, r1, lr
 8000c08:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000c0c:	fa02 f70e 	lsl.w	r7, r2, lr
 8000c10:	ea4c 0c05 	orr.w	ip, ip, r5
 8000c14:	fa00 f40e 	lsl.w	r4, r0, lr
 8000c18:	ea4f 4a17 	mov.w	sl, r7, lsr #16
 8000c1c:	0c25      	lsrs	r5, r4, #16
 8000c1e:	fbbc f8fa 	udiv	r8, ip, sl
 8000c22:	fa1f f987 	uxth.w	r9, r7
 8000c26:	fb0a cc18 	mls	ip, sl, r8, ip
 8000c2a:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
 8000c2e:	fb08 f309 	mul.w	r3, r8, r9
 8000c32:	42ab      	cmp	r3, r5
 8000c34:	d90a      	bls.n	8000c4c <__udivmoddi4+0x6c>
 8000c36:	19ed      	adds	r5, r5, r7
 8000c38:	f108 32ff 	add.w	r2, r8, #4294967295
 8000c3c:	f080 8123 	bcs.w	8000e86 <__udivmoddi4+0x2a6>
 8000c40:	42ab      	cmp	r3, r5
 8000c42:	f240 8120 	bls.w	8000e86 <__udivmoddi4+0x2a6>
 8000c46:	f1a8 0802 	sub.w	r8, r8, #2
 8000c4a:	443d      	add	r5, r7
 8000c4c:	1aed      	subs	r5, r5, r3
 8000c4e:	b2a4      	uxth	r4, r4
 8000c50:	fbb5 f0fa 	udiv	r0, r5, sl
 8000c54:	fb0a 5510 	mls	r5, sl, r0, r5
 8000c58:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000c5c:	fb00 f909 	mul.w	r9, r0, r9
 8000c60:	45a1      	cmp	r9, r4
 8000c62:	d909      	bls.n	8000c78 <__udivmoddi4+0x98>
 8000c64:	19e4      	adds	r4, r4, r7
 8000c66:	f100 33ff 	add.w	r3, r0, #4294967295
 8000c6a:	f080 810a 	bcs.w	8000e82 <__udivmoddi4+0x2a2>
 8000c6e:	45a1      	cmp	r9, r4
 8000c70:	f240 8107 	bls.w	8000e82 <__udivmoddi4+0x2a2>
 8000c74:	3802      	subs	r0, #2
 8000c76:	443c      	add	r4, r7
 8000c78:	eba4 0409 	sub.w	r4, r4, r9
 8000c7c:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000c80:	2100      	movs	r1, #0
 8000c82:	2e00      	cmp	r6, #0
 8000c84:	d061      	beq.n	8000d4a <__udivmoddi4+0x16a>
 8000c86:	fa24 f40e 	lsr.w	r4, r4, lr
 8000c8a:	2300      	movs	r3, #0
 8000c8c:	6034      	str	r4, [r6, #0]
 8000c8e:	6073      	str	r3, [r6, #4]
 8000c90:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c94:	428b      	cmp	r3, r1
 8000c96:	d907      	bls.n	8000ca8 <__udivmoddi4+0xc8>
 8000c98:	2e00      	cmp	r6, #0
 8000c9a:	d054      	beq.n	8000d46 <__udivmoddi4+0x166>
 8000c9c:	2100      	movs	r1, #0
 8000c9e:	e886 0021 	stmia.w	r6, {r0, r5}
 8000ca2:	4608      	mov	r0, r1
 8000ca4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ca8:	fab3 f183 	clz	r1, r3
 8000cac:	2900      	cmp	r1, #0
 8000cae:	f040 808e 	bne.w	8000dce <__udivmoddi4+0x1ee>
 8000cb2:	42ab      	cmp	r3, r5
 8000cb4:	d302      	bcc.n	8000cbc <__udivmoddi4+0xdc>
 8000cb6:	4282      	cmp	r2, r0
 8000cb8:	f200 80fa 	bhi.w	8000eb0 <__udivmoddi4+0x2d0>
 8000cbc:	1a84      	subs	r4, r0, r2
 8000cbe:	eb65 0503 	sbc.w	r5, r5, r3
 8000cc2:	2001      	movs	r0, #1
 8000cc4:	46ac      	mov	ip, r5
 8000cc6:	2e00      	cmp	r6, #0
 8000cc8:	d03f      	beq.n	8000d4a <__udivmoddi4+0x16a>
 8000cca:	e886 1010 	stmia.w	r6, {r4, ip}
 8000cce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000cd2:	b912      	cbnz	r2, 8000cda <__udivmoddi4+0xfa>
 8000cd4:	2701      	movs	r7, #1
 8000cd6:	fbb7 f7f2 	udiv	r7, r7, r2
 8000cda:	fab7 fe87 	clz	lr, r7
 8000cde:	f1be 0f00 	cmp.w	lr, #0
 8000ce2:	d134      	bne.n	8000d4e <__udivmoddi4+0x16e>
 8000ce4:	1beb      	subs	r3, r5, r7
 8000ce6:	0c3a      	lsrs	r2, r7, #16
 8000ce8:	fa1f fc87 	uxth.w	ip, r7
 8000cec:	2101      	movs	r1, #1
 8000cee:	fbb3 f8f2 	udiv	r8, r3, r2
 8000cf2:	0c25      	lsrs	r5, r4, #16
 8000cf4:	fb02 3318 	mls	r3, r2, r8, r3
 8000cf8:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
 8000cfc:	fb0c f308 	mul.w	r3, ip, r8
 8000d00:	42ab      	cmp	r3, r5
 8000d02:	d907      	bls.n	8000d14 <__udivmoddi4+0x134>
 8000d04:	19ed      	adds	r5, r5, r7
 8000d06:	f108 30ff 	add.w	r0, r8, #4294967295
 8000d0a:	d202      	bcs.n	8000d12 <__udivmoddi4+0x132>
 8000d0c:	42ab      	cmp	r3, r5
 8000d0e:	f200 80d1 	bhi.w	8000eb4 <__udivmoddi4+0x2d4>
 8000d12:	4680      	mov	r8, r0
 8000d14:	1aed      	subs	r5, r5, r3
 8000d16:	b2a3      	uxth	r3, r4
 8000d18:	fbb5 f0f2 	udiv	r0, r5, r2
 8000d1c:	fb02 5510 	mls	r5, r2, r0, r5
 8000d20:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
 8000d24:	fb0c fc00 	mul.w	ip, ip, r0
 8000d28:	45a4      	cmp	ip, r4
 8000d2a:	d907      	bls.n	8000d3c <__udivmoddi4+0x15c>
 8000d2c:	19e4      	adds	r4, r4, r7
 8000d2e:	f100 33ff 	add.w	r3, r0, #4294967295
 8000d32:	d202      	bcs.n	8000d3a <__udivmoddi4+0x15a>
 8000d34:	45a4      	cmp	ip, r4
 8000d36:	f200 80b8 	bhi.w	8000eaa <__udivmoddi4+0x2ca>
 8000d3a:	4618      	mov	r0, r3
 8000d3c:	eba4 040c 	sub.w	r4, r4, ip
 8000d40:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000d44:	e79d      	b.n	8000c82 <__udivmoddi4+0xa2>
 8000d46:	4631      	mov	r1, r6
 8000d48:	4630      	mov	r0, r6
 8000d4a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d4e:	f1ce 0420 	rsb	r4, lr, #32
 8000d52:	fa05 f30e 	lsl.w	r3, r5, lr
 8000d56:	fa07 f70e 	lsl.w	r7, r7, lr
 8000d5a:	fa20 f804 	lsr.w	r8, r0, r4
 8000d5e:	0c3a      	lsrs	r2, r7, #16
 8000d60:	fa25 f404 	lsr.w	r4, r5, r4
 8000d64:	ea48 0803 	orr.w	r8, r8, r3
 8000d68:	fbb4 f1f2 	udiv	r1, r4, r2
 8000d6c:	ea4f 4518 	mov.w	r5, r8, lsr #16
 8000d70:	fb02 4411 	mls	r4, r2, r1, r4
 8000d74:	fa1f fc87 	uxth.w	ip, r7
 8000d78:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
 8000d7c:	fb01 f30c 	mul.w	r3, r1, ip
 8000d80:	42ab      	cmp	r3, r5
 8000d82:	fa00 f40e 	lsl.w	r4, r0, lr
 8000d86:	d909      	bls.n	8000d9c <__udivmoddi4+0x1bc>
 8000d88:	19ed      	adds	r5, r5, r7
 8000d8a:	f101 30ff 	add.w	r0, r1, #4294967295
 8000d8e:	f080 808a 	bcs.w	8000ea6 <__udivmoddi4+0x2c6>
 8000d92:	42ab      	cmp	r3, r5
 8000d94:	f240 8087 	bls.w	8000ea6 <__udivmoddi4+0x2c6>
 8000d98:	3902      	subs	r1, #2
 8000d9a:	443d      	add	r5, r7
 8000d9c:	1aeb      	subs	r3, r5, r3
 8000d9e:	fa1f f588 	uxth.w	r5, r8
 8000da2:	fbb3 f0f2 	udiv	r0, r3, r2
 8000da6:	fb02 3310 	mls	r3, r2, r0, r3
 8000daa:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
 8000dae:	fb00 f30c 	mul.w	r3, r0, ip
 8000db2:	42ab      	cmp	r3, r5
 8000db4:	d907      	bls.n	8000dc6 <__udivmoddi4+0x1e6>
 8000db6:	19ed      	adds	r5, r5, r7
 8000db8:	f100 38ff 	add.w	r8, r0, #4294967295
 8000dbc:	d26f      	bcs.n	8000e9e <__udivmoddi4+0x2be>
 8000dbe:	42ab      	cmp	r3, r5
 8000dc0:	d96d      	bls.n	8000e9e <__udivmoddi4+0x2be>
 8000dc2:	3802      	subs	r0, #2
 8000dc4:	443d      	add	r5, r7
 8000dc6:	1aeb      	subs	r3, r5, r3
 8000dc8:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000dcc:	e78f      	b.n	8000cee <__udivmoddi4+0x10e>
 8000dce:	f1c1 0720 	rsb	r7, r1, #32
 8000dd2:	fa22 f807 	lsr.w	r8, r2, r7
 8000dd6:	408b      	lsls	r3, r1
 8000dd8:	fa05 f401 	lsl.w	r4, r5, r1
 8000ddc:	ea48 0303 	orr.w	r3, r8, r3
 8000de0:	fa20 fe07 	lsr.w	lr, r0, r7
 8000de4:	ea4f 4c13 	mov.w	ip, r3, lsr #16
 8000de8:	40fd      	lsrs	r5, r7
 8000dea:	ea4e 0e04 	orr.w	lr, lr, r4
 8000dee:	fbb5 f9fc 	udiv	r9, r5, ip
 8000df2:	ea4f 441e 	mov.w	r4, lr, lsr #16
 8000df6:	fb0c 5519 	mls	r5, ip, r9, r5
 8000dfa:	fa1f f883 	uxth.w	r8, r3
 8000dfe:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
 8000e02:	fb09 f408 	mul.w	r4, r9, r8
 8000e06:	42ac      	cmp	r4, r5
 8000e08:	fa02 f201 	lsl.w	r2, r2, r1
 8000e0c:	fa00 fa01 	lsl.w	sl, r0, r1
 8000e10:	d908      	bls.n	8000e24 <__udivmoddi4+0x244>
 8000e12:	18ed      	adds	r5, r5, r3
 8000e14:	f109 30ff 	add.w	r0, r9, #4294967295
 8000e18:	d243      	bcs.n	8000ea2 <__udivmoddi4+0x2c2>
 8000e1a:	42ac      	cmp	r4, r5
 8000e1c:	d941      	bls.n	8000ea2 <__udivmoddi4+0x2c2>
 8000e1e:	f1a9 0902 	sub.w	r9, r9, #2
 8000e22:	441d      	add	r5, r3
 8000e24:	1b2d      	subs	r5, r5, r4
 8000e26:	fa1f fe8e 	uxth.w	lr, lr
 8000e2a:	fbb5 f0fc 	udiv	r0, r5, ip
 8000e2e:	fb0c 5510 	mls	r5, ip, r0, r5
 8000e32:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
 8000e36:	fb00 f808 	mul.w	r8, r0, r8
 8000e3a:	45a0      	cmp	r8, r4
 8000e3c:	d907      	bls.n	8000e4e <__udivmoddi4+0x26e>
 8000e3e:	18e4      	adds	r4, r4, r3
 8000e40:	f100 35ff 	add.w	r5, r0, #4294967295
 8000e44:	d229      	bcs.n	8000e9a <__udivmoddi4+0x2ba>
 8000e46:	45a0      	cmp	r8, r4
 8000e48:	d927      	bls.n	8000e9a <__udivmoddi4+0x2ba>
 8000e4a:	3802      	subs	r0, #2
 8000e4c:	441c      	add	r4, r3
 8000e4e:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000e52:	eba4 0408 	sub.w	r4, r4, r8
 8000e56:	fba0 8902 	umull	r8, r9, r0, r2
 8000e5a:	454c      	cmp	r4, r9
 8000e5c:	46c6      	mov	lr, r8
 8000e5e:	464d      	mov	r5, r9
 8000e60:	d315      	bcc.n	8000e8e <__udivmoddi4+0x2ae>
 8000e62:	d012      	beq.n	8000e8a <__udivmoddi4+0x2aa>
 8000e64:	b156      	cbz	r6, 8000e7c <__udivmoddi4+0x29c>
 8000e66:	ebba 030e 	subs.w	r3, sl, lr
 8000e6a:	eb64 0405 	sbc.w	r4, r4, r5
 8000e6e:	fa04 f707 	lsl.w	r7, r4, r7
 8000e72:	40cb      	lsrs	r3, r1
 8000e74:	431f      	orrs	r7, r3
 8000e76:	40cc      	lsrs	r4, r1
 8000e78:	6037      	str	r7, [r6, #0]
 8000e7a:	6074      	str	r4, [r6, #4]
 8000e7c:	2100      	movs	r1, #0
 8000e7e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e82:	4618      	mov	r0, r3
 8000e84:	e6f8      	b.n	8000c78 <__udivmoddi4+0x98>
 8000e86:	4690      	mov	r8, r2
 8000e88:	e6e0      	b.n	8000c4c <__udivmoddi4+0x6c>
 8000e8a:	45c2      	cmp	sl, r8
 8000e8c:	d2ea      	bcs.n	8000e64 <__udivmoddi4+0x284>
 8000e8e:	ebb8 0e02 	subs.w	lr, r8, r2
 8000e92:	eb69 0503 	sbc.w	r5, r9, r3
 8000e96:	3801      	subs	r0, #1
 8000e98:	e7e4      	b.n	8000e64 <__udivmoddi4+0x284>
 8000e9a:	4628      	mov	r0, r5
 8000e9c:	e7d7      	b.n	8000e4e <__udivmoddi4+0x26e>
 8000e9e:	4640      	mov	r0, r8
 8000ea0:	e791      	b.n	8000dc6 <__udivmoddi4+0x1e6>
 8000ea2:	4681      	mov	r9, r0
 8000ea4:	e7be      	b.n	8000e24 <__udivmoddi4+0x244>
 8000ea6:	4601      	mov	r1, r0
 8000ea8:	e778      	b.n	8000d9c <__udivmoddi4+0x1bc>
 8000eaa:	3802      	subs	r0, #2
 8000eac:	443c      	add	r4, r7
 8000eae:	e745      	b.n	8000d3c <__udivmoddi4+0x15c>
 8000eb0:	4608      	mov	r0, r1
 8000eb2:	e708      	b.n	8000cc6 <__udivmoddi4+0xe6>
 8000eb4:	f1a8 0802 	sub.w	r8, r8, #2
 8000eb8:	443d      	add	r5, r7
 8000eba:	e72b      	b.n	8000d14 <__udivmoddi4+0x134>

08000ebc <__aeabi_idiv0>:
 8000ebc:	4770      	bx	lr
 8000ebe:	bf00      	nop

08000ec0 <OLED_Init>:
static void OLED_1322_WriteData(int cmd);
void OLED_1322_drawPixel(int16_t x, int16_t y, uint8_t gscale);

// function bodies
bool OLED_Init(void)
{
 8000ec0:	b580      	push	{r7, lr}
 8000ec2:	af00      	add	r7, sp, #0
  OLED_1322_InitHW();
 8000ec4:	f000 f80e 	bl	8000ee4 <OLED_1322_InitHW>
  OLED_1322_InitSW();
 8000ec8:	f000 fa32 	bl	8001330 <OLED_1322_InitSW>

  DISP_SetHiLevelDisp(SSD1322_LCDWIDTH, SSD1322_LCDHEIGHT, OLED_1322_drawPixel);
 8000ecc:	4a04      	ldr	r2, [pc, #16]	; (8000ee0 <OLED_Init+0x20>)
 8000ece:	2140      	movs	r1, #64	; 0x40
 8000ed0:	f44f 7080 	mov.w	r0, #256	; 0x100
 8000ed4:	f000 ff26 	bl	8001d24 <DISP_SetHiLevelDisp>
  return true;
 8000ed8:	2301      	movs	r3, #1
}
 8000eda:	4618      	mov	r0, r3
 8000edc:	bd80      	pop	{r7, pc}
 8000ede:	bf00      	nop
 8000ee0:	08001281 	.word	0x08001281

08000ee4 <OLED_1322_InitHW>:

static void OLED_1322_InitHW(void)
{
 8000ee4:	b580      	push	{r7, lr}
 8000ee6:	b08c      	sub	sp, #48	; 0x30
 8000ee8:	af00      	add	r7, sp, #0
  Nucleo_SetPinGPIO(OLED_RST, output);
 8000eea:	2203      	movs	r2, #3
 8000eec:	2108      	movs	r1, #8
 8000eee:	4856      	ldr	r0, [pc, #344]	; (8001048 <OLED_1322_InitHW+0x164>)
 8000ef0:	f000 fbc2 	bl	8001678 <Nucleo_SetPinGPIO>
 8000ef4:	4b54      	ldr	r3, [pc, #336]	; (8001048 <OLED_1322_InitHW+0x164>)
 8000ef6:	60bb      	str	r3, [r7, #8]
 8000ef8:	2308      	movs	r3, #8
 8000efa:	607b      	str	r3, [r7, #4]
 8000efc:	2301      	movs	r3, #1
 8000efe:	70fb      	strb	r3, [r7, #3]
{
// non atomic access  gpio->ODR |= (1 << bitnum);
#if defined(STM32F40XX) // | F429 ??
  if (state) { gpio->BSRRL = 1 << bitnum; } else { gpio->BSRRH = 1 << bitnum; }
#else
  gpio->BSRR = (state) ? (1 << (bitnum)) : ((1 << (bitnum)) << 16);
 8000f00:	78fb      	ldrb	r3, [r7, #3]
 8000f02:	2b00      	cmp	r3, #0
 8000f04:	d005      	beq.n	8000f12 <OLED_1322_InitHW+0x2e>
 8000f06:	2201      	movs	r2, #1
 8000f08:	687b      	ldr	r3, [r7, #4]
 8000f0a:	fa02 f303 	lsl.w	r3, r2, r3
 8000f0e:	461a      	mov	r2, r3
 8000f10:	e005      	b.n	8000f1e <OLED_1322_InitHW+0x3a>
 8000f12:	2201      	movs	r2, #1
 8000f14:	687b      	ldr	r3, [r7, #4]
 8000f16:	fa02 f303 	lsl.w	r3, r2, r3
 8000f1a:	041b      	lsls	r3, r3, #16
 8000f1c:	461a      	mov	r2, r3
 8000f1e:	68bb      	ldr	r3, [r7, #8]
 8000f20:	619a      	str	r2, [r3, #24]
  GPIOWrite(OLED_RST, 1);
  Nucleo_SetPinGPIO(OLED_CS, output_open);    // pozor, nema prevodnik, ale chce OC !!
 8000f22:	2204      	movs	r2, #4
 8000f24:	2107      	movs	r1, #7
 8000f26:	4849      	ldr	r0, [pc, #292]	; (800104c <OLED_1322_InitHW+0x168>)
 8000f28:	f000 fba6 	bl	8001678 <Nucleo_SetPinGPIO>
 8000f2c:	4b47      	ldr	r3, [pc, #284]	; (800104c <OLED_1322_InitHW+0x168>)
 8000f2e:	617b      	str	r3, [r7, #20]
 8000f30:	2307      	movs	r3, #7
 8000f32:	613b      	str	r3, [r7, #16]
 8000f34:	2301      	movs	r3, #1
 8000f36:	73fb      	strb	r3, [r7, #15]
 8000f38:	7bfb      	ldrb	r3, [r7, #15]
 8000f3a:	2b00      	cmp	r3, #0
 8000f3c:	d005      	beq.n	8000f4a <OLED_1322_InitHW+0x66>
 8000f3e:	2201      	movs	r2, #1
 8000f40:	693b      	ldr	r3, [r7, #16]
 8000f42:	fa02 f303 	lsl.w	r3, r2, r3
 8000f46:	461a      	mov	r2, r3
 8000f48:	e005      	b.n	8000f56 <OLED_1322_InitHW+0x72>
 8000f4a:	2201      	movs	r2, #1
 8000f4c:	693b      	ldr	r3, [r7, #16]
 8000f4e:	fa02 f303 	lsl.w	r3, r2, r3
 8000f52:	041b      	lsls	r3, r3, #16
 8000f54:	461a      	mov	r2, r3
 8000f56:	697b      	ldr	r3, [r7, #20]
 8000f58:	619a      	str	r2, [r3, #24]
  GPIOWrite(OLED_CS, 1);
  Nucleo_SetPinGPIO(OLED_DC, output);
 8000f5a:	2203      	movs	r2, #3
 8000f5c:	2109      	movs	r1, #9
 8000f5e:	483a      	ldr	r0, [pc, #232]	; (8001048 <OLED_1322_InitHW+0x164>)
 8000f60:	f000 fb8a 	bl	8001678 <Nucleo_SetPinGPIO>
 8000f64:	4b38      	ldr	r3, [pc, #224]	; (8001048 <OLED_1322_InitHW+0x164>)
 8000f66:	623b      	str	r3, [r7, #32]
 8000f68:	2309      	movs	r3, #9
 8000f6a:	61fb      	str	r3, [r7, #28]
 8000f6c:	2300      	movs	r3, #0
 8000f6e:	76fb      	strb	r3, [r7, #27]
 8000f70:	7efb      	ldrb	r3, [r7, #27]
 8000f72:	2b00      	cmp	r3, #0
 8000f74:	d005      	beq.n	8000f82 <OLED_1322_InitHW+0x9e>
 8000f76:	2201      	movs	r2, #1
 8000f78:	69fb      	ldr	r3, [r7, #28]
 8000f7a:	fa02 f303 	lsl.w	r3, r2, r3
 8000f7e:	461a      	mov	r2, r3
 8000f80:	e005      	b.n	8000f8e <OLED_1322_InitHW+0xaa>
 8000f82:	2201      	movs	r2, #1
 8000f84:	69fb      	ldr	r3, [r7, #28]
 8000f86:	fa02 f303 	lsl.w	r3, r2, r3
 8000f8a:	041b      	lsls	r3, r3, #16
 8000f8c:	461a      	mov	r2, r3
 8000f8e:	6a3b      	ldr	r3, [r7, #32]
 8000f90:	619a      	str	r2, [r3, #24]
  GPIOWrite(OLED_DC, 0);
  Nucleo_SetPinGPIO(OLED_OE, output);
 8000f92:	2203      	movs	r2, #3
 8000f94:	2106      	movs	r1, #6
 8000f96:	482e      	ldr	r0, [pc, #184]	; (8001050 <OLED_1322_InitHW+0x16c>)
 8000f98:	f000 fb6e 	bl	8001678 <Nucleo_SetPinGPIO>
 8000f9c:	4b2c      	ldr	r3, [pc, #176]	; (8001050 <OLED_1322_InitHW+0x16c>)
 8000f9e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8000fa0:	2306      	movs	r3, #6
 8000fa2:	62bb      	str	r3, [r7, #40]	; 0x28
 8000fa4:	2301      	movs	r3, #1
 8000fa6:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8000faa:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8000fae:	2b00      	cmp	r3, #0
 8000fb0:	d005      	beq.n	8000fbe <OLED_1322_InitHW+0xda>
 8000fb2:	2201      	movs	r2, #1
 8000fb4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8000fb6:	fa02 f303 	lsl.w	r3, r2, r3
 8000fba:	461a      	mov	r2, r3
 8000fbc:	e005      	b.n	8000fca <OLED_1322_InitHW+0xe6>
 8000fbe:	2201      	movs	r2, #1
 8000fc0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8000fc2:	fa02 f303 	lsl.w	r3, r2, r3
 8000fc6:	041b      	lsls	r3, r3, #16
 8000fc8:	461a      	mov	r2, r3
 8000fca:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8000fcc:	619a      	str	r2, [r3, #24]
  GPIOWrite(OLED_OE, 1);                      // enable level-shifter !!

  //TODO switch by SPIx
  if (!(RCC->APB2ENR & RCC_APB2ENR_SPI1EN))
 8000fce:	4b21      	ldr	r3, [pc, #132]	; (8001054 <OLED_1322_InitHW+0x170>)
 8000fd0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000fd2:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8000fd6:	2b00      	cmp	r3, #0
 8000fd8:	d111      	bne.n	8000ffe <OLED_1322_InitHW+0x11a>
  {
    RCC->APB2ENR |= RCC_APB2ENR_SPI1EN;
 8000fda:	4a1e      	ldr	r2, [pc, #120]	; (8001054 <OLED_1322_InitHW+0x170>)
 8000fdc:	4b1d      	ldr	r3, [pc, #116]	; (8001054 <OLED_1322_InitHW+0x170>)
 8000fde:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000fe0:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000fe4:	6453      	str	r3, [r2, #68]	; 0x44
    RCC->APB2RSTR |= RCC_APB2RSTR_SPI1RST;
 8000fe6:	4a1b      	ldr	r2, [pc, #108]	; (8001054 <OLED_1322_InitHW+0x170>)
 8000fe8:	4b1a      	ldr	r3, [pc, #104]	; (8001054 <OLED_1322_InitHW+0x170>)
 8000fea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000fec:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000ff0:	6253      	str	r3, [r2, #36]	; 0x24
    RCC->APB2RSTR &= ~RCC_APB2RSTR_SPI1RST;
 8000ff2:	4a18      	ldr	r2, [pc, #96]	; (8001054 <OLED_1322_InitHW+0x170>)
 8000ff4:	4b17      	ldr	r3, [pc, #92]	; (8001054 <OLED_1322_InitHW+0x170>)
 8000ff6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000ff8:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000ffc:	6253      	str	r3, [r2, #36]	; 0x24
  }

  OLED_SPI->CR1 = 0
 8000ffe:	4b16      	ldr	r3, [pc, #88]	; (8001058 <OLED_1322_InitHW+0x174>)
 8001000:	f240 321f 	movw	r2, #799	; 0x31f
 8001004:	601a      	str	r2, [r3, #0]
      | SPI_CR1_BR_1 | SPI_CR1_BR_0     // 011 = /16 z 100MHz =
      | SPI_CR1_CPHA | SPI_CR1_CPOL
      | SPI_CR1_SSI | SPI_CR1_SSM       // nevim stale proc ??
      | SPI_CR1_MSTR;
  OLED_SPI->CR2 = 0;
 8001006:	4b14      	ldr	r3, [pc, #80]	; (8001058 <OLED_1322_InitHW+0x174>)
 8001008:	2200      	movs	r2, #0
 800100a:	605a      	str	r2, [r3, #4]

  Nucleo_SetPinGPIO(OLED_MOSI, alter);
 800100c:	2206      	movs	r2, #6
 800100e:	2107      	movs	r1, #7
 8001010:	480d      	ldr	r0, [pc, #52]	; (8001048 <OLED_1322_InitHW+0x164>)
 8001012:	f000 fb31 	bl	8001678 <Nucleo_SetPinGPIO>
  Nucleo_SetPinAFGPIO(OLED_MOSI, 5);        // AF05
 8001016:	2205      	movs	r2, #5
 8001018:	2107      	movs	r1, #7
 800101a:	480b      	ldr	r0, [pc, #44]	; (8001048 <OLED_1322_InitHW+0x164>)
 800101c:	f000 fc52 	bl	80018c4 <Nucleo_SetPinAFGPIO>
  Nucleo_SetPinGPIO(OLED_SCK, alter);
 8001020:	2206      	movs	r2, #6
 8001022:	2105      	movs	r1, #5
 8001024:	4808      	ldr	r0, [pc, #32]	; (8001048 <OLED_1322_InitHW+0x164>)
 8001026:	f000 fb27 	bl	8001678 <Nucleo_SetPinGPIO>
  Nucleo_SetPinAFGPIO(OLED_SCK, 5);        // AF05
 800102a:	2205      	movs	r2, #5
 800102c:	2105      	movs	r1, #5
 800102e:	4806      	ldr	r0, [pc, #24]	; (8001048 <OLED_1322_InitHW+0x164>)
 8001030:	f000 fc48 	bl	80018c4 <Nucleo_SetPinAFGPIO>

  OLED_SPI->CR1 |= SPI_CR1_SPE;             // enable
 8001034:	4a08      	ldr	r2, [pc, #32]	; (8001058 <OLED_1322_InitHW+0x174>)
 8001036:	4b08      	ldr	r3, [pc, #32]	; (8001058 <OLED_1322_InitHW+0x174>)
 8001038:	681b      	ldr	r3, [r3, #0]
 800103a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800103e:	6013      	str	r3, [r2, #0]
}
 8001040:	bf00      	nop
 8001042:	3730      	adds	r7, #48	; 0x30
 8001044:	46bd      	mov	sp, r7
 8001046:	bd80      	pop	{r7, pc}
 8001048:	40020000 	.word	0x40020000
 800104c:	40020800 	.word	0x40020800
 8001050:	40020400 	.word	0x40020400
 8001054:	40023800 	.word	0x40023800
 8001058:	40013000 	.word	0x40013000

0800105c <OLED_1322_send>:

static void OLED_1322_send(uint8_t val, bool dc)
{
 800105c:	b480      	push	{r7}
 800105e:	b08f      	sub	sp, #60	; 0x3c
 8001060:	af00      	add	r7, sp, #0
 8001062:	4603      	mov	r3, r0
 8001064:	460a      	mov	r2, r1
 8001066:	71fb      	strb	r3, [r7, #7]
 8001068:	4613      	mov	r3, r2
 800106a:	71bb      	strb	r3, [r7, #6]
  if (dc)
 800106c:	79bb      	ldrb	r3, [r7, #6]
 800106e:	2b00      	cmp	r3, #0
 8001070:	d019      	beq.n	80010a6 <OLED_1322_send+0x4a>
 8001072:	4b3b      	ldr	r3, [pc, #236]	; (8001160 <OLED_1322_send+0x104>)
 8001074:	637b      	str	r3, [r7, #52]	; 0x34
 8001076:	2309      	movs	r3, #9
 8001078:	633b      	str	r3, [r7, #48]	; 0x30
 800107a:	2301      	movs	r3, #1
 800107c:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 8001080:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 8001084:	2b00      	cmp	r3, #0
 8001086:	d005      	beq.n	8001094 <OLED_1322_send+0x38>
 8001088:	2201      	movs	r2, #1
 800108a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800108c:	fa02 f303 	lsl.w	r3, r2, r3
 8001090:	461a      	mov	r2, r3
 8001092:	e005      	b.n	80010a0 <OLED_1322_send+0x44>
 8001094:	2201      	movs	r2, #1
 8001096:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8001098:	fa02 f303 	lsl.w	r3, r2, r3
 800109c:	041b      	lsls	r3, r3, #16
 800109e:	461a      	mov	r2, r3
 80010a0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80010a2:	619a      	str	r2, [r3, #24]
 80010a4:	e018      	b.n	80010d8 <OLED_1322_send+0x7c>
 80010a6:	4b2e      	ldr	r3, [pc, #184]	; (8001160 <OLED_1322_send+0x104>)
 80010a8:	62bb      	str	r3, [r7, #40]	; 0x28
 80010aa:	2309      	movs	r3, #9
 80010ac:	627b      	str	r3, [r7, #36]	; 0x24
 80010ae:	2300      	movs	r3, #0
 80010b0:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 80010b4:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 80010b8:	2b00      	cmp	r3, #0
 80010ba:	d005      	beq.n	80010c8 <OLED_1322_send+0x6c>
 80010bc:	2201      	movs	r2, #1
 80010be:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80010c0:	fa02 f303 	lsl.w	r3, r2, r3
 80010c4:	461a      	mov	r2, r3
 80010c6:	e005      	b.n	80010d4 <OLED_1322_send+0x78>
 80010c8:	2201      	movs	r2, #1
 80010ca:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80010cc:	fa02 f303 	lsl.w	r3, r2, r3
 80010d0:	041b      	lsls	r3, r3, #16
 80010d2:	461a      	mov	r2, r3
 80010d4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80010d6:	619a      	str	r2, [r3, #24]
 80010d8:	4b22      	ldr	r3, [pc, #136]	; (8001164 <OLED_1322_send+0x108>)
 80010da:	61fb      	str	r3, [r7, #28]
 80010dc:	2307      	movs	r3, #7
 80010de:	61bb      	str	r3, [r7, #24]
 80010e0:	2300      	movs	r3, #0
 80010e2:	75fb      	strb	r3, [r7, #23]
 80010e4:	7dfb      	ldrb	r3, [r7, #23]
 80010e6:	2b00      	cmp	r3, #0
 80010e8:	d005      	beq.n	80010f6 <OLED_1322_send+0x9a>
 80010ea:	2201      	movs	r2, #1
 80010ec:	69bb      	ldr	r3, [r7, #24]
 80010ee:	fa02 f303 	lsl.w	r3, r2, r3
 80010f2:	461a      	mov	r2, r3
 80010f4:	e005      	b.n	8001102 <OLED_1322_send+0xa6>
 80010f6:	2201      	movs	r2, #1
 80010f8:	69bb      	ldr	r3, [r7, #24]
 80010fa:	fa02 f303 	lsl.w	r3, r2, r3
 80010fe:	041b      	lsls	r3, r3, #16
 8001100:	461a      	mov	r2, r3
 8001102:	69fb      	ldr	r3, [r7, #28]
 8001104:	619a      	str	r2, [r3, #24]
  else
    GPIOWrite(OLED_DC, 0);

  GPIOWrite(OLED_CS, 0);

  OLED_SPI->DR = val;
 8001106:	4a18      	ldr	r2, [pc, #96]	; (8001168 <OLED_1322_send+0x10c>)
 8001108:	79fb      	ldrb	r3, [r7, #7]
 800110a:	60d3      	str	r3, [r2, #12]
  while(SPI_IS_BUSY(SPI1))
 800110c:	bf00      	nop
 800110e:	4b16      	ldr	r3, [pc, #88]	; (8001168 <OLED_1322_send+0x10c>)
 8001110:	689b      	ldr	r3, [r3, #8]
 8001112:	f003 0303 	and.w	r3, r3, #3
 8001116:	2b00      	cmp	r3, #0
 8001118:	d0f9      	beq.n	800110e <OLED_1322_send+0xb2>
 800111a:	4b13      	ldr	r3, [pc, #76]	; (8001168 <OLED_1322_send+0x10c>)
 800111c:	689b      	ldr	r3, [r3, #8]
 800111e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001122:	2b00      	cmp	r3, #0
 8001124:	d1f3      	bne.n	800110e <OLED_1322_send+0xb2>
 8001126:	4b0f      	ldr	r3, [pc, #60]	; (8001164 <OLED_1322_send+0x108>)
 8001128:	613b      	str	r3, [r7, #16]
 800112a:	2307      	movs	r3, #7
 800112c:	60fb      	str	r3, [r7, #12]
 800112e:	2301      	movs	r3, #1
 8001130:	72fb      	strb	r3, [r7, #11]
 8001132:	7afb      	ldrb	r3, [r7, #11]
 8001134:	2b00      	cmp	r3, #0
 8001136:	d005      	beq.n	8001144 <OLED_1322_send+0xe8>
 8001138:	2201      	movs	r2, #1
 800113a:	68fb      	ldr	r3, [r7, #12]
 800113c:	fa02 f303 	lsl.w	r3, r2, r3
 8001140:	461a      	mov	r2, r3
 8001142:	e005      	b.n	8001150 <OLED_1322_send+0xf4>
 8001144:	2201      	movs	r2, #1
 8001146:	68fb      	ldr	r3, [r7, #12]
 8001148:	fa02 f303 	lsl.w	r3, r2, r3
 800114c:	041b      	lsls	r3, r3, #16
 800114e:	461a      	mov	r2, r3
 8001150:	693b      	ldr	r3, [r7, #16]
 8001152:	619a      	str	r2, [r3, #24]
    ;

  GPIOWrite(OLED_CS, 1);
}
 8001154:	bf00      	nop
 8001156:	373c      	adds	r7, #60	; 0x3c
 8001158:	46bd      	mov	sp, r7
 800115a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800115e:	4770      	bx	lr
 8001160:	40020000 	.word	0x40020000
 8001164:	40020800 	.word	0x40020800
 8001168:	40013000 	.word	0x40013000

0800116c <OLED_1322_sendData>:

static void OLED_1322_sendData(uint8_t *val, uint16_t len)
{
 800116c:	b480      	push	{r7}
 800116e:	b08d      	sub	sp, #52	; 0x34
 8001170:	af00      	add	r7, sp, #0
 8001172:	6078      	str	r0, [r7, #4]
 8001174:	460b      	mov	r3, r1
 8001176:	807b      	strh	r3, [r7, #2]
 8001178:	4b30      	ldr	r3, [pc, #192]	; (800123c <OLED_1322_sendData+0xd0>)
 800117a:	623b      	str	r3, [r7, #32]
 800117c:	2309      	movs	r3, #9
 800117e:	61fb      	str	r3, [r7, #28]
 8001180:	2301      	movs	r3, #1
 8001182:	76fb      	strb	r3, [r7, #27]
 8001184:	7efb      	ldrb	r3, [r7, #27]
 8001186:	2b00      	cmp	r3, #0
 8001188:	d005      	beq.n	8001196 <OLED_1322_sendData+0x2a>
 800118a:	2201      	movs	r2, #1
 800118c:	69fb      	ldr	r3, [r7, #28]
 800118e:	fa02 f303 	lsl.w	r3, r2, r3
 8001192:	461a      	mov	r2, r3
 8001194:	e005      	b.n	80011a2 <OLED_1322_sendData+0x36>
 8001196:	2201      	movs	r2, #1
 8001198:	69fb      	ldr	r3, [r7, #28]
 800119a:	fa02 f303 	lsl.w	r3, r2, r3
 800119e:	041b      	lsls	r3, r3, #16
 80011a0:	461a      	mov	r2, r3
 80011a2:	6a3b      	ldr	r3, [r7, #32]
 80011a4:	619a      	str	r2, [r3, #24]
 80011a6:	4b26      	ldr	r3, [pc, #152]	; (8001240 <OLED_1322_sendData+0xd4>)
 80011a8:	62fb      	str	r3, [r7, #44]	; 0x2c
 80011aa:	2307      	movs	r3, #7
 80011ac:	62bb      	str	r3, [r7, #40]	; 0x28
 80011ae:	2300      	movs	r3, #0
 80011b0:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 80011b4:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80011b8:	2b00      	cmp	r3, #0
 80011ba:	d005      	beq.n	80011c8 <OLED_1322_sendData+0x5c>
 80011bc:	2201      	movs	r2, #1
 80011be:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80011c0:	fa02 f303 	lsl.w	r3, r2, r3
 80011c4:	461a      	mov	r2, r3
 80011c6:	e005      	b.n	80011d4 <OLED_1322_sendData+0x68>
 80011c8:	2201      	movs	r2, #1
 80011ca:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80011cc:	fa02 f303 	lsl.w	r3, r2, r3
 80011d0:	041b      	lsls	r3, r3, #16
 80011d2:	461a      	mov	r2, r3
 80011d4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80011d6:	619a      	str	r2, [r3, #24]
  GPIOWrite(OLED_DC, 1);      // data
  GPIOWrite(OLED_CS, 0);

  for(; len; len--)
 80011d8:	e010      	b.n	80011fc <OLED_1322_sendData+0x90>
  {
    OLED_SPI->DR = *val;
 80011da:	4a1a      	ldr	r2, [pc, #104]	; (8001244 <OLED_1322_sendData+0xd8>)
 80011dc:	687b      	ldr	r3, [r7, #4]
 80011de:	781b      	ldrb	r3, [r3, #0]
 80011e0:	60d3      	str	r3, [r2, #12]
    val++;
 80011e2:	687b      	ldr	r3, [r7, #4]
 80011e4:	3301      	adds	r3, #1
 80011e6:	607b      	str	r3, [r7, #4]

    while(OLED_SPI->SR & SPI_SR_BSY)
 80011e8:	bf00      	nop
 80011ea:	4b16      	ldr	r3, [pc, #88]	; (8001244 <OLED_1322_sendData+0xd8>)
 80011ec:	689b      	ldr	r3, [r3, #8]
 80011ee:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80011f2:	2b00      	cmp	r3, #0
 80011f4:	d1f9      	bne.n	80011ea <OLED_1322_sendData+0x7e>
  for(; len; len--)
 80011f6:	887b      	ldrh	r3, [r7, #2]
 80011f8:	3b01      	subs	r3, #1
 80011fa:	807b      	strh	r3, [r7, #2]
 80011fc:	887b      	ldrh	r3, [r7, #2]
 80011fe:	2b00      	cmp	r3, #0
 8001200:	d1eb      	bne.n	80011da <OLED_1322_sendData+0x6e>
 8001202:	4b0f      	ldr	r3, [pc, #60]	; (8001240 <OLED_1322_sendData+0xd4>)
 8001204:	617b      	str	r3, [r7, #20]
 8001206:	2307      	movs	r3, #7
 8001208:	613b      	str	r3, [r7, #16]
 800120a:	2301      	movs	r3, #1
 800120c:	73fb      	strb	r3, [r7, #15]
 800120e:	7bfb      	ldrb	r3, [r7, #15]
 8001210:	2b00      	cmp	r3, #0
 8001212:	d005      	beq.n	8001220 <OLED_1322_sendData+0xb4>
 8001214:	2201      	movs	r2, #1
 8001216:	693b      	ldr	r3, [r7, #16]
 8001218:	fa02 f303 	lsl.w	r3, r2, r3
 800121c:	461a      	mov	r2, r3
 800121e:	e005      	b.n	800122c <OLED_1322_sendData+0xc0>
 8001220:	2201      	movs	r2, #1
 8001222:	693b      	ldr	r3, [r7, #16]
 8001224:	fa02 f303 	lsl.w	r3, r2, r3
 8001228:	041b      	lsls	r3, r3, #16
 800122a:	461a      	mov	r2, r3
 800122c:	697b      	ldr	r3, [r7, #20]
 800122e:	619a      	str	r2, [r3, #24]
      ;
  }

  GPIOWrite(OLED_CS, 1);
}
 8001230:	bf00      	nop
 8001232:	3734      	adds	r7, #52	; 0x34
 8001234:	46bd      	mov	sp, r7
 8001236:	f85d 7b04 	ldr.w	r7, [sp], #4
 800123a:	4770      	bx	lr
 800123c:	40020000 	.word	0x40020000
 8001240:	40020800 	.word	0x40020800
 8001244:	40013000 	.word	0x40013000

08001248 <OLED_1322_WriteCmd>:

void OLED_1322_WriteCmd(int cmd)
{
 8001248:	b580      	push	{r7, lr}
 800124a:	b082      	sub	sp, #8
 800124c:	af00      	add	r7, sp, #0
 800124e:	6078      	str	r0, [r7, #4]
  OLED_1322_send(cmd, 0);
 8001250:	687b      	ldr	r3, [r7, #4]
 8001252:	b2db      	uxtb	r3, r3
 8001254:	2100      	movs	r1, #0
 8001256:	4618      	mov	r0, r3
 8001258:	f7ff ff00 	bl	800105c <OLED_1322_send>
}
 800125c:	bf00      	nop
 800125e:	3708      	adds	r7, #8
 8001260:	46bd      	mov	sp, r7
 8001262:	bd80      	pop	{r7, pc}

08001264 <OLED_1322_WriteData>:

void OLED_1322_WriteData(int cmd)
{
 8001264:	b580      	push	{r7, lr}
 8001266:	b082      	sub	sp, #8
 8001268:	af00      	add	r7, sp, #0
 800126a:	6078      	str	r0, [r7, #4]
  OLED_1322_send(cmd, 1);
 800126c:	687b      	ldr	r3, [r7, #4]
 800126e:	b2db      	uxtb	r3, r3
 8001270:	2101      	movs	r1, #1
 8001272:	4618      	mov	r0, r3
 8001274:	f7ff fef2 	bl	800105c <OLED_1322_send>
}
 8001278:	bf00      	nop
 800127a:	3708      	adds	r7, #8
 800127c:	46bd      	mov	sp, r7
 800127e:	bd80      	pop	{r7, pc}

08001280 <OLED_1322_drawPixel>:

static uint8_t buffer[SSD1322_LCDHEIGHT * SSD1322_LCDWIDTH / (8 / SSD1322_BITS_PER_PIXEL)] = { 0x00 };

void OLED_1322_drawPixel(int16_t x, int16_t y, uint8_t gscale)
{
 8001280:	b480      	push	{r7}
 8001282:	b085      	sub	sp, #20
 8001284:	af00      	add	r7, sp, #0
 8001286:	4603      	mov	r3, r0
 8001288:	80fb      	strh	r3, [r7, #6]
 800128a:	460b      	mov	r3, r1
 800128c:	80bb      	strh	r3, [r7, #4]
 800128e:	4613      	mov	r3, r2
 8001290:	70fb      	strb	r3, [r7, #3]
  //TODO detect rotation ?
  if ((x < 0) || (x >= SSD1322_LCDWIDTH) || (y < 0) || (y >= SSD1322_LCDHEIGHT))
 8001292:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001296:	2b00      	cmp	r3, #0
 8001298:	db42      	blt.n	8001320 <OLED_1322_drawPixel+0xa0>
 800129a:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800129e:	2bff      	cmp	r3, #255	; 0xff
 80012a0:	dc3e      	bgt.n	8001320 <OLED_1322_drawPixel+0xa0>
 80012a2:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 80012a6:	2b00      	cmp	r3, #0
 80012a8:	db3a      	blt.n	8001320 <OLED_1322_drawPixel+0xa0>
 80012aa:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 80012ae:	2b3f      	cmp	r3, #63	; 0x3f
 80012b0:	dc36      	bgt.n	8001320 <OLED_1322_drawPixel+0xa0>
  register uint8_t *pBuf = &buffer[(x >> 1) + (y * (SSD1322_LCDWIDTH / 2))];
  register uint8_t b1 = *pBuf & (x % 2) ? 0xF0 : 0x0F;  // cleardown nibble to be replaced
  *pBuf = b1 | mask;          // write our value in
  */

  uint8_t *pBuf = ((uint8_t *)buffer) + (y * SSD1322_LCDWIDTH) / 2 + x / 2;
 80012b2:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 80012b6:	021b      	lsls	r3, r3, #8
 80012b8:	0fda      	lsrs	r2, r3, #31
 80012ba:	4413      	add	r3, r2
 80012bc:	105b      	asrs	r3, r3, #1
 80012be:	4619      	mov	r1, r3
 80012c0:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80012c4:	0fda      	lsrs	r2, r3, #31
 80012c6:	4413      	add	r3, r2
 80012c8:	105b      	asrs	r3, r3, #1
 80012ca:	b21b      	sxth	r3, r3
 80012cc:	440b      	add	r3, r1
 80012ce:	4a17      	ldr	r2, [pc, #92]	; (800132c <OLED_1322_drawPixel+0xac>)
 80012d0:	4413      	add	r3, r2
 80012d2:	60fb      	str	r3, [r7, #12]
  bool hi = (x & 1) ? true : false;       // hi nibble ?
 80012d4:	88fb      	ldrh	r3, [r7, #6]
 80012d6:	f003 0301 	and.w	r3, r3, #1
 80012da:	2b00      	cmp	r3, #0
 80012dc:	bf14      	ite	ne
 80012de:	2301      	movne	r3, #1
 80012e0:	2300      	moveq	r3, #0
 80012e2:	72fb      	strb	r3, [r7, #11]
  *pBuf = (*pBuf & (hi ? 0xf0 : 0x0f)) | (hi ? (gscale & 0x0f) : (gscale << 4));
 80012e4:	68fb      	ldr	r3, [r7, #12]
 80012e6:	781b      	ldrb	r3, [r3, #0]
 80012e8:	b25a      	sxtb	r2, r3
 80012ea:	7afb      	ldrb	r3, [r7, #11]
 80012ec:	2b00      	cmp	r3, #0
 80012ee:	d002      	beq.n	80012f6 <OLED_1322_drawPixel+0x76>
 80012f0:	f06f 030f 	mvn.w	r3, #15
 80012f4:	e000      	b.n	80012f8 <OLED_1322_drawPixel+0x78>
 80012f6:	230f      	movs	r3, #15
 80012f8:	4013      	ands	r3, r2
 80012fa:	b25a      	sxtb	r2, r3
 80012fc:	7afb      	ldrb	r3, [r7, #11]
 80012fe:	2b00      	cmp	r3, #0
 8001300:	d005      	beq.n	800130e <OLED_1322_drawPixel+0x8e>
 8001302:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8001306:	f003 030f 	and.w	r3, r3, #15
 800130a:	b25b      	sxtb	r3, r3
 800130c:	e002      	b.n	8001314 <OLED_1322_drawPixel+0x94>
 800130e:	78fb      	ldrb	r3, [r7, #3]
 8001310:	011b      	lsls	r3, r3, #4
 8001312:	b25b      	sxtb	r3, r3
 8001314:	4313      	orrs	r3, r2
 8001316:	b25b      	sxtb	r3, r3
 8001318:	b2da      	uxtb	r2, r3
 800131a:	68fb      	ldr	r3, [r7, #12]
 800131c:	701a      	strb	r2, [r3, #0]
 800131e:	e000      	b.n	8001322 <OLED_1322_drawPixel+0xa2>
    return;
 8001320:	bf00      	nop
}
 8001322:	3714      	adds	r7, #20
 8001324:	46bd      	mov	sp, r7
 8001326:	f85d 7b04 	ldr.w	r7, [sp], #4
 800132a:	4770      	bx	lr
 800132c:	2000069c 	.word	0x2000069c

08001330 <OLED_1322_InitSW>:

static void OLED_1322_InitSW(void)
{
 8001330:	b580      	push	{r7, lr}
 8001332:	b08c      	sub	sp, #48	; 0x30
 8001334:	af00      	add	r7, sp, #0
 8001336:	4b79      	ldr	r3, [pc, #484]	; (800151c <OLED_1322_InitSW+0x1ec>)
 8001338:	60bb      	str	r3, [r7, #8]
 800133a:	2307      	movs	r3, #7
 800133c:	607b      	str	r3, [r7, #4]
 800133e:	2301      	movs	r3, #1
 8001340:	70fb      	strb	r3, [r7, #3]
 8001342:	78fb      	ldrb	r3, [r7, #3]
 8001344:	2b00      	cmp	r3, #0
 8001346:	d005      	beq.n	8001354 <OLED_1322_InitSW+0x24>
 8001348:	2201      	movs	r2, #1
 800134a:	687b      	ldr	r3, [r7, #4]
 800134c:	fa02 f303 	lsl.w	r3, r2, r3
 8001350:	461a      	mov	r2, r3
 8001352:	e005      	b.n	8001360 <OLED_1322_InitSW+0x30>
 8001354:	2201      	movs	r2, #1
 8001356:	687b      	ldr	r3, [r7, #4]
 8001358:	fa02 f303 	lsl.w	r3, r2, r3
 800135c:	041b      	lsls	r3, r3, #16
 800135e:	461a      	mov	r2, r3
 8001360:	68bb      	ldr	r3, [r7, #8]
 8001362:	619a      	str	r2, [r3, #24]
 8001364:	4b6e      	ldr	r3, [pc, #440]	; (8001520 <OLED_1322_InitSW+0x1f0>)
 8001366:	617b      	str	r3, [r7, #20]
 8001368:	2308      	movs	r3, #8
 800136a:	613b      	str	r3, [r7, #16]
 800136c:	2301      	movs	r3, #1
 800136e:	73fb      	strb	r3, [r7, #15]
 8001370:	7bfb      	ldrb	r3, [r7, #15]
 8001372:	2b00      	cmp	r3, #0
 8001374:	d005      	beq.n	8001382 <OLED_1322_InitSW+0x52>
 8001376:	2201      	movs	r2, #1
 8001378:	693b      	ldr	r3, [r7, #16]
 800137a:	fa02 f303 	lsl.w	r3, r2, r3
 800137e:	461a      	mov	r2, r3
 8001380:	e005      	b.n	800138e <OLED_1322_InitSW+0x5e>
 8001382:	2201      	movs	r2, #1
 8001384:	693b      	ldr	r3, [r7, #16]
 8001386:	fa02 f303 	lsl.w	r3, r2, r3
 800138a:	041b      	lsls	r3, r3, #16
 800138c:	461a      	mov	r2, r3
 800138e:	697b      	ldr	r3, [r7, #20]
 8001390:	619a      	str	r2, [r3, #24]
  //TODO detect HW init ?
  GPIOWrite(OLED_CS, 1);       // inactive

  GPIOWrite(OLED_RST, 1);
  WaitMs(100);
 8001392:	2064      	movs	r0, #100	; 0x64
 8001394:	f000 fc86 	bl	8001ca4 <WaitMs>
 8001398:	4b61      	ldr	r3, [pc, #388]	; (8001520 <OLED_1322_InitSW+0x1f0>)
 800139a:	623b      	str	r3, [r7, #32]
 800139c:	2308      	movs	r3, #8
 800139e:	61fb      	str	r3, [r7, #28]
 80013a0:	2300      	movs	r3, #0
 80013a2:	76fb      	strb	r3, [r7, #27]
 80013a4:	7efb      	ldrb	r3, [r7, #27]
 80013a6:	2b00      	cmp	r3, #0
 80013a8:	d005      	beq.n	80013b6 <OLED_1322_InitSW+0x86>
 80013aa:	2201      	movs	r2, #1
 80013ac:	69fb      	ldr	r3, [r7, #28]
 80013ae:	fa02 f303 	lsl.w	r3, r2, r3
 80013b2:	461a      	mov	r2, r3
 80013b4:	e005      	b.n	80013c2 <OLED_1322_InitSW+0x92>
 80013b6:	2201      	movs	r2, #1
 80013b8:	69fb      	ldr	r3, [r7, #28]
 80013ba:	fa02 f303 	lsl.w	r3, r2, r3
 80013be:	041b      	lsls	r3, r3, #16
 80013c0:	461a      	mov	r2, r3
 80013c2:	6a3b      	ldr	r3, [r7, #32]
 80013c4:	619a      	str	r2, [r3, #24]
  GPIOWrite(OLED_RST, 0);
  WaitMs(400);
 80013c6:	f44f 70c8 	mov.w	r0, #400	; 0x190
 80013ca:	f000 fc6b 	bl	8001ca4 <WaitMs>
 80013ce:	4b54      	ldr	r3, [pc, #336]	; (8001520 <OLED_1322_InitSW+0x1f0>)
 80013d0:	62fb      	str	r3, [r7, #44]	; 0x2c
 80013d2:	2308      	movs	r3, #8
 80013d4:	62bb      	str	r3, [r7, #40]	; 0x28
 80013d6:	2301      	movs	r3, #1
 80013d8:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 80013dc:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80013e0:	2b00      	cmp	r3, #0
 80013e2:	d005      	beq.n	80013f0 <OLED_1322_InitSW+0xc0>
 80013e4:	2201      	movs	r2, #1
 80013e6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80013e8:	fa02 f303 	lsl.w	r3, r2, r3
 80013ec:	461a      	mov	r2, r3
 80013ee:	e005      	b.n	80013fc <OLED_1322_InitSW+0xcc>
 80013f0:	2201      	movs	r2, #1
 80013f2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80013f4:	fa02 f303 	lsl.w	r3, r2, r3
 80013f8:	041b      	lsls	r3, r3, #16
 80013fa:	461a      	mov	r2, r3
 80013fc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80013fe:	619a      	str	r2, [r3, #24]
  GPIOWrite(OLED_RST, 1);

  //  Set_Command_Lock(0x12); // Unlock Basic Commands (0x12/0x16)
  OLED_1322_WriteCmd(SSD1322_SETCOMMANDLOCK);     // 0xFD
 8001400:	20fd      	movs	r0, #253	; 0xfd
 8001402:	f7ff ff21 	bl	8001248 <OLED_1322_WriteCmd>
  OLED_1322_WriteData(0x12);                      // Unlock OLED driver IC
 8001406:	2012      	movs	r0, #18
 8001408:	f7ff ff2c 	bl	8001264 <OLED_1322_WriteData>

  //  Set_Display_On_Off(0x00); // Display Off (0x00/0x01)
  OLED_1322_WriteCmd(SSD1322_DISPLAYOFF);         // 0xAE
 800140c:	20ae      	movs	r0, #174	; 0xae
 800140e:	f7ff ff1b 	bl	8001248 <OLED_1322_WriteCmd>

  //  Set_Column_Address(0x1C,0x5B);
  OLED_1322_WriteCmd(SSD1322_SETCOLUMNADDR);
 8001412:	2015      	movs	r0, #21
 8001414:	f7ff ff18 	bl	8001248 <OLED_1322_WriteCmd>
  OLED_1322_WriteData(MIN_SEG);
 8001418:	201c      	movs	r0, #28
 800141a:	f7ff ff23 	bl	8001264 <OLED_1322_WriteData>
  OLED_1322_WriteData(MAX_SEG);
 800141e:	205b      	movs	r0, #91	; 0x5b
 8001420:	f7ff ff20 	bl	8001264 <OLED_1322_WriteData>

  //  Set_Row_Address(0x00,0x3F);
  OLED_1322_WriteCmd(SSD1322_SETROWADDR);
 8001424:	2075      	movs	r0, #117	; 0x75
 8001426:	f7ff ff0f 	bl	8001248 <OLED_1322_WriteCmd>
  OLED_1322_WriteData(0);
 800142a:	2000      	movs	r0, #0
 800142c:	f7ff ff1a 	bl	8001264 <OLED_1322_WriteData>
  OLED_1322_WriteData(63);
 8001430:	203f      	movs	r0, #63	; 0x3f
 8001432:	f7ff ff17 	bl	8001264 <OLED_1322_WriteData>

  //  Set_Display_Clock(0x91); // Set Clock as 80 Frames/Sec
  OLED_1322_WriteCmd(SSD1322_SETCLOCKDIVIDER);    // 0xB3
 8001436:	20b3      	movs	r0, #179	; 0xb3
 8001438:	f7ff ff06 	bl	8001248 <OLED_1322_WriteCmd>
  OLED_1322_WriteData(0x91);
 800143c:	2091      	movs	r0, #145	; 0x91
 800143e:	f7ff ff11 	bl	8001264 <OLED_1322_WriteData>

  //  Set_Multiplex_Ratio(0x3F); // 1/64 Duty (0x0F~0x3F)
  OLED_1322_WriteCmd(SSD1322_SETMUXRATIO);// 0xCA
 8001442:	20ca      	movs	r0, #202	; 0xca
 8001444:	f7ff ff00 	bl	8001248 <OLED_1322_WriteCmd>
  OLED_1322_WriteData(0x3F);// duty = 1/64
 8001448:	203f      	movs	r0, #63	; 0x3f
 800144a:	f7ff ff0b 	bl	8001264 <OLED_1322_WriteData>

  //  Set_Display_Offset(0x00); // Shift Mapping RAM Counter (0x00~0x3F)
  OLED_1322_WriteCmd(SSD1322_SETDISPLAYOFFSET);// 0xA2
 800144e:	20a2      	movs	r0, #162	; 0xa2
 8001450:	f7ff fefa 	bl	8001248 <OLED_1322_WriteCmd>
  OLED_1322_WriteData(0x00);
 8001454:	2000      	movs	r0, #0
 8001456:	f7ff ff05 	bl	8001264 <OLED_1322_WriteData>

  //  Set_Start_Line(0x00); // Set Mapping RAM Display Start Line (0x00~0x7F)
  OLED_1322_WriteCmd(SSD1322_SETSTARTLINE);// 0xA1
 800145a:	20a1      	movs	r0, #161	; 0xa1
 800145c:	f7ff fef4 	bl	8001248 <OLED_1322_WriteCmd>
  OLED_1322_WriteData(0x00);
 8001460:	2000      	movs	r0, #0
 8001462:	f7ff feff 	bl	8001264 <OLED_1322_WriteData>
  //  // Column Address 0 Mapped to SEG0
  //  // Disable Nibble Remap
  //  // Scan from COM[N-1] to COM0
  //  // Disable COM Split Odd Even
  //  // Enable Dual COM Line Mode
  OLED_1322_WriteCmd(SSD1322_SETREMAP);// 0xA0
 8001466:	20a0      	movs	r0, #160	; 0xa0
 8001468:	f7ff feee 	bl	8001248 <OLED_1322_WriteCmd>
  OLED_1322_WriteData(0x14);//Horizontal address increment,Disable Column Address Re-map,Enable Nibble Re-map,Scan from COM[N-1] to COM0,Disable COM Split Odd Even
 800146c:	2014      	movs	r0, #20
 800146e:	f7ff fef9 	bl	8001264 <OLED_1322_WriteData>
  OLED_1322_WriteData(0x11);//Enable Dual COM mode
 8001472:	2011      	movs	r0, #17
 8001474:	f7ff fef6 	bl	8001264 <OLED_1322_WriteData>

  //  Set_GPIO(0x00); // Disable GPIO Pins Input
  OLED_1322_WriteCmd(SSD1322_SETGPIO);// 0xB5
 8001478:	20b5      	movs	r0, #181	; 0xb5
 800147a:	f7ff fee5 	bl	8001248 <OLED_1322_WriteCmd>
  OLED_1322_WriteData(0x00);// Disable GPIO Pins Input
 800147e:	2000      	movs	r0, #0
 8001480:	f7ff fef0 	bl	8001264 <OLED_1322_WriteData>

  //  Set_Function_Selection(0x01); // Enable Internal VDD Regulator
  OLED_1322_WriteCmd(SSD1322_FUNCTIONSEL);// 0xAB
 8001484:	20ab      	movs	r0, #171	; 0xab
 8001486:	f7ff fedf 	bl	8001248 <OLED_1322_WriteCmd>
  OLED_1322_WriteData(0x01);        // selection external vdd - internal mode
 800148a:	2001      	movs	r0, #1
 800148c:	f7ff feea 	bl	8001264 <OLED_1322_WriteData>

  //  Set_Display_Enhancement_A(0xA0,0xFD); // Enable External VSL
  OLED_1322_WriteCmd(SSD1322_DISPLAYENHANCE);// 0xB4
 8001490:	20b4      	movs	r0, #180	; 0xb4
 8001492:	f7ff fed9 	bl	8001248 <OLED_1322_WriteCmd>
  OLED_1322_WriteData(0xA0);// enables the external VSL
 8001496:	20a0      	movs	r0, #160	; 0xa0
 8001498:	f7ff fee4 	bl	8001264 <OLED_1322_WriteData>
  OLED_1322_WriteData(0xFD);// 0xfFD,Enhanced low GS display quality;default is 0xb5(normal),
 800149c:	20fd      	movs	r0, #253	; 0xfd
 800149e:	f7ff fee1 	bl	8001264 <OLED_1322_WriteData>

  //  Set_Contrast_Current(0x9F); // Set Segment Output Current
  OLED_1322_WriteCmd(SSD1322_SETCONTRASTCURRENT);// 0xC1
 80014a2:	20c1      	movs	r0, #193	; 0xc1
 80014a4:	f7ff fed0 	bl	8001248 <OLED_1322_WriteCmd>
//  OLED_1322_WriteData(0xFF);// pri vice zobrazeni to blikalo
  OLED_1322_WriteData(0x9F);// dle NH datasheetu - zase to ale mene sviti !
 80014a8:	209f      	movs	r0, #159	; 0x9f
 80014aa:	f7ff fedb 	bl	8001264 <OLED_1322_WriteData>

  //  Set_Master_Current(0x0F); // Set Scale Factor of Segment Output Current Control
  //  //Set_Gray_Scale_Table(); // Set Pulse Width for Gray Scale Table
  OLED_1322_WriteCmd(SSD1322_MASTERCURRENTCONTROL);// 0xC7
 80014ae:	20c7      	movs	r0, #199	; 0xc7
 80014b0:	f7ff feca 	bl	8001248 <OLED_1322_WriteCmd>
  OLED_1322_WriteData(0x0F);// default is 0x0F
 80014b4:	200f      	movs	r0, #15
 80014b6:	f7ff fed5 	bl	8001264 <OLED_1322_WriteData>

  //  Set_Linear_Gray_Scale_Table(); //set default linear gray scale table
  OLED_1322_WriteCmd(SSD1322_SELECTDEFAULTGRAYSCALE); // 0xB9
 80014ba:	20b9      	movs	r0, #185	; 0xb9
 80014bc:	f7ff fec4 	bl	8001248 <OLED_1322_WriteCmd>

  //  Set_Phase_Length(0xE2); // Set Phase 1 as 5 Clocks & Phase 2 as 14 Clocks
  OLED_1322_WriteCmd(SSD1322_SETPHASELENGTH);// 0xB1
 80014c0:	20b1      	movs	r0, #177	; 0xb1
 80014c2:	f7ff fec1 	bl	8001248 <OLED_1322_WriteCmd>
  OLED_1322_WriteData(0xE2);// default is 0x74
 80014c6:	20e2      	movs	r0, #226	; 0xe2
 80014c8:	f7ff fecc 	bl	8001264 <OLED_1322_WriteData>

  //  Set_Display_Enhancement_B(0x20); // Enhance Driving Scheme Capability (0x00/0x20)
  OLED_1322_WriteCmd(SSD1322_DISPLAYENHANCEB);// 0xD1
 80014cc:	20d1      	movs	r0, #209	; 0xd1
 80014ce:	f7ff febb 	bl	8001248 <OLED_1322_WriteCmd>
  OLED_1322_WriteData(0x82);// jinak to nenabehne po zapnuti !
 80014d2:	2082      	movs	r0, #130	; 0x82
 80014d4:	f7ff fec6 	bl	8001264 <OLED_1322_WriteData>
//  OLED_1322_WriteData(0xA2);
  OLED_1322_WriteData(0x20);  //
 80014d8:	2020      	movs	r0, #32
 80014da:	f7ff fec3 	bl	8001264 <OLED_1322_WriteData>

  //  Set_Precharge_Voltage(0x1F); // Set Pre-Charge Voltage Level as 0.60*VCC
  OLED_1322_WriteCmd(SSD1322_SETPRECHARGEVOLTAGE);// 0xBB
 80014de:	20bb      	movs	r0, #187	; 0xbb
 80014e0:	f7ff feb2 	bl	8001248 <OLED_1322_WriteCmd>
  OLED_1322_WriteData(0x1F);// 0.6xVcc
 80014e4:	201f      	movs	r0, #31
 80014e6:	f7ff febd 	bl	8001264 <OLED_1322_WriteData>

  //  Set_Precharge_Period(0x08); // Set Second Pre-Charge Period as 8 Clocks
  OLED_1322_WriteCmd(SSD1322_SETSECONDPRECHARGEPERIOD);// 0xB6
 80014ea:	20b6      	movs	r0, #182	; 0xb6
 80014ec:	f7ff feac 	bl	8001248 <OLED_1322_WriteCmd>
  OLED_1322_WriteData(0x08);// default
 80014f0:	2008      	movs	r0, #8
 80014f2:	f7ff feb7 	bl	8001264 <OLED_1322_WriteData>

  //  Set_VCOMH(0x07); // Set Common Pins Deselect Voltage Level as 0.86*VCC
  OLED_1322_WriteCmd(SSD1322_SETVCOMH);// 0xBE
 80014f6:	20be      	movs	r0, #190	; 0xbe
 80014f8:	f7ff fea6 	bl	8001248 <OLED_1322_WriteCmd>
  OLED_1322_WriteData(0x07);// 0.86xVcc;default is 0x04
 80014fc:	2007      	movs	r0, #7
 80014fe:	f7ff feb1 	bl	8001264 <OLED_1322_WriteData>

  //  Set_Display_Mode(0x02); // Normal Display Mode (0x00/0x01/0x02/0x03)
  OLED_1322_WriteCmd(SSD1322_NORMALDISPLAY);// 0xA6
 8001502:	20a6      	movs	r0, #166	; 0xa6
 8001504:	f7ff fea0 	bl	8001248 <OLED_1322_WriteCmd>

  //  Set_Partial_Display(0x01,0x00,0x00); // Disable Partial Display
  OLED_1322_WriteCmd(SSD1322_EXITPARTIALDISPLAY);// 0xA9
 8001508:	20a9      	movs	r0, #169	; 0xa9
 800150a:	f7ff fe9d 	bl	8001248 <OLED_1322_WriteCmd>

  //  Set_Display_On_Off(0x01)
  OLED_1322_WriteCmd(SSD1322_DISPLAYON);// 0xAF
 800150e:	20af      	movs	r0, #175	; 0xaf
 8001510:	f7ff fe9a 	bl	8001248 <OLED_1322_WriteCmd>

  OLED_1322_WriteCmd(SSD1322_EXITPARTIALDISPLAY);// 0xA9

  OLED_1322_WriteCmd(SSD1322_DISPLAYON);// 0xAF
  */
}
 8001514:	bf00      	nop
 8001516:	3730      	adds	r7, #48	; 0x30
 8001518:	46bd      	mov	sp, r7
 800151a:	bd80      	pop	{r7, pc}
 800151c:	40020800 	.word	0x40020800
 8001520:	40020000 	.word	0x40020000

08001524 <OLED_1322_Refresh>:

void OLED_1322_Refresh(void)
{
 8001524:	b580      	push	{r7, lr}
 8001526:	af00      	add	r7, sp, #0
  OLED_1322_WriteCmd(SSD1322_SETCOLUMNADDR);
 8001528:	2015      	movs	r0, #21
 800152a:	f7ff fe8d 	bl	8001248 <OLED_1322_WriteCmd>
  OLED_1322_WriteData(MIN_SEG);
 800152e:	201c      	movs	r0, #28
 8001530:	f7ff fe98 	bl	8001264 <OLED_1322_WriteData>
  OLED_1322_WriteData(MAX_SEG);
 8001534:	205b      	movs	r0, #91	; 0x5b
 8001536:	f7ff fe95 	bl	8001264 <OLED_1322_WriteData>

  OLED_1322_WriteCmd(SSD1322_SETROWADDR);
 800153a:	2075      	movs	r0, #117	; 0x75
 800153c:	f7ff fe84 	bl	8001248 <OLED_1322_WriteCmd>
  OLED_1322_WriteData(0);
 8001540:	2000      	movs	r0, #0
 8001542:	f7ff fe8f 	bl	8001264 <OLED_1322_WriteData>
  OLED_1322_WriteData(63);
 8001546:	203f      	movs	r0, #63	; 0x3f
 8001548:	f7ff fe8c 	bl	8001264 <OLED_1322_WriteData>

  OLED_1322_WriteCmd(SSD1322_WRITERAM);
 800154c:	205c      	movs	r0, #92	; 0x5c
 800154e:	f7ff fe7b 	bl	8001248 <OLED_1322_WriteCmd>

  OLED_1322_sendData(buffer, (SSD1322_LCDHEIGHT * SSD1322_LCDWIDTH / (8 / SSD1322_BITS_PER_PIXEL)));
 8001552:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001556:	4802      	ldr	r0, [pc, #8]	; (8001560 <OLED_1322_Refresh+0x3c>)
 8001558:	f7ff fe08 	bl	800116c <OLED_1322_sendData>
}
 800155c:	bf00      	nop
 800155e:	bd80      	pop	{r7, pc}
 8001560:	2000069c 	.word	0x2000069c

08001564 <SystemClock_100MHz>:
 */

#include "nucleo_core.h"

void SystemClock_100MHz(void)
{
 8001564:	b480      	push	{r7}
 8001566:	af00      	add	r7, sp, #0
  RCC->CR |= RCC_CR_HSION;            // pro jistotu zapnout HSI
 8001568:	4a40      	ldr	r2, [pc, #256]	; (800166c <SystemClock_100MHz+0x108>)
 800156a:	4b40      	ldr	r3, [pc, #256]	; (800166c <SystemClock_100MHz+0x108>)
 800156c:	681b      	ldr	r3, [r3, #0]
 800156e:	f043 0301 	orr.w	r3, r3, #1
 8001572:	6013      	str	r3, [r2, #0]
  while(!(RCC->CR & RCC_CR_HSIRDY))   // cekej na zapnuti
 8001574:	bf00      	nop
 8001576:	4b3d      	ldr	r3, [pc, #244]	; (800166c <SystemClock_100MHz+0x108>)
 8001578:	681b      	ldr	r3, [r3, #0]
 800157a:	f003 0302 	and.w	r3, r3, #2
 800157e:	2b00      	cmp	r3, #0
 8001580:	d0f9      	beq.n	8001576 <SystemClock_100MHz+0x12>
    ;

  RCC->CFGR &= ~RCC_CFGR_SW;      // HSI as clock (kombinace 00)
 8001582:	4a3a      	ldr	r2, [pc, #232]	; (800166c <SystemClock_100MHz+0x108>)
 8001584:	4b39      	ldr	r3, [pc, #228]	; (800166c <SystemClock_100MHz+0x108>)
 8001586:	689b      	ldr	r3, [r3, #8]
 8001588:	f023 0303 	bic.w	r3, r3, #3
 800158c:	6093      	str	r3, [r2, #8]
  RCC->CR &= ~RCC_CR_PLLON;       // vypnout PLL, pokud by byla z HSE
 800158e:	4a37      	ldr	r2, [pc, #220]	; (800166c <SystemClock_100MHz+0x108>)
 8001590:	4b36      	ldr	r3, [pc, #216]	; (800166c <SystemClock_100MHz+0x108>)
 8001592:	681b      	ldr	r3, [r3, #0]
 8001594:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8001598:	6013      	str	r3, [r2, #0]
  RCC->CR = 0x81;                 // vypnout vse krome HSI, nejspis totiz bylo HSE
 800159a:	4b34      	ldr	r3, [pc, #208]	; (800166c <SystemClock_100MHz+0x108>)
 800159c:	2281      	movs	r2, #129	; 0x81
 800159e:	601a      	str	r2, [r3, #0]
                                  // HSI TRIM reset state - bits [7..3]

  RCC->APB1ENR |= RCC_APB1ENR_PWREN;  // zapnout PWR blok
 80015a0:	4a32      	ldr	r2, [pc, #200]	; (800166c <SystemClock_100MHz+0x108>)
 80015a2:	4b32      	ldr	r3, [pc, #200]	; (800166c <SystemClock_100MHz+0x108>)
 80015a4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80015a6:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80015aa:	6413      	str	r3, [r2, #64]	; 0x40
  PWR->CR = (PWR->CR & ~PWR_CR_VOS) | PWR_CR_VOS_0 | PWR_CR_VOS_1;  // scale mode 1
 80015ac:	4a30      	ldr	r2, [pc, #192]	; (8001670 <SystemClock_100MHz+0x10c>)
 80015ae:	4b30      	ldr	r3, [pc, #192]	; (8001670 <SystemClock_100MHz+0x10c>)
 80015b0:	681b      	ldr	r3, [r3, #0]
 80015b2:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80015b6:	6013      	str	r3, [r2, #0]

  RCC->CR |= RCC_CR_HSEON;
 80015b8:	4a2c      	ldr	r2, [pc, #176]	; (800166c <SystemClock_100MHz+0x108>)
 80015ba:	4b2c      	ldr	r3, [pc, #176]	; (800166c <SystemClock_100MHz+0x108>)
 80015bc:	681b      	ldr	r3, [r3, #0]
 80015be:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80015c2:	6013      	str	r3, [r2, #0]
  while(!(RCC->CR & RCC_CR_HSERDY))   //TODO - timeout a prip. zustat na HSI
 80015c4:	bf00      	nop
 80015c6:	4b29      	ldr	r3, [pc, #164]	; (800166c <SystemClock_100MHz+0x108>)
 80015c8:	681b      	ldr	r3, [r3, #0]
 80015ca:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80015ce:	2b00      	cmp	r3, #0
 80015d0:	d0f9      	beq.n	80015c6 <SystemClock_100MHz+0x62>
    ;

  RCC->PLLCFGR = RCC_PLLCFGR_PLLSRC_HSE;  // a ostatni vynulovat
 80015d2:	4b26      	ldr	r3, [pc, #152]	; (800166c <SystemClock_100MHz+0x108>)
 80015d4:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
 80015d8:	605a      	str	r2, [r3, #4]

  // Cube: HSE 8M, CLK 100M - /M = 4, PLL: N = 100x, P = /2
  // AHB = /1, APB1 = /2, APB2 = /1

  RCC->PLLCFGR |= 100 << 6;   // N 100x = 001100100 na [14..6]
 80015da:	4a24      	ldr	r2, [pc, #144]	; (800166c <SystemClock_100MHz+0x108>)
 80015dc:	4b23      	ldr	r3, [pc, #140]	; (800166c <SystemClock_100MHz+0x108>)
 80015de:	685b      	ldr	r3, [r3, #4]
 80015e0:	f443 53c8 	orr.w	r3, r3, #6400	; 0x1900
 80015e4:	6053      	str	r3, [r2, #4]
  RCC->PLLCFGR |= 4;          // M   /4 = 000100    na [5..0]
 80015e6:	4a21      	ldr	r2, [pc, #132]	; (800166c <SystemClock_100MHz+0x108>)
 80015e8:	4b20      	ldr	r3, [pc, #128]	; (800166c <SystemClock_100MHz+0x108>)
 80015ea:	685b      	ldr	r3, [r3, #4]
 80015ec:	f043 0304 	orr.w	r3, r3, #4
 80015f0:	6053      	str	r3, [r2, #4]
                              // P   /2 = 00        na [17..16]

  RCC->CFGR &= ~RCC_CFGR_HPRE;   // 0xxx = not divided
 80015f2:	4a1e      	ldr	r2, [pc, #120]	; (800166c <SystemClock_100MHz+0x108>)
 80015f4:	4b1d      	ldr	r3, [pc, #116]	; (800166c <SystemClock_100MHz+0x108>)
 80015f6:	689b      	ldr	r3, [r3, #8]
 80015f8:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80015fc:	6093      	str	r3, [r2, #8]
  RCC->CFGR &= ~RCC_CFGR_PPRE1;  // 0xx = not divided
 80015fe:	4a1b      	ldr	r2, [pc, #108]	; (800166c <SystemClock_100MHz+0x108>)
 8001600:	4b1a      	ldr	r3, [pc, #104]	; (800166c <SystemClock_100MHz+0x108>)
 8001602:	689b      	ldr	r3, [r3, #8]
 8001604:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8001608:	6093      	str	r3, [r2, #8]
//  RCC->CFGR |= RCC_CFGR_PPRE1_DIV2;  // 100 = /2
  RCC->CFGR |= RCC_CFGR_PPRE1_DIV4;  // 100 = /4 - podle Cube sice max. 50MHz, ale omezuje to I2C max. 42
 800160a:	4a18      	ldr	r2, [pc, #96]	; (800166c <SystemClock_100MHz+0x108>)
 800160c:	4b17      	ldr	r3, [pc, #92]	; (800166c <SystemClock_100MHz+0x108>)
 800160e:	689b      	ldr	r3, [r3, #8]
 8001610:	f443 53a0 	orr.w	r3, r3, #5120	; 0x1400
 8001614:	6093      	str	r3, [r2, #8]
  RCC->CFGR &= ~RCC_CFGR_PPRE2;  // 0xx = not divided
 8001616:	4a15      	ldr	r2, [pc, #84]	; (800166c <SystemClock_100MHz+0x108>)
 8001618:	4b14      	ldr	r3, [pc, #80]	; (800166c <SystemClock_100MHz+0x108>)
 800161a:	689b      	ldr	r3, [r3, #8]
 800161c:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8001620:	6093      	str	r3, [r2, #8]

  RCC->CR |= RCC_CR_PLLON;
 8001622:	4a12      	ldr	r2, [pc, #72]	; (800166c <SystemClock_100MHz+0x108>)
 8001624:	4b11      	ldr	r3, [pc, #68]	; (800166c <SystemClock_100MHz+0x108>)
 8001626:	681b      	ldr	r3, [r3, #0]
 8001628:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800162c:	6013      	str	r3, [r2, #0]
  while(!(RCC->CR & RCC_CR_PLLRDY))
 800162e:	bf00      	nop
 8001630:	4b0e      	ldr	r3, [pc, #56]	; (800166c <SystemClock_100MHz+0x108>)
 8001632:	681b      	ldr	r3, [r3, #0]
 8001634:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001638:	2b00      	cmp	r3, #0
 800163a:	d0f9      	beq.n	8001630 <SystemClock_100MHz+0xcc>
    ;

  FLASH->ACR &= ~FLASH_ACR_LATENCY;    // dle RM 3.4.1, Table 5
 800163c:	4a0d      	ldr	r2, [pc, #52]	; (8001674 <SystemClock_100MHz+0x110>)
 800163e:	4b0d      	ldr	r3, [pc, #52]	; (8001674 <SystemClock_100MHz+0x110>)
 8001640:	681b      	ldr	r3, [r3, #0]
 8001642:	f023 030f 	bic.w	r3, r3, #15
 8001646:	6013      	str	r3, [r2, #0]
  FLASH->ACR |= FLASH_ACR_LATENCY_3WS;
 8001648:	4a0a      	ldr	r2, [pc, #40]	; (8001674 <SystemClock_100MHz+0x110>)
 800164a:	4b0a      	ldr	r3, [pc, #40]	; (8001674 <SystemClock_100MHz+0x110>)
 800164c:	681b      	ldr	r3, [r3, #0]
 800164e:	f043 0303 	orr.w	r3, r3, #3
 8001652:	6013      	str	r3, [r2, #0]

  RCC->CFGR |= RCC_CFGR_SW_PLL;    // a jede se z PLL
 8001654:	4a05      	ldr	r2, [pc, #20]	; (800166c <SystemClock_100MHz+0x108>)
 8001656:	4b05      	ldr	r3, [pc, #20]	; (800166c <SystemClock_100MHz+0x108>)
 8001658:	689b      	ldr	r3, [r3, #8]
 800165a:	f043 0302 	orr.w	r3, r3, #2
 800165e:	6093      	str	r3, [r2, #8]
  //TODO test SWS - clock status
}
 8001660:	bf00      	nop
 8001662:	46bd      	mov	sp, r7
 8001664:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001668:	4770      	bx	lr
 800166a:	bf00      	nop
 800166c:	40023800 	.word	0x40023800
 8001670:	40007000 	.word	0x40007000
 8001674:	40023c00 	.word	0x40023c00

08001678 <Nucleo_SetPinGPIO>:

bool Nucleo_SetPinGPIO(GPIO_TypeDef *gpio, uint32_t bitnum, nucleoPinAttribute typ)
{
 8001678:	b480      	push	{r7}
 800167a:	b087      	sub	sp, #28
 800167c:	af00      	add	r7, sp, #0
 800167e:	60f8      	str	r0, [r7, #12]
 8001680:	60b9      	str	r1, [r7, #8]
 8001682:	4613      	mov	r3, r2
 8001684:	71fb      	strb	r3, [r7, #7]
  uint32_t enr_mask = 0;
 8001686:	2300      	movs	r3, #0
 8001688:	617b      	str	r3, [r7, #20]
  uint32_t rstr_mask = 0;
 800168a:	2300      	movs	r3, #0
 800168c:	613b      	str	r3, [r7, #16]

  switch((uint32_t)gpio)
 800168e:	68fb      	ldr	r3, [r7, #12]
 8001690:	4a85      	ldr	r2, [pc, #532]	; (80018a8 <Nucleo_SetPinGPIO+0x230>)
 8001692:	4293      	cmp	r3, r2
 8001694:	d01d      	beq.n	80016d2 <Nucleo_SetPinGPIO+0x5a>
 8001696:	4a84      	ldr	r2, [pc, #528]	; (80018a8 <Nucleo_SetPinGPIO+0x230>)
 8001698:	4293      	cmp	r3, r2
 800169a:	d806      	bhi.n	80016aa <Nucleo_SetPinGPIO+0x32>
 800169c:	4a83      	ldr	r2, [pc, #524]	; (80018ac <Nucleo_SetPinGPIO+0x234>)
 800169e:	4293      	cmp	r3, r2
 80016a0:	d00d      	beq.n	80016be <Nucleo_SetPinGPIO+0x46>
 80016a2:	4a83      	ldr	r2, [pc, #524]	; (80018b0 <Nucleo_SetPinGPIO+0x238>)
 80016a4:	4293      	cmp	r3, r2
 80016a6:	d00f      	beq.n	80016c8 <Nucleo_SetPinGPIO+0x50>
 80016a8:	e027      	b.n	80016fa <Nucleo_SetPinGPIO+0x82>
 80016aa:	4a82      	ldr	r2, [pc, #520]	; (80018b4 <Nucleo_SetPinGPIO+0x23c>)
 80016ac:	4293      	cmp	r3, r2
 80016ae:	d01a      	beq.n	80016e6 <Nucleo_SetPinGPIO+0x6e>
 80016b0:	4a81      	ldr	r2, [pc, #516]	; (80018b8 <Nucleo_SetPinGPIO+0x240>)
 80016b2:	4293      	cmp	r3, r2
 80016b4:	d01c      	beq.n	80016f0 <Nucleo_SetPinGPIO+0x78>
 80016b6:	4a81      	ldr	r2, [pc, #516]	; (80018bc <Nucleo_SetPinGPIO+0x244>)
 80016b8:	4293      	cmp	r3, r2
 80016ba:	d00f      	beq.n	80016dc <Nucleo_SetPinGPIO+0x64>
 80016bc:	e01d      	b.n	80016fa <Nucleo_SetPinGPIO+0x82>
  {
    case (uint32_t)GPIOA:
      enr_mask = RCC_AHB1ENR_GPIOAEN;
 80016be:	2301      	movs	r3, #1
 80016c0:	617b      	str	r3, [r7, #20]
      rstr_mask = RCC_AHB1RSTR_GPIOARST;
 80016c2:	2301      	movs	r3, #1
 80016c4:	613b      	str	r3, [r7, #16]
      break;
 80016c6:	e01a      	b.n	80016fe <Nucleo_SetPinGPIO+0x86>
    case (uint32_t)GPIOB:
      enr_mask = RCC_AHB1ENR_GPIOBEN;
 80016c8:	2302      	movs	r3, #2
 80016ca:	617b      	str	r3, [r7, #20]
      rstr_mask = RCC_AHB1RSTR_GPIOBRST;
 80016cc:	2302      	movs	r3, #2
 80016ce:	613b      	str	r3, [r7, #16]
      break;
 80016d0:	e015      	b.n	80016fe <Nucleo_SetPinGPIO+0x86>
    case (uint32_t)GPIOC:
      enr_mask = RCC_AHB1ENR_GPIOCEN;
 80016d2:	2304      	movs	r3, #4
 80016d4:	617b      	str	r3, [r7, #20]
      rstr_mask = RCC_AHB1RSTR_GPIOCRST;
 80016d6:	2304      	movs	r3, #4
 80016d8:	613b      	str	r3, [r7, #16]
      break;
 80016da:	e010      	b.n	80016fe <Nucleo_SetPinGPIO+0x86>
    case (uint32_t)GPIOD:
      enr_mask = RCC_AHB1ENR_GPIODEN;
 80016dc:	2308      	movs	r3, #8
 80016de:	617b      	str	r3, [r7, #20]
      rstr_mask = RCC_AHB1RSTR_GPIODRST;
 80016e0:	2308      	movs	r3, #8
 80016e2:	613b      	str	r3, [r7, #16]
      break;
 80016e4:	e00b      	b.n	80016fe <Nucleo_SetPinGPIO+0x86>
    case (uint32_t)GPIOE:
      enr_mask = RCC_AHB1ENR_GPIOEEN;
 80016e6:	2310      	movs	r3, #16
 80016e8:	617b      	str	r3, [r7, #20]
      rstr_mask = RCC_AHB1RSTR_GPIOERST;
 80016ea:	2310      	movs	r3, #16
 80016ec:	613b      	str	r3, [r7, #16]
      break;
 80016ee:	e006      	b.n	80016fe <Nucleo_SetPinGPIO+0x86>
      enr_mask = RCC_AHB1ENR_GPIOGEN;
      rstr_mask = RCC_AHB1RSTR_GPIOGRST;
      break;
      */
    case (uint32_t)GPIOH:
      enr_mask = RCC_AHB1ENR_GPIOHEN;
 80016f0:	2380      	movs	r3, #128	; 0x80
 80016f2:	617b      	str	r3, [r7, #20]
      rstr_mask = RCC_AHB1RSTR_GPIOHRST;
 80016f4:	2380      	movs	r3, #128	; 0x80
 80016f6:	613b      	str	r3, [r7, #16]
      break;
 80016f8:	e001      	b.n	80016fe <Nucleo_SetPinGPIO+0x86>
    default:
      return false;
 80016fa:	2300      	movs	r3, #0
 80016fc:	e0cd      	b.n	800189a <Nucleo_SetPinGPIO+0x222>
  }

  if (!(RCC->AHB1ENR & enr_mask))     // not set yet ?
 80016fe:	4b70      	ldr	r3, [pc, #448]	; (80018c0 <Nucleo_SetPinGPIO+0x248>)
 8001700:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001702:	697b      	ldr	r3, [r7, #20]
 8001704:	4013      	ands	r3, r2
 8001706:	2b00      	cmp	r3, #0
 8001708:	d112      	bne.n	8001730 <Nucleo_SetPinGPIO+0xb8>
  {
    RCC->AHB1ENR |= enr_mask;         // enable peripheral clock
 800170a:	496d      	ldr	r1, [pc, #436]	; (80018c0 <Nucleo_SetPinGPIO+0x248>)
 800170c:	4b6c      	ldr	r3, [pc, #432]	; (80018c0 <Nucleo_SetPinGPIO+0x248>)
 800170e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001710:	697b      	ldr	r3, [r7, #20]
 8001712:	4313      	orrs	r3, r2
 8001714:	630b      	str	r3, [r1, #48]	; 0x30
    RCC->AHB1RSTR |= rstr_mask;       // reset peripheral
 8001716:	496a      	ldr	r1, [pc, #424]	; (80018c0 <Nucleo_SetPinGPIO+0x248>)
 8001718:	4b69      	ldr	r3, [pc, #420]	; (80018c0 <Nucleo_SetPinGPIO+0x248>)
 800171a:	691a      	ldr	r2, [r3, #16]
 800171c:	693b      	ldr	r3, [r7, #16]
 800171e:	4313      	orrs	r3, r2
 8001720:	610b      	str	r3, [r1, #16]
    RCC->AHB1RSTR &= ~rstr_mask;
 8001722:	4967      	ldr	r1, [pc, #412]	; (80018c0 <Nucleo_SetPinGPIO+0x248>)
 8001724:	4b66      	ldr	r3, [pc, #408]	; (80018c0 <Nucleo_SetPinGPIO+0x248>)
 8001726:	691a      	ldr	r2, [r3, #16]
 8001728:	693b      	ldr	r3, [r7, #16]
 800172a:	43db      	mvns	r3, r3
 800172c:	4013      	ands	r3, r2
 800172e:	610b      	str	r3, [r1, #16]
  }

  gpio->MODER &= ~(0x00000003 << (2 * bitnum));    // clear 2 bits
 8001730:	68fb      	ldr	r3, [r7, #12]
 8001732:	681b      	ldr	r3, [r3, #0]
 8001734:	68ba      	ldr	r2, [r7, #8]
 8001736:	0052      	lsls	r2, r2, #1
 8001738:	2103      	movs	r1, #3
 800173a:	fa01 f202 	lsl.w	r2, r1, r2
 800173e:	43d2      	mvns	r2, r2
 8001740:	401a      	ands	r2, r3
 8001742:	68fb      	ldr	r3, [r7, #12]
 8001744:	601a      	str	r2, [r3, #0]
  switch(typ)
 8001746:	79fb      	ldrb	r3, [r7, #7]
 8001748:	3b01      	subs	r3, #1
 800174a:	2b06      	cmp	r3, #6
 800174c:	f200 80a2 	bhi.w	8001894 <Nucleo_SetPinGPIO+0x21c>
 8001750:	a201      	add	r2, pc, #4	; (adr r2, 8001758 <Nucleo_SetPinGPIO+0xe0>)
 8001752:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001756:	bf00      	nop
 8001758:	080017a1 	.word	0x080017a1
 800175c:	08001775 	.word	0x08001775
 8001760:	080017b9 	.word	0x080017b9
 8001764:	080017b9 	.word	0x080017b9
 8001768:	0800187f 	.word	0x0800187f
 800176c:	08001827 	.word	0x08001827
 8001770:	08001827 	.word	0x08001827
  {
    case input_pullup:
      gpio->PUPDR &= ~(0x00000003 << (2 * bitnum)); // 01 = pull-up
 8001774:	68fb      	ldr	r3, [r7, #12]
 8001776:	68db      	ldr	r3, [r3, #12]
 8001778:	68ba      	ldr	r2, [r7, #8]
 800177a:	0052      	lsls	r2, r2, #1
 800177c:	2103      	movs	r1, #3
 800177e:	fa01 f202 	lsl.w	r2, r1, r2
 8001782:	43d2      	mvns	r2, r2
 8001784:	401a      	ands	r2, r3
 8001786:	68fb      	ldr	r3, [r7, #12]
 8001788:	60da      	str	r2, [r3, #12]
      gpio->PUPDR |= 0x00000001 << (2 * bitnum);
 800178a:	68fb      	ldr	r3, [r7, #12]
 800178c:	68db      	ldr	r3, [r3, #12]
 800178e:	68ba      	ldr	r2, [r7, #8]
 8001790:	0052      	lsls	r2, r2, #1
 8001792:	2101      	movs	r1, #1
 8001794:	fa01 f202 	lsl.w	r2, r1, r2
 8001798:	431a      	orrs	r2, r3
 800179a:	68fb      	ldr	r3, [r7, #12]
 800179c:	60da      	str	r2, [r3, #12]
      break;
 800179e:	e07b      	b.n	8001898 <Nucleo_SetPinGPIO+0x220>
    case input:     // 00 = input mode, nothing to do
      gpio->PUPDR &= ~(0x00000003 << (2 * bitnum)); // 00 = no pull-up/dn
 80017a0:	68fb      	ldr	r3, [r7, #12]
 80017a2:	68db      	ldr	r3, [r3, #12]
 80017a4:	68ba      	ldr	r2, [r7, #8]
 80017a6:	0052      	lsls	r2, r2, #1
 80017a8:	2103      	movs	r1, #3
 80017aa:	fa01 f202 	lsl.w	r2, r1, r2
 80017ae:	43d2      	mvns	r2, r2
 80017b0:	401a      	ands	r2, r3
 80017b2:	68fb      	ldr	r3, [r7, #12]
 80017b4:	60da      	str	r2, [r3, #12]
      break;
 80017b6:	e06f      	b.n	8001898 <Nucleo_SetPinGPIO+0x220>
    case output:    // 01 = output mode
    case output_open:
      gpio->MODER |= 0x00000001 << (2 * bitnum);    // set bits
 80017b8:	68fb      	ldr	r3, [r7, #12]
 80017ba:	681b      	ldr	r3, [r3, #0]
 80017bc:	68ba      	ldr	r2, [r7, #8]
 80017be:	0052      	lsls	r2, r2, #1
 80017c0:	2101      	movs	r1, #1
 80017c2:	fa01 f202 	lsl.w	r2, r1, r2
 80017c6:	431a      	orrs	r2, r3
 80017c8:	68fb      	ldr	r3, [r7, #12]
 80017ca:	601a      	str	r2, [r3, #0]

      if (typ == output_open)
 80017cc:	79fb      	ldrb	r3, [r7, #7]
 80017ce:	2b04      	cmp	r3, #4
 80017d0:	d109      	bne.n	80017e6 <Nucleo_SetPinGPIO+0x16e>
        gpio->OTYPER |= 0x00000001 << bitnum;      // 1 = open-drain, one bit per GPIO
 80017d2:	68fb      	ldr	r3, [r7, #12]
 80017d4:	685b      	ldr	r3, [r3, #4]
 80017d6:	2101      	movs	r1, #1
 80017d8:	68ba      	ldr	r2, [r7, #8]
 80017da:	fa01 f202 	lsl.w	r2, r1, r2
 80017de:	431a      	orrs	r2, r3
 80017e0:	68fb      	ldr	r3, [r7, #12]
 80017e2:	605a      	str	r2, [r3, #4]
 80017e4:	e009      	b.n	80017fa <Nucleo_SetPinGPIO+0x182>
      else
        gpio->OTYPER &= ~(0x00000001 << bitnum);      // 0 = push-pull, one bit per GPIO
 80017e6:	68fb      	ldr	r3, [r7, #12]
 80017e8:	685b      	ldr	r3, [r3, #4]
 80017ea:	2101      	movs	r1, #1
 80017ec:	68ba      	ldr	r2, [r7, #8]
 80017ee:	fa01 f202 	lsl.w	r2, r1, r2
 80017f2:	43d2      	mvns	r2, r2
 80017f4:	401a      	ands	r2, r3
 80017f6:	68fb      	ldr	r3, [r7, #12]
 80017f8:	605a      	str	r2, [r3, #4]

      gpio->OSPEEDR |= 0x00000003 << (2 * bitnum);  // high-speed = 11
 80017fa:	68fb      	ldr	r3, [r7, #12]
 80017fc:	689b      	ldr	r3, [r3, #8]
 80017fe:	68ba      	ldr	r2, [r7, #8]
 8001800:	0052      	lsls	r2, r2, #1
 8001802:	2103      	movs	r1, #3
 8001804:	fa01 f202 	lsl.w	r2, r1, r2
 8001808:	431a      	orrs	r2, r3
 800180a:	68fb      	ldr	r3, [r7, #12]
 800180c:	609a      	str	r2, [r3, #8]

      gpio->PUPDR &= ~(0x00000003 << (2 * bitnum)); // 00 = no pull-up/pull-down
 800180e:	68fb      	ldr	r3, [r7, #12]
 8001810:	68db      	ldr	r3, [r3, #12]
 8001812:	68ba      	ldr	r2, [r7, #8]
 8001814:	0052      	lsls	r2, r2, #1
 8001816:	2103      	movs	r1, #3
 8001818:	fa01 f202 	lsl.w	r2, r1, r2
 800181c:	43d2      	mvns	r2, r2
 800181e:	401a      	ands	r2, r3
 8001820:	68fb      	ldr	r3, [r7, #12]
 8001822:	60da      	str	r2, [r3, #12]
      break;
 8001824:	e038      	b.n	8001898 <Nucleo_SetPinGPIO+0x220>
    case alter:     // 10 = AF
    case alter_open:
      gpio->MODER |= 0x00000002 << (2 * bitnum);    // set bits
 8001826:	68fb      	ldr	r3, [r7, #12]
 8001828:	681b      	ldr	r3, [r3, #0]
 800182a:	68ba      	ldr	r2, [r7, #8]
 800182c:	0052      	lsls	r2, r2, #1
 800182e:	2102      	movs	r1, #2
 8001830:	fa01 f202 	lsl.w	r2, r1, r2
 8001834:	431a      	orrs	r2, r3
 8001836:	68fb      	ldr	r3, [r7, #12]
 8001838:	601a      	str	r2, [r3, #0]
        // don't forget set AFR registers !!!
      if (typ == alter_open)
 800183a:	79fb      	ldrb	r3, [r7, #7]
 800183c:	2b07      	cmp	r3, #7
 800183e:	d109      	bne.n	8001854 <Nucleo_SetPinGPIO+0x1dc>
        gpio->OTYPER |= 0x00000001 << bitnum;      // 1 = open-drain, one bit per GPIO
 8001840:	68fb      	ldr	r3, [r7, #12]
 8001842:	685b      	ldr	r3, [r3, #4]
 8001844:	2101      	movs	r1, #1
 8001846:	68ba      	ldr	r2, [r7, #8]
 8001848:	fa01 f202 	lsl.w	r2, r1, r2
 800184c:	431a      	orrs	r2, r3
 800184e:	68fb      	ldr	r3, [r7, #12]
 8001850:	605a      	str	r2, [r3, #4]
 8001852:	e009      	b.n	8001868 <Nucleo_SetPinGPIO+0x1f0>
      else
        gpio->OTYPER &= ~(0x00000001 << bitnum);      // 0 = push-pull, one bit per GPIO
 8001854:	68fb      	ldr	r3, [r7, #12]
 8001856:	685b      	ldr	r3, [r3, #4]
 8001858:	2101      	movs	r1, #1
 800185a:	68ba      	ldr	r2, [r7, #8]
 800185c:	fa01 f202 	lsl.w	r2, r1, r2
 8001860:	43d2      	mvns	r2, r2
 8001862:	401a      	ands	r2, r3
 8001864:	68fb      	ldr	r3, [r7, #12]
 8001866:	605a      	str	r2, [r3, #4]

      gpio->OSPEEDR |= 0x00000003 << (2 * bitnum);  // high-speed = 11
 8001868:	68fb      	ldr	r3, [r7, #12]
 800186a:	689b      	ldr	r3, [r3, #8]
 800186c:	68ba      	ldr	r2, [r7, #8]
 800186e:	0052      	lsls	r2, r2, #1
 8001870:	2103      	movs	r1, #3
 8001872:	fa01 f202 	lsl.w	r2, r1, r2
 8001876:	431a      	orrs	r2, r3
 8001878:	68fb      	ldr	r3, [r7, #12]
 800187a:	609a      	str	r2, [r3, #8]
      break;
 800187c:	e00c      	b.n	8001898 <Nucleo_SetPinGPIO+0x220>
    case analog:    // 11 - analog mode
      gpio->MODER |= 0x00000003 << (2 * bitnum);    // set bits
 800187e:	68fb      	ldr	r3, [r7, #12]
 8001880:	681b      	ldr	r3, [r3, #0]
 8001882:	68ba      	ldr	r2, [r7, #8]
 8001884:	0052      	lsls	r2, r2, #1
 8001886:	2103      	movs	r1, #3
 8001888:	fa01 f202 	lsl.w	r2, r1, r2
 800188c:	431a      	orrs	r2, r3
 800188e:	68fb      	ldr	r3, [r7, #12]
 8001890:	601a      	str	r2, [r3, #0]
      break;
 8001892:	e001      	b.n	8001898 <Nucleo_SetPinGPIO+0x220>
    default:
      return false;
 8001894:	2300      	movs	r3, #0
 8001896:	e000      	b.n	800189a <Nucleo_SetPinGPIO+0x222>
  }

  return true;
 8001898:	2301      	movs	r3, #1
}
 800189a:	4618      	mov	r0, r3
 800189c:	371c      	adds	r7, #28
 800189e:	46bd      	mov	sp, r7
 80018a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018a4:	4770      	bx	lr
 80018a6:	bf00      	nop
 80018a8:	40020800 	.word	0x40020800
 80018ac:	40020000 	.word	0x40020000
 80018b0:	40020400 	.word	0x40020400
 80018b4:	40021000 	.word	0x40021000
 80018b8:	40021c00 	.word	0x40021c00
 80018bc:	40020c00 	.word	0x40020c00
 80018c0:	40023800 	.word	0x40023800

080018c4 <Nucleo_SetPinAFGPIO>:

bool Nucleo_SetPinAFGPIO(GPIO_TypeDef *gpio, uint32_t bitnum, uint32_t afValue)
{
 80018c4:	b480      	push	{r7}
 80018c6:	b085      	sub	sp, #20
 80018c8:	af00      	add	r7, sp, #0
 80018ca:	60f8      	str	r0, [r7, #12]
 80018cc:	60b9      	str	r1, [r7, #8]
 80018ce:	607a      	str	r2, [r7, #4]
  gpio->AFR[(bitnum < 8) ? 0 : 1] &= ~(0x0000000f << (4 * (bitnum & 0x7)));    // clear 4 bits
 80018d0:	68bb      	ldr	r3, [r7, #8]
 80018d2:	2b07      	cmp	r3, #7
 80018d4:	bf8c      	ite	hi
 80018d6:	2301      	movhi	r3, #1
 80018d8:	2300      	movls	r3, #0
 80018da:	b2db      	uxtb	r3, r3
 80018dc:	4618      	mov	r0, r3
 80018de:	68bb      	ldr	r3, [r7, #8]
 80018e0:	2b07      	cmp	r3, #7
 80018e2:	bf8c      	ite	hi
 80018e4:	2301      	movhi	r3, #1
 80018e6:	2300      	movls	r3, #0
 80018e8:	b2db      	uxtb	r3, r3
 80018ea:	461a      	mov	r2, r3
 80018ec:	68fb      	ldr	r3, [r7, #12]
 80018ee:	3208      	adds	r2, #8
 80018f0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80018f4:	68ba      	ldr	r2, [r7, #8]
 80018f6:	f002 0207 	and.w	r2, r2, #7
 80018fa:	0092      	lsls	r2, r2, #2
 80018fc:	210f      	movs	r1, #15
 80018fe:	fa01 f202 	lsl.w	r2, r1, r2
 8001902:	43d2      	mvns	r2, r2
 8001904:	ea03 0102 	and.w	r1, r3, r2
 8001908:	68fb      	ldr	r3, [r7, #12]
 800190a:	f100 0208 	add.w	r2, r0, #8
 800190e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  gpio->AFR[(bitnum < 8) ? 0 : 1] |= (afValue << (4 * (bitnum & 0x7)));        // set AF bits
 8001912:	68bb      	ldr	r3, [r7, #8]
 8001914:	2b07      	cmp	r3, #7
 8001916:	bf8c      	ite	hi
 8001918:	2301      	movhi	r3, #1
 800191a:	2300      	movls	r3, #0
 800191c:	b2db      	uxtb	r3, r3
 800191e:	4618      	mov	r0, r3
 8001920:	68bb      	ldr	r3, [r7, #8]
 8001922:	2b07      	cmp	r3, #7
 8001924:	bf8c      	ite	hi
 8001926:	2301      	movhi	r3, #1
 8001928:	2300      	movls	r3, #0
 800192a:	b2db      	uxtb	r3, r3
 800192c:	461a      	mov	r2, r3
 800192e:	68fb      	ldr	r3, [r7, #12]
 8001930:	3208      	adds	r2, #8
 8001932:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8001936:	68bb      	ldr	r3, [r7, #8]
 8001938:	f003 0307 	and.w	r3, r3, #7
 800193c:	009b      	lsls	r3, r3, #2
 800193e:	6879      	ldr	r1, [r7, #4]
 8001940:	fa01 f303 	lsl.w	r3, r1, r3
 8001944:	ea42 0103 	orr.w	r1, r2, r3
 8001948:	68fb      	ldr	r3, [r7, #12]
 800194a:	f100 0208 	add.w	r2, r0, #8
 800194e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  return true;
 8001952:	2301      	movs	r3, #1
}
 8001954:	4618      	mov	r0, r3
 8001956:	3714      	adds	r7, #20
 8001958:	46bd      	mov	sp, r7
 800195a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800195e:	4770      	bx	lr

08001960 <Nucleo_StartUart2>:
 */

#include "nucleo_uart.h"

bool Nucleo_StartUart2(uint32_t baudrate)
{
 8001960:	b480      	push	{r7}
 8001962:	b087      	sub	sp, #28
 8001964:	af00      	add	r7, sp, #0
 8001966:	6078      	str	r0, [r7, #4]
  Nucleo_SetPinGPIO(GPIOA, 2, alter);
  Nucleo_SetPinAFGPIO(GPIOA, 2, 7);
  Nucleo_SetPinGPIO(GPIOA, 3, alter);
  Nucleo_SetPinAFGPIO(GPIOA, 3, 7);
#else
  if (!(RCC->AHB1ENR & RCC_AHB1ENR_GPIOAEN))
 8001968:	4b73      	ldr	r3, [pc, #460]	; (8001b38 <Nucleo_StartUart2+0x1d8>)
 800196a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800196c:	f003 0301 	and.w	r3, r3, #1
 8001970:	2b00      	cmp	r3, #0
 8001972:	d111      	bne.n	8001998 <Nucleo_StartUart2+0x38>
  {
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN;
 8001974:	4a70      	ldr	r2, [pc, #448]	; (8001b38 <Nucleo_StartUart2+0x1d8>)
 8001976:	4b70      	ldr	r3, [pc, #448]	; (8001b38 <Nucleo_StartUart2+0x1d8>)
 8001978:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800197a:	f043 0301 	orr.w	r3, r3, #1
 800197e:	6313      	str	r3, [r2, #48]	; 0x30
    RCC->AHB1RSTR |= RCC_AHB1RSTR_GPIOARST;
 8001980:	4a6d      	ldr	r2, [pc, #436]	; (8001b38 <Nucleo_StartUart2+0x1d8>)
 8001982:	4b6d      	ldr	r3, [pc, #436]	; (8001b38 <Nucleo_StartUart2+0x1d8>)
 8001984:	691b      	ldr	r3, [r3, #16]
 8001986:	f043 0301 	orr.w	r3, r3, #1
 800198a:	6113      	str	r3, [r2, #16]
    RCC->AHB1RSTR &= ~RCC_AHB1RSTR_GPIOARST;
 800198c:	4a6a      	ldr	r2, [pc, #424]	; (8001b38 <Nucleo_StartUart2+0x1d8>)
 800198e:	4b6a      	ldr	r3, [pc, #424]	; (8001b38 <Nucleo_StartUart2+0x1d8>)
 8001990:	691b      	ldr	r3, [r3, #16]
 8001992:	f023 0301 	bic.w	r3, r3, #1
 8001996:	6113      	str	r3, [r2, #16]
  }

  GPIOA->MODER |= 0x02 << (2 * 2);  // 10 = AF
 8001998:	4a68      	ldr	r2, [pc, #416]	; (8001b3c <Nucleo_StartUart2+0x1dc>)
 800199a:	4b68      	ldr	r3, [pc, #416]	; (8001b3c <Nucleo_StartUart2+0x1dc>)
 800199c:	681b      	ldr	r3, [r3, #0]
 800199e:	f043 0320 	orr.w	r3, r3, #32
 80019a2:	6013      	str	r3, [r2, #0]
  GPIOA->MODER |= 0x02 << (3 * 2);  // 10 = AF
 80019a4:	4a65      	ldr	r2, [pc, #404]	; (8001b3c <Nucleo_StartUart2+0x1dc>)
 80019a6:	4b65      	ldr	r3, [pc, #404]	; (8001b3c <Nucleo_StartUart2+0x1dc>)
 80019a8:	681b      	ldr	r3, [r3, #0]
 80019aa:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80019ae:	6013      	str	r3, [r2, #0]

  GPIOA->OSPEEDR |= 0x03 << (2 * 2);  // 11 = high-speed
 80019b0:	4a62      	ldr	r2, [pc, #392]	; (8001b3c <Nucleo_StartUart2+0x1dc>)
 80019b2:	4b62      	ldr	r3, [pc, #392]	; (8001b3c <Nucleo_StartUart2+0x1dc>)
 80019b4:	689b      	ldr	r3, [r3, #8]
 80019b6:	f043 0330 	orr.w	r3, r3, #48	; 0x30
 80019ba:	6093      	str	r3, [r2, #8]
  GPIOA->OSPEEDR |= 0x03 << (3 * 2);  // 11 = high-speed
 80019bc:	4a5f      	ldr	r2, [pc, #380]	; (8001b3c <Nucleo_StartUart2+0x1dc>)
 80019be:	4b5f      	ldr	r3, [pc, #380]	; (8001b3c <Nucleo_StartUart2+0x1dc>)
 80019c0:	689b      	ldr	r3, [r3, #8]
 80019c2:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 80019c6:	6093      	str	r3, [r2, #8]

  GPIOA->AFR[0] &= ~(0x0f << (2 * 4));  // clear AF code
 80019c8:	4a5c      	ldr	r2, [pc, #368]	; (8001b3c <Nucleo_StartUart2+0x1dc>)
 80019ca:	4b5c      	ldr	r3, [pc, #368]	; (8001b3c <Nucleo_StartUart2+0x1dc>)
 80019cc:	6a1b      	ldr	r3, [r3, #32]
 80019ce:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 80019d2:	6213      	str	r3, [r2, #32]
  GPIOA->AFR[0] |= 0x07 << (2 * 4);  // AF code
 80019d4:	4a59      	ldr	r2, [pc, #356]	; (8001b3c <Nucleo_StartUart2+0x1dc>)
 80019d6:	4b59      	ldr	r3, [pc, #356]	; (8001b3c <Nucleo_StartUart2+0x1dc>)
 80019d8:	6a1b      	ldr	r3, [r3, #32]
 80019da:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 80019de:	6213      	str	r3, [r2, #32]
  GPIOA->AFR[0] &= ~(0x0f << (3 * 4));  // clear AF code
 80019e0:	4a56      	ldr	r2, [pc, #344]	; (8001b3c <Nucleo_StartUart2+0x1dc>)
 80019e2:	4b56      	ldr	r3, [pc, #344]	; (8001b3c <Nucleo_StartUart2+0x1dc>)
 80019e4:	6a1b      	ldr	r3, [r3, #32]
 80019e6:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 80019ea:	6213      	str	r3, [r2, #32]
  GPIOA->AFR[0] |= 0x07 << (3 * 4);
 80019ec:	4a53      	ldr	r2, [pc, #332]	; (8001b3c <Nucleo_StartUart2+0x1dc>)
 80019ee:	4b53      	ldr	r3, [pc, #332]	; (8001b3c <Nucleo_StartUart2+0x1dc>)
 80019f0:	6a1b      	ldr	r3, [r3, #32]
 80019f2:	f443 43e0 	orr.w	r3, r3, #28672	; 0x7000
 80019f6:	6213      	str	r3, [r2, #32]
#endif

  if (!(RCC->APB1ENR & RCC_APB1ENR_USART2EN))     // not running yet ?
 80019f8:	4b4f      	ldr	r3, [pc, #316]	; (8001b38 <Nucleo_StartUart2+0x1d8>)
 80019fa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80019fc:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001a00:	2b00      	cmp	r3, #0
 8001a02:	d111      	bne.n	8001a28 <Nucleo_StartUart2+0xc8>
  {
    RCC->APB1ENR |= RCC_APB1ENR_USART2EN;
 8001a04:	4a4c      	ldr	r2, [pc, #304]	; (8001b38 <Nucleo_StartUart2+0x1d8>)
 8001a06:	4b4c      	ldr	r3, [pc, #304]	; (8001b38 <Nucleo_StartUart2+0x1d8>)
 8001a08:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001a0a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001a0e:	6413      	str	r3, [r2, #64]	; 0x40
    RCC->APB1RSTR |= RCC_APB1RSTR_USART2RST;
 8001a10:	4a49      	ldr	r2, [pc, #292]	; (8001b38 <Nucleo_StartUart2+0x1d8>)
 8001a12:	4b49      	ldr	r3, [pc, #292]	; (8001b38 <Nucleo_StartUart2+0x1d8>)
 8001a14:	6a1b      	ldr	r3, [r3, #32]
 8001a16:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001a1a:	6213      	str	r3, [r2, #32]
    RCC->APB1RSTR &= ~RCC_APB1RSTR_USART2RST;
 8001a1c:	4a46      	ldr	r2, [pc, #280]	; (8001b38 <Nucleo_StartUart2+0x1d8>)
 8001a1e:	4b46      	ldr	r3, [pc, #280]	; (8001b38 <Nucleo_StartUart2+0x1d8>)
 8001a20:	6a1b      	ldr	r3, [r3, #32]
 8001a22:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 8001a26:	6213      	str	r3, [r2, #32]
  }

  USART2->CR1 = USART_CR1_RE | USART_CR1_TE;
 8001a28:	4b45      	ldr	r3, [pc, #276]	; (8001b40 <Nucleo_StartUart2+0x1e0>)
 8001a2a:	220c      	movs	r2, #12
 8001a2c:	60da      	str	r2, [r3, #12]
  USART2->CR2 = 0;
 8001a2e:	4b44      	ldr	r3, [pc, #272]	; (8001b40 <Nucleo_StartUart2+0x1e0>)
 8001a30:	2200      	movs	r2, #0
 8001a32:	611a      	str	r2, [r3, #16]
  USART2->CR3 = 0;
 8001a34:	4b42      	ldr	r3, [pc, #264]	; (8001b40 <Nucleo_StartUart2+0x1e0>)
 8001a36:	2200      	movs	r2, #0
 8001a38:	615a      	str	r2, [r3, #20]

  {  //---------------------------- USART BRR Configuration -----------------------
    uint32_t tmpreg = 0x00, apbclock = 0x00;
 8001a3a:	2300      	movs	r3, #0
 8001a3c:	617b      	str	r3, [r7, #20]
 8001a3e:	2300      	movs	r3, #0
 8001a40:	613b      	str	r3, [r7, #16]
    uint32_t integerdivider = 0x00;
 8001a42:	2300      	movs	r3, #0
 8001a44:	60fb      	str	r3, [r7, #12]
    uint32_t fractionaldivider = 0x00;
 8001a46:	2300      	movs	r3, #0
 8001a48:	60bb      	str	r3, [r7, #8]

    apbclock = RCC->CFGR & RCC_CFGR_PPRE1;   // zachovej bity 12:10, zbytek zahodit
 8001a4a:	4b3b      	ldr	r3, [pc, #236]	; (8001b38 <Nucleo_StartUart2+0x1d8>)
 8001a4c:	689b      	ldr	r3, [r3, #8]
 8001a4e:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8001a52:	613b      	str	r3, [r7, #16]
    apbclock >>= 10;
 8001a54:	693b      	ldr	r3, [r7, #16]
 8001a56:	0a9b      	lsrs	r3, r3, #10
 8001a58:	613b      	str	r3, [r7, #16]
100: AHB clock divided by 2
101: AHB clock divided by 4
110: AHB clock divided by 8
111: AHB clock divided by 16
*/
    if ((apbclock & 0x04) == 0)
 8001a5a:	693b      	ldr	r3, [r7, #16]
 8001a5c:	f003 0304 	and.w	r3, r3, #4
 8001a60:	2b00      	cmp	r3, #0
 8001a62:	d103      	bne.n	8001a6c <Nucleo_StartUart2+0x10c>
      apbclock = SystemCoreClock;
 8001a64:	4b37      	ldr	r3, [pc, #220]	; (8001b44 <Nucleo_StartUart2+0x1e4>)
 8001a66:	681b      	ldr	r3, [r3, #0]
 8001a68:	613b      	str	r3, [r7, #16]
 8001a6a:	e008      	b.n	8001a7e <Nucleo_StartUart2+0x11e>
    else
      apbclock = SystemCoreClock >> ((apbclock & 0x03) + 1);   // spodni 2 bity
 8001a6c:	4b35      	ldr	r3, [pc, #212]	; (8001b44 <Nucleo_StartUart2+0x1e4>)
 8001a6e:	681a      	ldr	r2, [r3, #0]
 8001a70:	693b      	ldr	r3, [r7, #16]
 8001a72:	f003 0303 	and.w	r3, r3, #3
 8001a76:	3301      	adds	r3, #1
 8001a78:	fa22 f303 	lsr.w	r3, r2, r3
 8001a7c:	613b      	str	r3, [r7, #16]

    if ((USART2->CR1 & USART_CR1_OVER8) != 0)  // Determine the integer part
 8001a7e:	4b30      	ldr	r3, [pc, #192]	; (8001b40 <Nucleo_StartUart2+0x1e0>)
 8001a80:	68db      	ldr	r3, [r3, #12]
 8001a82:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8001a86:	2b00      	cmp	r3, #0
 8001a88:	d00b      	beq.n	8001aa2 <Nucleo_StartUart2+0x142>
    {
      /* Integer part computing in case Oversampling mode is 8 Samples */
      integerdivider = ((25 * apbclock) / (2 * baudrate));
 8001a8a:	693a      	ldr	r2, [r7, #16]
 8001a8c:	4613      	mov	r3, r2
 8001a8e:	009b      	lsls	r3, r3, #2
 8001a90:	4413      	add	r3, r2
 8001a92:	009a      	lsls	r2, r3, #2
 8001a94:	441a      	add	r2, r3
 8001a96:	687b      	ldr	r3, [r7, #4]
 8001a98:	005b      	lsls	r3, r3, #1
 8001a9a:	fbb2 f3f3 	udiv	r3, r2, r3
 8001a9e:	60fb      	str	r3, [r7, #12]
 8001aa0:	e00a      	b.n	8001ab8 <Nucleo_StartUart2+0x158>
    }
    else /* if ((USARTx->CR1 & USART_CR1_OVER8) == 0) */
    {
      /* Integer part computing in case Oversampling mode is 16 Samples */
      integerdivider = ((25 * apbclock) / (4 * baudrate));
 8001aa2:	693a      	ldr	r2, [r7, #16]
 8001aa4:	4613      	mov	r3, r2
 8001aa6:	009b      	lsls	r3, r3, #2
 8001aa8:	4413      	add	r3, r2
 8001aaa:	009a      	lsls	r2, r3, #2
 8001aac:	441a      	add	r2, r3
 8001aae:	687b      	ldr	r3, [r7, #4]
 8001ab0:	009b      	lsls	r3, r3, #2
 8001ab2:	fbb2 f3f3 	udiv	r3, r2, r3
 8001ab6:	60fb      	str	r3, [r7, #12]
    }
    tmpreg = (integerdivider / 100) << 4;
 8001ab8:	68fb      	ldr	r3, [r7, #12]
 8001aba:	4a23      	ldr	r2, [pc, #140]	; (8001b48 <Nucleo_StartUart2+0x1e8>)
 8001abc:	fba2 2303 	umull	r2, r3, r2, r3
 8001ac0:	095b      	lsrs	r3, r3, #5
 8001ac2:	011b      	lsls	r3, r3, #4
 8001ac4:	617b      	str	r3, [r7, #20]

    /* Determine the fractional part */
    fractionaldivider = integerdivider - (100 * (tmpreg >> 4));
 8001ac6:	697b      	ldr	r3, [r7, #20]
 8001ac8:	091b      	lsrs	r3, r3, #4
 8001aca:	2264      	movs	r2, #100	; 0x64
 8001acc:	fb02 f303 	mul.w	r3, r2, r3
 8001ad0:	68fa      	ldr	r2, [r7, #12]
 8001ad2:	1ad3      	subs	r3, r2, r3
 8001ad4:	60bb      	str	r3, [r7, #8]

    /* Implement the fractional part in the register */
    if ((USART2->CR1 & USART_CR1_OVER8) != 0)
 8001ad6:	4b1a      	ldr	r3, [pc, #104]	; (8001b40 <Nucleo_StartUart2+0x1e0>)
 8001ad8:	68db      	ldr	r3, [r3, #12]
 8001ada:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8001ade:	2b00      	cmp	r3, #0
 8001ae0:	d00c      	beq.n	8001afc <Nucleo_StartUart2+0x19c>
    {
      tmpreg |= ((((fractionaldivider * 8) + 50) / 100)) & ((uint8_t)0x07);
 8001ae2:	68bb      	ldr	r3, [r7, #8]
 8001ae4:	00db      	lsls	r3, r3, #3
 8001ae6:	3332      	adds	r3, #50	; 0x32
 8001ae8:	4a17      	ldr	r2, [pc, #92]	; (8001b48 <Nucleo_StartUart2+0x1e8>)
 8001aea:	fba2 2303 	umull	r2, r3, r2, r3
 8001aee:	095b      	lsrs	r3, r3, #5
 8001af0:	f003 0307 	and.w	r3, r3, #7
 8001af4:	697a      	ldr	r2, [r7, #20]
 8001af6:	4313      	orrs	r3, r2
 8001af8:	617b      	str	r3, [r7, #20]
 8001afa:	e00b      	b.n	8001b14 <Nucleo_StartUart2+0x1b4>
    }
    else /* if ((USARTx->CR1 & USART_CR1_OVER8) == 0) */
    {
      tmpreg |= ((((fractionaldivider * 16) + 50) / 100)) & ((uint8_t)0x0F);
 8001afc:	68bb      	ldr	r3, [r7, #8]
 8001afe:	011b      	lsls	r3, r3, #4
 8001b00:	3332      	adds	r3, #50	; 0x32
 8001b02:	4a11      	ldr	r2, [pc, #68]	; (8001b48 <Nucleo_StartUart2+0x1e8>)
 8001b04:	fba2 2303 	umull	r2, r3, r2, r3
 8001b08:	095b      	lsrs	r3, r3, #5
 8001b0a:	f003 030f 	and.w	r3, r3, #15
 8001b0e:	697a      	ldr	r2, [r7, #20]
 8001b10:	4313      	orrs	r3, r2
 8001b12:	617b      	str	r3, [r7, #20]
    }

    /* Write to USART BRR register */
    USART2->BRR = (uint16_t)tmpreg;
 8001b14:	4b0a      	ldr	r3, [pc, #40]	; (8001b40 <Nucleo_StartUart2+0x1e0>)
 8001b16:	697a      	ldr	r2, [r7, #20]
 8001b18:	b292      	uxth	r2, r2
 8001b1a:	609a      	str	r2, [r3, #8]
  }

  USART2->CR1 |= USART_CR1_UE;
 8001b1c:	4a08      	ldr	r2, [pc, #32]	; (8001b40 <Nucleo_StartUart2+0x1e0>)
 8001b1e:	4b08      	ldr	r3, [pc, #32]	; (8001b40 <Nucleo_StartUart2+0x1e0>)
 8001b20:	68db      	ldr	r3, [r3, #12]
 8001b22:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8001b26:	60d3      	str	r3, [r2, #12]
  // pozor, bez tohoto nefunguje putchar a musel by byt fputc(.., stdout)
  setvbuf(stdout,NULL,_IONBF,0);
  setvbuf(stdin,NULL,_IONBF,0);
#endif

  return true;
 8001b28:	2301      	movs	r3, #1
}
 8001b2a:	4618      	mov	r0, r3
 8001b2c:	371c      	adds	r7, #28
 8001b2e:	46bd      	mov	sp, r7
 8001b30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b34:	4770      	bx	lr
 8001b36:	bf00      	nop
 8001b38:	40023800 	.word	0x40023800
 8001b3c:	40020000 	.word	0x40020000
 8001b40:	40004400 	.word	0x40004400
 8001b44:	2000000c 	.word	0x2000000c
 8001b48:	51eb851f 	.word	0x51eb851f

08001b4c <usart2_putc>:

static volatile bool _addCRtoLF = true;

int usart2_putc(int ch)
{
 8001b4c:	b480      	push	{r7}
 8001b4e:	b083      	sub	sp, #12
 8001b50:	af00      	add	r7, sp, #0
 8001b52:	6078      	str	r0, [r7, #4]
  while(!(USART2->SR & USART_SR_TXE))       // Wait for transmit buffer empty
 8001b54:	bf00      	nop
 8001b56:	4b11      	ldr	r3, [pc, #68]	; (8001b9c <usart2_putc+0x50>)
 8001b58:	681b      	ldr	r3, [r3, #0]
 8001b5a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001b5e:	2b00      	cmp	r3, #0
 8001b60:	d0f9      	beq.n	8001b56 <usart2_putc+0xa>
    ;

  if (_addCRtoLF && (ch == '\n'))
 8001b62:	4b0f      	ldr	r3, [pc, #60]	; (8001ba0 <usart2_putc+0x54>)
 8001b64:	781b      	ldrb	r3, [r3, #0]
 8001b66:	b2db      	uxtb	r3, r3
 8001b68:	2b00      	cmp	r3, #0
 8001b6a:	d00e      	beq.n	8001b8a <usart2_putc+0x3e>
 8001b6c:	687b      	ldr	r3, [r7, #4]
 8001b6e:	2b0a      	cmp	r3, #10
 8001b70:	d10b      	bne.n	8001b8a <usart2_putc+0x3e>
  {
    USART2->DR = ch;
 8001b72:	4a0a      	ldr	r2, [pc, #40]	; (8001b9c <usart2_putc+0x50>)
 8001b74:	687b      	ldr	r3, [r7, #4]
 8001b76:	6053      	str	r3, [r2, #4]

    while(!(USART2->SR & USART_SR_TXE))       // Wait for transmit buffer empty
 8001b78:	bf00      	nop
 8001b7a:	4b08      	ldr	r3, [pc, #32]	; (8001b9c <usart2_putc+0x50>)
 8001b7c:	681b      	ldr	r3, [r3, #0]
 8001b7e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001b82:	2b00      	cmp	r3, #0
 8001b84:	d0f9      	beq.n	8001b7a <usart2_putc+0x2e>
      ;

    ch = '\r';
 8001b86:	230d      	movs	r3, #13
 8001b88:	607b      	str	r3, [r7, #4]
  }

  return USART2->DR = ch;
 8001b8a:	4a04      	ldr	r2, [pc, #16]	; (8001b9c <usart2_putc+0x50>)
 8001b8c:	687b      	ldr	r3, [r7, #4]
 8001b8e:	6053      	str	r3, [r2, #4]
}
 8001b90:	4618      	mov	r0, r3
 8001b92:	370c      	adds	r7, #12
 8001b94:	46bd      	mov	sp, r7
 8001b96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b9a:	4770      	bx	lr
 8001b9c:	40004400 	.word	0x40004400
 8001ba0:	20000000 	.word	0x20000000

08001ba4 <usart2_getc>:

int usart2_getc(void)
{
 8001ba4:	b480      	push	{r7}
 8001ba6:	af00      	add	r7, sp, #0
  while(!(USART2->SR & USART_SR_RXNE))  // Wait for receive buffer not empty
 8001ba8:	bf00      	nop
 8001baa:	4b06      	ldr	r3, [pc, #24]	; (8001bc4 <usart2_getc+0x20>)
 8001bac:	681b      	ldr	r3, [r3, #0]
 8001bae:	f003 0320 	and.w	r3, r3, #32
 8001bb2:	2b00      	cmp	r3, #0
 8001bb4:	d0f9      	beq.n	8001baa <usart2_getc+0x6>
    ;
  return USART2->DR;                    // Return received character
 8001bb6:	4b03      	ldr	r3, [pc, #12]	; (8001bc4 <usart2_getc+0x20>)
 8001bb8:	685b      	ldr	r3, [r3, #4]
}
 8001bba:	4618      	mov	r0, r3
 8001bbc:	46bd      	mov	sp, r7
 8001bbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bc2:	4770      	bx	lr
 8001bc4:	40004400 	.word	0x40004400

08001bc8 <isCharRecv>:

unsigned char isCharRecv(void)
{
 8001bc8:	b480      	push	{r7}
 8001bca:	af00      	add	r7, sp, #0
  return (USART2->SR & USART_SR_RXNE);  // log 1 = something in recv buffer
 8001bcc:	4b05      	ldr	r3, [pc, #20]	; (8001be4 <isCharRecv+0x1c>)
 8001bce:	681b      	ldr	r3, [r3, #0]
 8001bd0:	b2db      	uxtb	r3, r3
 8001bd2:	f003 0320 	and.w	r3, r3, #32
 8001bd6:	b2db      	uxtb	r3, r3
}
 8001bd8:	4618      	mov	r0, r3
 8001bda:	46bd      	mov	sp, r7
 8001bdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001be0:	4770      	bx	lr
 8001be2:	bf00      	nop
 8001be4:	40004400 	.word	0x40004400

08001be8 <NVIC_SetPriority>:
  \note    The priority cannot be set for every core interrupt.
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
 */
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8001be8:	b480      	push	{r7}
 8001bea:	b083      	sub	sp, #12
 8001bec:	af00      	add	r7, sp, #0
 8001bee:	4603      	mov	r3, r0
 8001bf0:	6039      	str	r1, [r7, #0]
 8001bf2:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) < 0)
 8001bf4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001bf8:	2b00      	cmp	r3, #0
 8001bfa:	da0b      	bge.n	8001c14 <NVIC_SetPriority+0x2c>
  {
    SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001bfc:	490d      	ldr	r1, [pc, #52]	; (8001c34 <NVIC_SetPriority+0x4c>)
 8001bfe:	79fb      	ldrb	r3, [r7, #7]
 8001c00:	f003 030f 	and.w	r3, r3, #15
 8001c04:	3b04      	subs	r3, #4
 8001c06:	683a      	ldr	r2, [r7, #0]
 8001c08:	b2d2      	uxtb	r2, r2
 8001c0a:	0112      	lsls	r2, r2, #4
 8001c0c:	b2d2      	uxtb	r2, r2
 8001c0e:	440b      	add	r3, r1
 8001c10:	761a      	strb	r2, [r3, #24]
  }
  else
  {
    NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8001c12:	e009      	b.n	8001c28 <NVIC_SetPriority+0x40>
    NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001c14:	4908      	ldr	r1, [pc, #32]	; (8001c38 <NVIC_SetPriority+0x50>)
 8001c16:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001c1a:	683a      	ldr	r2, [r7, #0]
 8001c1c:	b2d2      	uxtb	r2, r2
 8001c1e:	0112      	lsls	r2, r2, #4
 8001c20:	b2d2      	uxtb	r2, r2
 8001c22:	440b      	add	r3, r1
 8001c24:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
}
 8001c28:	bf00      	nop
 8001c2a:	370c      	adds	r7, #12
 8001c2c:	46bd      	mov	sp, r7
 8001c2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c32:	4770      	bx	lr
 8001c34:	e000ed00 	.word	0xe000ed00
 8001c38:	e000e100 	.word	0xe000e100

08001c3c <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8001c3c:	b580      	push	{r7, lr}
 8001c3e:	b082      	sub	sp, #8
 8001c40:	af00      	add	r7, sp, #0
 8001c42:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8001c44:	687b      	ldr	r3, [r7, #4]
 8001c46:	3b01      	subs	r3, #1
 8001c48:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001c4c:	d301      	bcc.n	8001c52 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 8001c4e:	2301      	movs	r3, #1
 8001c50:	e00f      	b.n	8001c72 <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8001c52:	4a0a      	ldr	r2, [pc, #40]	; (8001c7c <SysTick_Config+0x40>)
 8001c54:	687b      	ldr	r3, [r7, #4]
 8001c56:	3b01      	subs	r3, #1
 8001c58:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8001c5a:	210f      	movs	r1, #15
 8001c5c:	f04f 30ff 	mov.w	r0, #4294967295
 8001c60:	f7ff ffc2 	bl	8001be8 <NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8001c64:	4b05      	ldr	r3, [pc, #20]	; (8001c7c <SysTick_Config+0x40>)
 8001c66:	2200      	movs	r2, #0
 8001c68:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8001c6a:	4b04      	ldr	r3, [pc, #16]	; (8001c7c <SysTick_Config+0x40>)
 8001c6c:	2207      	movs	r2, #7
 8001c6e:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8001c70:	2300      	movs	r3, #0
}
 8001c72:	4618      	mov	r0, r3
 8001c74:	3708      	adds	r7, #8
 8001c76:	46bd      	mov	sp, r7
 8001c78:	bd80      	pop	{r7, pc}
 8001c7a:	bf00      	nop
 8001c7c:	e000e010 	.word	0xe000e010

08001c80 <SysTick_Handler>:

volatile uint32_t _ticks = 0;
volatile uint32_t _interval = 1;

void SysTick_Handler(void)
{
 8001c80:	b480      	push	{r7}
 8001c82:	af00      	add	r7, sp, #0
  _ticks += _interval;
 8001c84:	4b05      	ldr	r3, [pc, #20]	; (8001c9c <SysTick_Handler+0x1c>)
 8001c86:	681a      	ldr	r2, [r3, #0]
 8001c88:	4b05      	ldr	r3, [pc, #20]	; (8001ca0 <SysTick_Handler+0x20>)
 8001c8a:	681b      	ldr	r3, [r3, #0]
 8001c8c:	4413      	add	r3, r2
 8001c8e:	4a04      	ldr	r2, [pc, #16]	; (8001ca0 <SysTick_Handler+0x20>)
 8001c90:	6013      	str	r3, [r2, #0]
}
 8001c92:	bf00      	nop
 8001c94:	46bd      	mov	sp, r7
 8001c96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c9a:	4770      	bx	lr
 8001c9c:	20000004 	.word	0x20000004
 8001ca0:	2000269c 	.word	0x2000269c

08001ca4 <WaitMs>:

void WaitMs(uint32_t ms)
{
 8001ca4:	b480      	push	{r7}
 8001ca6:	b083      	sub	sp, #12
 8001ca8:	af00      	add	r7, sp, #0
 8001caa:	6078      	str	r0, [r7, #4]
  ms += _ticks;
 8001cac:	4b08      	ldr	r3, [pc, #32]	; (8001cd0 <WaitMs+0x2c>)
 8001cae:	681b      	ldr	r3, [r3, #0]
 8001cb0:	687a      	ldr	r2, [r7, #4]
 8001cb2:	4413      	add	r3, r2
 8001cb4:	607b      	str	r3, [r7, #4]
  while(_ticks < ms)
 8001cb6:	bf00      	nop
 8001cb8:	4b05      	ldr	r3, [pc, #20]	; (8001cd0 <WaitMs+0x2c>)
 8001cba:	681a      	ldr	r2, [r3, #0]
 8001cbc:	687b      	ldr	r3, [r7, #4]
 8001cbe:	429a      	cmp	r2, r3
 8001cc0:	d3fa      	bcc.n	8001cb8 <WaitMs+0x14>
    ;
}
 8001cc2:	bf00      	nop
 8001cc4:	370c      	adds	r7, #12
 8001cc6:	46bd      	mov	sp, r7
 8001cc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ccc:	4770      	bx	lr
 8001cce:	bf00      	nop
 8001cd0:	2000269c 	.word	0x2000269c

08001cd4 <InitSystickDefault>:

void InitSystickDefault(void)
{
 8001cd4:	b580      	push	{r7, lr}
 8001cd6:	af00      	add	r7, sp, #0
  InitSystick(1);
 8001cd8:	2001      	movs	r0, #1
 8001cda:	f000 f803 	bl	8001ce4 <InitSystick>
}
 8001cde:	bf00      	nop
 8001ce0:	bd80      	pop	{r7, pc}
	...

08001ce4 <InitSystick>:

void InitSystick(uint32_t intervalMs)
{
 8001ce4:	b580      	push	{r7, lr}
 8001ce6:	b082      	sub	sp, #8
 8001ce8:	af00      	add	r7, sp, #0
 8001cea:	6078      	str	r0, [r7, #4]
  SystemCoreClockUpdate();               // for safe
 8001cec:	f000 fe4a 	bl	8002984 <SystemCoreClockUpdate>
  
  _interval = intervalMs;                // save for waiting calculation 
 8001cf0:	4a09      	ldr	r2, [pc, #36]	; (8001d18 <InitSystick+0x34>)
 8001cf2:	687b      	ldr	r3, [r7, #4]
 8001cf4:	6013      	str	r3, [r2, #0]
  SysTick_Config(SystemCoreClock / 1000 / _interval);  // Generate interrupt every X ms
 8001cf6:	4b09      	ldr	r3, [pc, #36]	; (8001d1c <InitSystick+0x38>)
 8001cf8:	681b      	ldr	r3, [r3, #0]
 8001cfa:	4a09      	ldr	r2, [pc, #36]	; (8001d20 <InitSystick+0x3c>)
 8001cfc:	fba2 2303 	umull	r2, r3, r2, r3
 8001d00:	099a      	lsrs	r2, r3, #6
 8001d02:	4b05      	ldr	r3, [pc, #20]	; (8001d18 <InitSystick+0x34>)
 8001d04:	681b      	ldr	r3, [r3, #0]
 8001d06:	fbb2 f3f3 	udiv	r3, r2, r3
 8001d0a:	4618      	mov	r0, r3
 8001d0c:	f7ff ff96 	bl	8001c3c <SysTick_Config>
}
 8001d10:	bf00      	nop
 8001d12:	3708      	adds	r7, #8
 8001d14:	46bd      	mov	sp, r7
 8001d16:	bd80      	pop	{r7, pc}
 8001d18:	20000004 	.word	0x20000004
 8001d1c:	2000000c 	.word	0x2000000c
 8001d20:	10624dd3 	.word	0x10624dd3

08001d24 <DISP_SetHiLevelDisp>:

static int pixelsWidth, pixelsHeight;
static int textX = 0, textY = 0;

void DISP_SetHiLevelDisp(int pixWidth, int pixHeight, void *ptrDrawPixel)
{
 8001d24:	b480      	push	{r7}
 8001d26:	b085      	sub	sp, #20
 8001d28:	af00      	add	r7, sp, #0
 8001d2a:	60f8      	str	r0, [r7, #12]
 8001d2c:	60b9      	str	r1, [r7, #8]
 8001d2e:	607a      	str	r2, [r7, #4]
  my_DrawPixel = ptrDrawPixel;
 8001d30:	687b      	ldr	r3, [r7, #4]
 8001d32:	4a07      	ldr	r2, [pc, #28]	; (8001d50 <DISP_SetHiLevelDisp+0x2c>)
 8001d34:	6013      	str	r3, [r2, #0]

  pixelsWidth = pixWidth;
 8001d36:	4a07      	ldr	r2, [pc, #28]	; (8001d54 <DISP_SetHiLevelDisp+0x30>)
 8001d38:	68fb      	ldr	r3, [r7, #12]
 8001d3a:	6013      	str	r3, [r2, #0]
  pixelsHeight = pixHeight;
 8001d3c:	4a06      	ldr	r2, [pc, #24]	; (8001d58 <DISP_SetHiLevelDisp+0x34>)
 8001d3e:	68bb      	ldr	r3, [r7, #8]
 8001d40:	6013      	str	r3, [r2, #0]
}
 8001d42:	bf00      	nop
 8001d44:	3714      	adds	r7, #20
 8001d46:	46bd      	mov	sp, r7
 8001d48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d4c:	4770      	bx	lr
 8001d4e:	bf00      	nop
 8001d50:	200026a0 	.word	0x200026a0
 8001d54:	200026a4 	.word	0x200026a4
 8001d58:	200026a8 	.word	0x200026a8

08001d5c <DISP_SetFont>:
static FONT_Header_t *ptrFontHeader = NULL;
static bool bbPixSpace = false;
static bool bbLineSpace = false;

bool DISP_SetFont(eFontsAvailable fnt)
{
 8001d5c:	b480      	push	{r7}
 8001d5e:	b083      	sub	sp, #12
 8001d60:	af00      	add	r7, sp, #0
 8001d62:	4603      	mov	r3, r0
 8001d64:	71fb      	strb	r3, [r7, #7]
  bbPixSpace = false;
 8001d66:	4b1c      	ldr	r3, [pc, #112]	; (8001dd8 <DISP_SetFont+0x7c>)
 8001d68:	2200      	movs	r2, #0
 8001d6a:	701a      	strb	r2, [r3, #0]
  bbLineSpace = false;
 8001d6c:	4b1b      	ldr	r3, [pc, #108]	; (8001ddc <DISP_SetFont+0x80>)
 8001d6e:	2200      	movs	r2, #0
 8001d70:	701a      	strb	r2, [r3, #0]
  switch(fnt)
 8001d72:	79fb      	ldrb	r3, [r7, #7]
 8001d74:	2b01      	cmp	r3, #1
 8001d76:	d00a      	beq.n	8001d8e <DISP_SetFont+0x32>
 8001d78:	2b01      	cmp	r3, #1
 8001d7a:	db01      	blt.n	8001d80 <DISP_SetFont+0x24>
 8001d7c:	2b04      	cmp	r3, #4
 8001d7e:	dd0d      	ble.n	8001d9c <DISP_SetFont+0x40>
  {
    case font_atari_8x8:
    default:
      ptrFontHeader = (FONT_Header_t *)font_atari_8x8_data;
 8001d80:	4b17      	ldr	r3, [pc, #92]	; (8001de0 <DISP_SetFont+0x84>)
 8001d82:	4a18      	ldr	r2, [pc, #96]	; (8001de4 <DISP_SetFont+0x88>)
 8001d84:	601a      	str	r2, [r3, #0]

      //TODO select start of char defines, fefaultne ZA hlavickou
      bpFontBase = font_atari_8x8_data + sizeof(FONT_Header_t);
 8001d86:	4a18      	ldr	r2, [pc, #96]	; (8001de8 <DISP_SetFont+0x8c>)
 8001d88:	4b18      	ldr	r3, [pc, #96]	; (8001dec <DISP_SetFont+0x90>)
 8001d8a:	601a      	str	r2, [r3, #0]
      break;
 8001d8c:	e01c      	b.n	8001dc8 <DISP_SetFont+0x6c>
    case font_thin_8x8:
      ptrFontHeader = (FONT_Header_t *)font_thin_8x8_data;
 8001d8e:	4b14      	ldr	r3, [pc, #80]	; (8001de0 <DISP_SetFont+0x84>)
 8001d90:	4a17      	ldr	r2, [pc, #92]	; (8001df0 <DISP_SetFont+0x94>)
 8001d92:	601a      	str	r2, [r3, #0]
      bpFontBase = font_thin_8x8_data + sizeof(FONT_Header_t);
 8001d94:	4a17      	ldr	r2, [pc, #92]	; (8001df4 <DISP_SetFont+0x98>)
 8001d96:	4b15      	ldr	r3, [pc, #84]	; (8001dec <DISP_SetFont+0x90>)
 8001d98:	601a      	str	r2, [r3, #0]
      break;
 8001d9a:	e015      	b.n	8001dc8 <DISP_SetFont+0x6c>
    case font_system_5x7:
    case font_system_5x7p:
    case font_system_5x7pr:
      ptrFontHeader = (FONT_Header_t *)font_system_5x7_data;
 8001d9c:	4b10      	ldr	r3, [pc, #64]	; (8001de0 <DISP_SetFont+0x84>)
 8001d9e:	4a16      	ldr	r2, [pc, #88]	; (8001df8 <DISP_SetFont+0x9c>)
 8001da0:	601a      	str	r2, [r3, #0]
      bpFontBase = font_system_5x7_data + sizeof(FONT_Header_t);
 8001da2:	4a16      	ldr	r2, [pc, #88]	; (8001dfc <DISP_SetFont+0xa0>)
 8001da4:	4b11      	ldr	r3, [pc, #68]	; (8001dec <DISP_SetFont+0x90>)
 8001da6:	601a      	str	r2, [r3, #0]

      if ((fnt == font_system_5x7p) || (fnt == font_system_5x7pr))
 8001da8:	79fb      	ldrb	r3, [r7, #7]
 8001daa:	2b03      	cmp	r3, #3
 8001dac:	d002      	beq.n	8001db4 <DISP_SetFont+0x58>
 8001dae:	79fb      	ldrb	r3, [r7, #7]
 8001db0:	2b04      	cmp	r3, #4
 8001db2:	d102      	bne.n	8001dba <DISP_SetFont+0x5e>
        bbPixSpace = true;
 8001db4:	4b08      	ldr	r3, [pc, #32]	; (8001dd8 <DISP_SetFont+0x7c>)
 8001db6:	2201      	movs	r2, #1
 8001db8:	701a      	strb	r2, [r3, #0]

      if (fnt == font_system_5x7pr)
 8001dba:	79fb      	ldrb	r3, [r7, #7]
 8001dbc:	2b04      	cmp	r3, #4
 8001dbe:	d102      	bne.n	8001dc6 <DISP_SetFont+0x6a>
        bbLineSpace = true;
 8001dc0:	4b06      	ldr	r3, [pc, #24]	; (8001ddc <DISP_SetFont+0x80>)
 8001dc2:	2201      	movs	r2, #1
 8001dc4:	701a      	strb	r2, [r3, #0]

      break;
 8001dc6:	bf00      	nop
  }

  return true;
 8001dc8:	2301      	movs	r3, #1
}
 8001dca:	4618      	mov	r0, r3
 8001dcc:	370c      	adds	r7, #12
 8001dce:	46bd      	mov	sp, r7
 8001dd0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001dd4:	4770      	bx	lr
 8001dd6:	bf00      	nop
 8001dd8:	200026bc 	.word	0x200026bc
 8001ddc:	200026bd 	.word	0x200026bd
 8001de0:	200026b8 	.word	0x200026b8
 8001de4:	08007b20 	.word	0x08007b20
 8001de8:	08007b26 	.word	0x08007b26
 8001dec:	200026b4 	.word	0x200026b4
 8001df0:	08008114 	.word	0x08008114
 8001df4:	0800811a 	.word	0x0800811a
 8001df8:	08007f28 	.word	0x08007f28
 8001dfc:	08007f2e 	.word	0x08007f2e

08001e00 <DISP_GetCharPerRow>:

__inline int DISP_GetCharPerRow(void)
{
 8001e00:	b480      	push	{r7}
 8001e02:	af00      	add	r7, sp, #0
  return pixelsWidth / (ptrFontHeader->width + (bbPixSpace ? 1 : 0));   // add 1 pixel space
 8001e04:	4b07      	ldr	r3, [pc, #28]	; (8001e24 <DISP_GetCharPerRow+0x24>)
 8001e06:	681a      	ldr	r2, [r3, #0]
 8001e08:	4b07      	ldr	r3, [pc, #28]	; (8001e28 <DISP_GetCharPerRow+0x28>)
 8001e0a:	681b      	ldr	r3, [r3, #0]
 8001e0c:	789b      	ldrb	r3, [r3, #2]
 8001e0e:	4619      	mov	r1, r3
 8001e10:	4b06      	ldr	r3, [pc, #24]	; (8001e2c <DISP_GetCharPerRow+0x2c>)
 8001e12:	781b      	ldrb	r3, [r3, #0]
 8001e14:	440b      	add	r3, r1
 8001e16:	fb92 f3f3 	sdiv	r3, r2, r3
}
 8001e1a:	4618      	mov	r0, r3
 8001e1c:	46bd      	mov	sp, r7
 8001e1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e22:	4770      	bx	lr
 8001e24:	200026a4 	.word	0x200026a4
 8001e28:	200026b8 	.word	0x200026b8
 8001e2c:	200026bc 	.word	0x200026bc

08001e30 <DISP_GetRowPerDisp>:

__inline int DISP_GetRowPerDisp(void)
{
 8001e30:	b480      	push	{r7}
 8001e32:	af00      	add	r7, sp, #0
  return pixelsHeight / (ptrFontHeader->height + (bbLineSpace ? 1 : 0));
 8001e34:	4b07      	ldr	r3, [pc, #28]	; (8001e54 <DISP_GetRowPerDisp+0x24>)
 8001e36:	681a      	ldr	r2, [r3, #0]
 8001e38:	4b07      	ldr	r3, [pc, #28]	; (8001e58 <DISP_GetRowPerDisp+0x28>)
 8001e3a:	681b      	ldr	r3, [r3, #0]
 8001e3c:	78db      	ldrb	r3, [r3, #3]
 8001e3e:	4619      	mov	r1, r3
 8001e40:	4b06      	ldr	r3, [pc, #24]	; (8001e5c <DISP_GetRowPerDisp+0x2c>)
 8001e42:	781b      	ldrb	r3, [r3, #0]
 8001e44:	440b      	add	r3, r1
 8001e46:	fb92 f3f3 	sdiv	r3, r2, r3
}
 8001e4a:	4618      	mov	r0, r3
 8001e4c:	46bd      	mov	sp, r7
 8001e4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e52:	4770      	bx	lr
 8001e54:	200026a8 	.word	0x200026a8
 8001e58:	200026b8 	.word	0x200026b8
 8001e5c:	200026bd 	.word	0x200026bd

08001e60 <DISP_TextForeColor>:

static pixelSize_t _textForeColor = (pixelSize_t)0;    // black
static pixelSize_t _textBackColor = (pixelSize_t)-1;   // white

void DISP_TextForeColor(pixelSize_t u)
{
 8001e60:	b480      	push	{r7}
 8001e62:	b083      	sub	sp, #12
 8001e64:	af00      	add	r7, sp, #0
 8001e66:	4603      	mov	r3, r0
 8001e68:	71fb      	strb	r3, [r7, #7]
  _textForeColor = u;
 8001e6a:	4a04      	ldr	r2, [pc, #16]	; (8001e7c <DISP_TextForeColor+0x1c>)
 8001e6c:	79fb      	ldrb	r3, [r7, #7]
 8001e6e:	7013      	strb	r3, [r2, #0]
}
 8001e70:	bf00      	nop
 8001e72:	370c      	adds	r7, #12
 8001e74:	46bd      	mov	sp, r7
 8001e76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e7a:	4770      	bx	lr
 8001e7c:	200026be 	.word	0x200026be

08001e80 <DISP_TextBackColor>:

void DISP_TextBackColor(pixelSize_t u)
{
 8001e80:	b480      	push	{r7}
 8001e82:	b083      	sub	sp, #12
 8001e84:	af00      	add	r7, sp, #0
 8001e86:	4603      	mov	r3, r0
 8001e88:	71fb      	strb	r3, [r7, #7]
  _textBackColor = u;
 8001e8a:	4a04      	ldr	r2, [pc, #16]	; (8001e9c <DISP_TextBackColor+0x1c>)
 8001e8c:	79fb      	ldrb	r3, [r7, #7]
 8001e8e:	7013      	strb	r3, [r2, #0]
}
 8001e90:	bf00      	nop
 8001e92:	370c      	adds	r7, #12
 8001e94:	46bd      	mov	sp, r7
 8001e96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e9a:	4770      	bx	lr
 8001e9c:	20000008 	.word	0x20000008

08001ea0 <DISP_GotoXY>:

void DISP_GotoXY(int x, int y)
{
 8001ea0:	b480      	push	{r7}
 8001ea2:	b083      	sub	sp, #12
 8001ea4:	af00      	add	r7, sp, #0
 8001ea6:	6078      	str	r0, [r7, #4]
 8001ea8:	6039      	str	r1, [r7, #0]
  textX = x;
 8001eaa:	4a06      	ldr	r2, [pc, #24]	; (8001ec4 <DISP_GotoXY+0x24>)
 8001eac:	687b      	ldr	r3, [r7, #4]
 8001eae:	6013      	str	r3, [r2, #0]
  textY = y;
 8001eb0:	4a05      	ldr	r2, [pc, #20]	; (8001ec8 <DISP_GotoXY+0x28>)
 8001eb2:	683b      	ldr	r3, [r7, #0]
 8001eb4:	6013      	str	r3, [r2, #0]
}
 8001eb6:	bf00      	nop
 8001eb8:	370c      	adds	r7, #12
 8001eba:	46bd      	mov	sp, r7
 8001ebc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ec0:	4770      	bx	lr
 8001ec2:	bf00      	nop
 8001ec4:	200026ac 	.word	0x200026ac
 8001ec8:	200026b0 	.word	0x200026b0

08001ecc <DISP_WriteChar>:

void DISP_WriteChar(char c)
{
 8001ecc:	b580      	push	{r7, lr}
 8001ece:	b082      	sub	sp, #8
 8001ed0:	af00      	add	r7, sp, #0
 8001ed2:	4603      	mov	r3, r0
 8001ed4:	71fb      	strb	r3, [r7, #7]
  DISP_WriteCharXY(textX, textY, c);
 8001ed6:	4b15      	ldr	r3, [pc, #84]	; (8001f2c <DISP_WriteChar+0x60>)
 8001ed8:	6818      	ldr	r0, [r3, #0]
 8001eda:	4b15      	ldr	r3, [pc, #84]	; (8001f30 <DISP_WriteChar+0x64>)
 8001edc:	681b      	ldr	r3, [r3, #0]
 8001ede:	79fa      	ldrb	r2, [r7, #7]
 8001ee0:	4619      	mov	r1, r3
 8001ee2:	f000 f83d 	bl	8001f60 <DISP_WriteCharXY>

  textX++;
 8001ee6:	4b11      	ldr	r3, [pc, #68]	; (8001f2c <DISP_WriteChar+0x60>)
 8001ee8:	681b      	ldr	r3, [r3, #0]
 8001eea:	3301      	adds	r3, #1
 8001eec:	4a0f      	ldr	r2, [pc, #60]	; (8001f2c <DISP_WriteChar+0x60>)
 8001eee:	6013      	str	r3, [r2, #0]
  if (textX >= DISP_GetCharPerRow())
 8001ef0:	f7ff ff86 	bl	8001e00 <DISP_GetCharPerRow>
 8001ef4:	4602      	mov	r2, r0
 8001ef6:	4b0d      	ldr	r3, [pc, #52]	; (8001f2c <DISP_WriteChar+0x60>)
 8001ef8:	681b      	ldr	r3, [r3, #0]
 8001efa:	429a      	cmp	r2, r3
 8001efc:	dc11      	bgt.n	8001f22 <DISP_WriteChar+0x56>
  {
    textX = 0;
 8001efe:	4b0b      	ldr	r3, [pc, #44]	; (8001f2c <DISP_WriteChar+0x60>)
 8001f00:	2200      	movs	r2, #0
 8001f02:	601a      	str	r2, [r3, #0]

    textY++;
 8001f04:	4b0a      	ldr	r3, [pc, #40]	; (8001f30 <DISP_WriteChar+0x64>)
 8001f06:	681b      	ldr	r3, [r3, #0]
 8001f08:	3301      	adds	r3, #1
 8001f0a:	4a09      	ldr	r2, [pc, #36]	; (8001f30 <DISP_WriteChar+0x64>)
 8001f0c:	6013      	str	r3, [r2, #0]
    if (textY >= DISP_GetRowPerDisp())
 8001f0e:	f7ff ff8f 	bl	8001e30 <DISP_GetRowPerDisp>
 8001f12:	4602      	mov	r2, r0
 8001f14:	4b06      	ldr	r3, [pc, #24]	; (8001f30 <DISP_WriteChar+0x64>)
 8001f16:	681b      	ldr	r3, [r3, #0]
 8001f18:	429a      	cmp	r2, r3
 8001f1a:	dc02      	bgt.n	8001f22 <DISP_WriteChar+0x56>
      textY = 0;
 8001f1c:	4b04      	ldr	r3, [pc, #16]	; (8001f30 <DISP_WriteChar+0x64>)
 8001f1e:	2200      	movs	r2, #0
 8001f20:	601a      	str	r2, [r3, #0]
  }
}
 8001f22:	bf00      	nop
 8001f24:	3708      	adds	r7, #8
 8001f26:	46bd      	mov	sp, r7
 8001f28:	bd80      	pop	{r7, pc}
 8001f2a:	bf00      	nop
 8001f2c:	200026ac 	.word	0x200026ac
 8001f30:	200026b0 	.word	0x200026b0

08001f34 <DISP_WriteString>:

void DISP_WriteString(char *cp)
{
 8001f34:	b580      	push	{r7, lr}
 8001f36:	b082      	sub	sp, #8
 8001f38:	af00      	add	r7, sp, #0
 8001f3a:	6078      	str	r0, [r7, #4]
  while(*cp)
 8001f3c:	e007      	b.n	8001f4e <DISP_WriteString+0x1a>
  {
    DISP_WriteChar(*cp);
 8001f3e:	687b      	ldr	r3, [r7, #4]
 8001f40:	781b      	ldrb	r3, [r3, #0]
 8001f42:	4618      	mov	r0, r3
 8001f44:	f7ff ffc2 	bl	8001ecc <DISP_WriteChar>
    cp++;
 8001f48:	687b      	ldr	r3, [r7, #4]
 8001f4a:	3301      	adds	r3, #1
 8001f4c:	607b      	str	r3, [r7, #4]
  while(*cp)
 8001f4e:	687b      	ldr	r3, [r7, #4]
 8001f50:	781b      	ldrb	r3, [r3, #0]
 8001f52:	2b00      	cmp	r3, #0
 8001f54:	d1f3      	bne.n	8001f3e <DISP_WriteString+0xa>
  }
}
 8001f56:	bf00      	nop
 8001f58:	3708      	adds	r7, #8
 8001f5a:	46bd      	mov	sp, r7
 8001f5c:	bd80      	pop	{r7, pc}
	...

08001f60 <DISP_WriteCharXY>:

//! X a Y jsou sloupce a radky v pocitani znaku !!
void DISP_WriteCharXY(int x, int y, char c)
{
 8001f60:	b590      	push	{r4, r7, lr}
 8001f62:	b08d      	sub	sp, #52	; 0x34
 8001f64:	af00      	add	r7, sp, #0
 8001f66:	60f8      	str	r0, [r7, #12]
 8001f68:	60b9      	str	r1, [r7, #8]
 8001f6a:	4613      	mov	r3, r2
 8001f6c:	71fb      	strb	r3, [r7, #7]
  int i, j;
  uint8_t *bp;

  if (ptrFontHeader == NULL)
 8001f6e:	4b6d      	ldr	r3, [pc, #436]	; (8002124 <DISP_WriteCharXY+0x1c4>)
 8001f70:	681b      	ldr	r3, [r3, #0]
 8001f72:	2b00      	cmp	r3, #0
 8001f74:	d102      	bne.n	8001f7c <DISP_WriteCharXY+0x1c>
    DISP_SetFont(-1);     // use default font
 8001f76:	20ff      	movs	r0, #255	; 0xff
 8001f78:	f7ff fef0 	bl	8001d5c <DISP_SetFont>

  if ((c >= (ptrFontHeader->first + ptrFontHeader->count)) || (c < ptrFontHeader->first))
 8001f7c:	79fa      	ldrb	r2, [r7, #7]
 8001f7e:	4b69      	ldr	r3, [pc, #420]	; (8002124 <DISP_WriteCharXY+0x1c4>)
 8001f80:	681b      	ldr	r3, [r3, #0]
 8001f82:	791b      	ldrb	r3, [r3, #4]
 8001f84:	4619      	mov	r1, r3
 8001f86:	4b67      	ldr	r3, [pc, #412]	; (8002124 <DISP_WriteCharXY+0x1c4>)
 8001f88:	681b      	ldr	r3, [r3, #0]
 8001f8a:	795b      	ldrb	r3, [r3, #5]
 8001f8c:	440b      	add	r3, r1
 8001f8e:	429a      	cmp	r2, r3
 8001f90:	f280 80c3 	bge.w	800211a <DISP_WriteCharXY+0x1ba>
 8001f94:	4b63      	ldr	r3, [pc, #396]	; (8002124 <DISP_WriteCharXY+0x1c4>)
 8001f96:	681b      	ldr	r3, [r3, #0]
 8001f98:	791b      	ldrb	r3, [r3, #4]
 8001f9a:	79fa      	ldrb	r2, [r7, #7]
 8001f9c:	429a      	cmp	r2, r3
 8001f9e:	f0c0 80bc 	bcc.w	800211a <DISP_WriteCharXY+0x1ba>
    return;

  c -= ptrFontHeader->first;
 8001fa2:	4b60      	ldr	r3, [pc, #384]	; (8002124 <DISP_WriteCharXY+0x1c4>)
 8001fa4:	681b      	ldr	r3, [r3, #0]
 8001fa6:	791b      	ldrb	r3, [r3, #4]
 8001fa8:	79fa      	ldrb	r2, [r7, #7]
 8001faa:	1ad3      	subs	r3, r2, r3
 8001fac:	71fb      	strb	r3, [r7, #7]
  bp = bpFontBase + (c * ptrFontHeader->width);
 8001fae:	4b5e      	ldr	r3, [pc, #376]	; (8002128 <DISP_WriteCharXY+0x1c8>)
 8001fb0:	681b      	ldr	r3, [r3, #0]
 8001fb2:	79fa      	ldrb	r2, [r7, #7]
 8001fb4:	495b      	ldr	r1, [pc, #364]	; (8002124 <DISP_WriteCharXY+0x1c4>)
 8001fb6:	6809      	ldr	r1, [r1, #0]
 8001fb8:	7889      	ldrb	r1, [r1, #2]
 8001fba:	fb01 f202 	mul.w	r2, r1, r2
 8001fbe:	4413      	add	r3, r2
 8001fc0:	623b      	str	r3, [r7, #32]

  for (i = 0; i < ptrFontHeader->width; i++)
 8001fc2:	2300      	movs	r3, #0
 8001fc4:	62fb      	str	r3, [r7, #44]	; 0x2c
 8001fc6:	e05a      	b.n	800207e <DISP_WriteCharXY+0x11e>
  {
    uint8_t b = bp[i];
 8001fc8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001fca:	6a3a      	ldr	r2, [r7, #32]
 8001fcc:	4413      	add	r3, r2
 8001fce:	781b      	ldrb	r3, [r3, #0]
 8001fd0:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27

    if (ptrFontHeader->height <= 8)
 8001fd4:	4b53      	ldr	r3, [pc, #332]	; (8002124 <DISP_WriteCharXY+0x1c4>)
 8001fd6:	681b      	ldr	r3, [r3, #0]
 8001fd8:	78db      	ldrb	r3, [r3, #3]
 8001fda:	2b08      	cmp	r3, #8
 8001fdc:	d84c      	bhi.n	8002078 <DISP_WriteCharXY+0x118>
    {
      int offsetX = x * (ptrFontHeader->width + (bbPixSpace ? 1 : 0));
 8001fde:	4b51      	ldr	r3, [pc, #324]	; (8002124 <DISP_WriteCharXY+0x1c4>)
 8001fe0:	681b      	ldr	r3, [r3, #0]
 8001fe2:	789b      	ldrb	r3, [r3, #2]
 8001fe4:	461a      	mov	r2, r3
 8001fe6:	4b51      	ldr	r3, [pc, #324]	; (800212c <DISP_WriteCharXY+0x1cc>)
 8001fe8:	781b      	ldrb	r3, [r3, #0]
 8001fea:	4413      	add	r3, r2
 8001fec:	68fa      	ldr	r2, [r7, #12]
 8001fee:	fb02 f303 	mul.w	r3, r2, r3
 8001ff2:	61fb      	str	r3, [r7, #28]
      int offsetY = y * (ptrFontHeader->height + (bbLineSpace ? 1 : 0));
 8001ff4:	4b4b      	ldr	r3, [pc, #300]	; (8002124 <DISP_WriteCharXY+0x1c4>)
 8001ff6:	681b      	ldr	r3, [r3, #0]
 8001ff8:	78db      	ldrb	r3, [r3, #3]
 8001ffa:	461a      	mov	r2, r3
 8001ffc:	4b4c      	ldr	r3, [pc, #304]	; (8002130 <DISP_WriteCharXY+0x1d0>)
 8001ffe:	781b      	ldrb	r3, [r3, #0]
 8002000:	4413      	add	r3, r2
 8002002:	68ba      	ldr	r2, [r7, #8]
 8002004:	fb02 f303 	mul.w	r3, r2, r3
 8002008:	61bb      	str	r3, [r7, #24]

      for (j = 0; j < ptrFontHeader->height; j++)
 800200a:	2300      	movs	r3, #0
 800200c:	62bb      	str	r3, [r7, #40]	; 0x28
 800200e:	e01c      	b.n	800204a <DISP_WriteCharXY+0xea>
      {
        my_DrawPixel(offsetX + i, offsetY + j,
 8002010:	4b48      	ldr	r3, [pc, #288]	; (8002134 <DISP_WriteCharXY+0x1d4>)
 8002012:	681c      	ldr	r4, [r3, #0]
 8002014:	69fa      	ldr	r2, [r7, #28]
 8002016:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002018:	18d0      	adds	r0, r2, r3
 800201a:	69ba      	ldr	r2, [r7, #24]
 800201c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800201e:	18d1      	adds	r1, r2, r3
            (b & 1) ? _textForeColor : _textBackColor);    // LSB first
 8002020:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8002024:	f003 0301 	and.w	r3, r3, #1
        my_DrawPixel(offsetX + i, offsetY + j,
 8002028:	2b00      	cmp	r3, #0
 800202a:	d002      	beq.n	8002032 <DISP_WriteCharXY+0xd2>
 800202c:	4b42      	ldr	r3, [pc, #264]	; (8002138 <DISP_WriteCharXY+0x1d8>)
 800202e:	781b      	ldrb	r3, [r3, #0]
 8002030:	e001      	b.n	8002036 <DISP_WriteCharXY+0xd6>
 8002032:	4b42      	ldr	r3, [pc, #264]	; (800213c <DISP_WriteCharXY+0x1dc>)
 8002034:	781b      	ldrb	r3, [r3, #0]
 8002036:	461a      	mov	r2, r3
 8002038:	47a0      	blx	r4
        b >>= 1;
 800203a:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 800203e:	085b      	lsrs	r3, r3, #1
 8002040:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
      for (j = 0; j < ptrFontHeader->height; j++)
 8002044:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002046:	3301      	adds	r3, #1
 8002048:	62bb      	str	r3, [r7, #40]	; 0x28
 800204a:	4b36      	ldr	r3, [pc, #216]	; (8002124 <DISP_WriteCharXY+0x1c4>)
 800204c:	681b      	ldr	r3, [r3, #0]
 800204e:	78db      	ldrb	r3, [r3, #3]
 8002050:	461a      	mov	r2, r3
 8002052:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002054:	429a      	cmp	r2, r3
 8002056:	dcdb      	bgt.n	8002010 <DISP_WriteCharXY+0xb0>
      }

      if (bbLineSpace)
 8002058:	4b35      	ldr	r3, [pc, #212]	; (8002130 <DISP_WriteCharXY+0x1d0>)
 800205a:	781b      	ldrb	r3, [r3, #0]
 800205c:	2b00      	cmp	r3, #0
 800205e:	d00a      	beq.n	8002076 <DISP_WriteCharXY+0x116>
        my_DrawPixel(offsetX + i, offsetY + j, _textBackColor); // j je pix na radku "pod"
 8002060:	4b34      	ldr	r3, [pc, #208]	; (8002134 <DISP_WriteCharXY+0x1d4>)
 8002062:	681b      	ldr	r3, [r3, #0]
 8002064:	69f9      	ldr	r1, [r7, #28]
 8002066:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8002068:	1888      	adds	r0, r1, r2
 800206a:	69b9      	ldr	r1, [r7, #24]
 800206c:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800206e:	4411      	add	r1, r2
 8002070:	4a32      	ldr	r2, [pc, #200]	; (800213c <DISP_WriteCharXY+0x1dc>)
 8002072:	7812      	ldrb	r2, [r2, #0]
 8002074:	4798      	blx	r3

      continue;
 8002076:	bf00      	nop
  for (i = 0; i < ptrFontHeader->width; i++)
 8002078:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800207a:	3301      	adds	r3, #1
 800207c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800207e:	4b29      	ldr	r3, [pc, #164]	; (8002124 <DISP_WriteCharXY+0x1c4>)
 8002080:	681b      	ldr	r3, [r3, #0]
 8002082:	789b      	ldrb	r3, [r3, #2]
 8002084:	461a      	mov	r2, r3
 8002086:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002088:	429a      	cmp	r2, r3
 800208a:	dc9d      	bgt.n	8001fc8 <DISP_WriteCharXY+0x68>
      continue;
    }
    */
  }

  if (bbPixSpace)
 800208c:	4b27      	ldr	r3, [pc, #156]	; (800212c <DISP_WriteCharXY+0x1cc>)
 800208e:	781b      	ldrb	r3, [r3, #0]
 8002090:	2b00      	cmp	r3, #0
 8002092:	d043      	beq.n	800211c <DISP_WriteCharXY+0x1bc>
  {
    if (ptrFontHeader->height <= 8)
 8002094:	4b23      	ldr	r3, [pc, #140]	; (8002124 <DISP_WriteCharXY+0x1c4>)
 8002096:	681b      	ldr	r3, [r3, #0]
 8002098:	78db      	ldrb	r3, [r3, #3]
 800209a:	2b08      	cmp	r3, #8
 800209c:	d83e      	bhi.n	800211c <DISP_WriteCharXY+0x1bc>
    {
      int offsetX = x * (ptrFontHeader->width + (bbPixSpace ? 1 : 0));
 800209e:	4b21      	ldr	r3, [pc, #132]	; (8002124 <DISP_WriteCharXY+0x1c4>)
 80020a0:	681b      	ldr	r3, [r3, #0]
 80020a2:	789b      	ldrb	r3, [r3, #2]
 80020a4:	461a      	mov	r2, r3
 80020a6:	4b21      	ldr	r3, [pc, #132]	; (800212c <DISP_WriteCharXY+0x1cc>)
 80020a8:	781b      	ldrb	r3, [r3, #0]
 80020aa:	4413      	add	r3, r2
 80020ac:	68fa      	ldr	r2, [r7, #12]
 80020ae:	fb02 f303 	mul.w	r3, r2, r3
 80020b2:	617b      	str	r3, [r7, #20]
      int offsetY = y * (ptrFontHeader->height + (bbLineSpace ? 1 : 0));
 80020b4:	4b1b      	ldr	r3, [pc, #108]	; (8002124 <DISP_WriteCharXY+0x1c4>)
 80020b6:	681b      	ldr	r3, [r3, #0]
 80020b8:	78db      	ldrb	r3, [r3, #3]
 80020ba:	461a      	mov	r2, r3
 80020bc:	4b1c      	ldr	r3, [pc, #112]	; (8002130 <DISP_WriteCharXY+0x1d0>)
 80020be:	781b      	ldrb	r3, [r3, #0]
 80020c0:	4413      	add	r3, r2
 80020c2:	68ba      	ldr	r2, [r7, #8]
 80020c4:	fb02 f303 	mul.w	r3, r2, r3
 80020c8:	613b      	str	r3, [r7, #16]

      for (j = 0; j < ptrFontHeader->height; j++)
 80020ca:	2300      	movs	r3, #0
 80020cc:	62bb      	str	r3, [r7, #40]	; 0x28
 80020ce:	e00d      	b.n	80020ec <DISP_WriteCharXY+0x18c>
        my_DrawPixel(offsetX + i, offsetY + j, _textBackColor);
 80020d0:	4b18      	ldr	r3, [pc, #96]	; (8002134 <DISP_WriteCharXY+0x1d4>)
 80020d2:	681b      	ldr	r3, [r3, #0]
 80020d4:	6979      	ldr	r1, [r7, #20]
 80020d6:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80020d8:	1888      	adds	r0, r1, r2
 80020da:	6939      	ldr	r1, [r7, #16]
 80020dc:	6aba      	ldr	r2, [r7, #40]	; 0x28
 80020de:	4411      	add	r1, r2
 80020e0:	4a16      	ldr	r2, [pc, #88]	; (800213c <DISP_WriteCharXY+0x1dc>)
 80020e2:	7812      	ldrb	r2, [r2, #0]
 80020e4:	4798      	blx	r3
      for (j = 0; j < ptrFontHeader->height; j++)
 80020e6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80020e8:	3301      	adds	r3, #1
 80020ea:	62bb      	str	r3, [r7, #40]	; 0x28
 80020ec:	4b0d      	ldr	r3, [pc, #52]	; (8002124 <DISP_WriteCharXY+0x1c4>)
 80020ee:	681b      	ldr	r3, [r3, #0]
 80020f0:	78db      	ldrb	r3, [r3, #3]
 80020f2:	461a      	mov	r2, r3
 80020f4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80020f6:	429a      	cmp	r2, r3
 80020f8:	dcea      	bgt.n	80020d0 <DISP_WriteCharXY+0x170>

      if (bbLineSpace)
 80020fa:	4b0d      	ldr	r3, [pc, #52]	; (8002130 <DISP_WriteCharXY+0x1d0>)
 80020fc:	781b      	ldrb	r3, [r3, #0]
 80020fe:	2b00      	cmp	r3, #0
 8002100:	d00c      	beq.n	800211c <DISP_WriteCharXY+0x1bc>
        my_DrawPixel(offsetX + i, offsetY + j, _textBackColor);          // j je pix na radku "pod"
 8002102:	4b0c      	ldr	r3, [pc, #48]	; (8002134 <DISP_WriteCharXY+0x1d4>)
 8002104:	681b      	ldr	r3, [r3, #0]
 8002106:	6979      	ldr	r1, [r7, #20]
 8002108:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800210a:	1888      	adds	r0, r1, r2
 800210c:	6939      	ldr	r1, [r7, #16]
 800210e:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8002110:	4411      	add	r1, r2
 8002112:	4a0a      	ldr	r2, [pc, #40]	; (800213c <DISP_WriteCharXY+0x1dc>)
 8002114:	7812      	ldrb	r2, [r2, #0]
 8002116:	4798      	blx	r3
 8002118:	e000      	b.n	800211c <DISP_WriteCharXY+0x1bc>
    return;
 800211a:	bf00      	nop
    }
  }
}
 800211c:	3734      	adds	r7, #52	; 0x34
 800211e:	46bd      	mov	sp, r7
 8002120:	bd90      	pop	{r4, r7, pc}
 8002122:	bf00      	nop
 8002124:	200026b8 	.word	0x200026b8
 8002128:	200026b4 	.word	0x200026b4
 800212c:	200026bc 	.word	0x200026bc
 8002130:	200026bd 	.word	0x200026bd
 8002134:	200026a0 	.word	0x200026a0
 8002138:	200026be 	.word	0x200026be
 800213c:	20000008 	.word	0x20000008

08002140 <DISP_Clear>:

bool DISP_Clear()
{
 8002140:	b580      	push	{r7, lr}
 8002142:	af00      	add	r7, sp, #0
  return DISP_Fill((pixelSize_t)0);
 8002144:	2000      	movs	r0, #0
 8002146:	f000 f803 	bl	8002150 <DISP_Fill>
 800214a:	4603      	mov	r3, r0
}
 800214c:	4618      	mov	r0, r3
 800214e:	bd80      	pop	{r7, pc}

08002150 <DISP_Fill>:

bool DISP_Fill(pixelSize_t bFill)
{
 8002150:	b580      	push	{r7, lr}
 8002152:	b084      	sub	sp, #16
 8002154:	af00      	add	r7, sp, #0
 8002156:	4603      	mov	r3, r0
 8002158:	71fb      	strb	r3, [r7, #7]
  int r, x;

  if (my_DrawPixel)
 800215a:	4b14      	ldr	r3, [pc, #80]	; (80021ac <DISP_Fill+0x5c>)
 800215c:	681b      	ldr	r3, [r3, #0]
 800215e:	2b00      	cmp	r3, #0
 8002160:	d01c      	beq.n	800219c <DISP_Fill+0x4c>
  {
    for (r = 0; r < pixelsHeight; r++)
 8002162:	2300      	movs	r3, #0
 8002164:	60fb      	str	r3, [r7, #12]
 8002166:	e013      	b.n	8002190 <DISP_Fill+0x40>
    {
      for (x = 0; x < pixelsWidth; x++)
 8002168:	2300      	movs	r3, #0
 800216a:	60bb      	str	r3, [r7, #8]
 800216c:	e008      	b.n	8002180 <DISP_Fill+0x30>
        my_DrawPixel(x, r, bFill);
 800216e:	4b0f      	ldr	r3, [pc, #60]	; (80021ac <DISP_Fill+0x5c>)
 8002170:	681b      	ldr	r3, [r3, #0]
 8002172:	79fa      	ldrb	r2, [r7, #7]
 8002174:	68f9      	ldr	r1, [r7, #12]
 8002176:	68b8      	ldr	r0, [r7, #8]
 8002178:	4798      	blx	r3
      for (x = 0; x < pixelsWidth; x++)
 800217a:	68bb      	ldr	r3, [r7, #8]
 800217c:	3301      	adds	r3, #1
 800217e:	60bb      	str	r3, [r7, #8]
 8002180:	4b0b      	ldr	r3, [pc, #44]	; (80021b0 <DISP_Fill+0x60>)
 8002182:	681b      	ldr	r3, [r3, #0]
 8002184:	68ba      	ldr	r2, [r7, #8]
 8002186:	429a      	cmp	r2, r3
 8002188:	dbf1      	blt.n	800216e <DISP_Fill+0x1e>
    for (r = 0; r < pixelsHeight; r++)
 800218a:	68fb      	ldr	r3, [r7, #12]
 800218c:	3301      	adds	r3, #1
 800218e:	60fb      	str	r3, [r7, #12]
 8002190:	4b08      	ldr	r3, [pc, #32]	; (80021b4 <DISP_Fill+0x64>)
 8002192:	681b      	ldr	r3, [r3, #0]
 8002194:	68fa      	ldr	r2, [r7, #12]
 8002196:	429a      	cmp	r2, r3
 8002198:	dbe6      	blt.n	8002168 <DISP_Fill+0x18>
 800219a:	e001      	b.n	80021a0 <DISP_Fill+0x50>
    }
  }
  else
    return false;
 800219c:	2300      	movs	r3, #0
 800219e:	e000      	b.n	80021a2 <DISP_Fill+0x52>

  return true;
 80021a0:	2301      	movs	r3, #1
}
 80021a2:	4618      	mov	r0, r3
 80021a4:	3710      	adds	r7, #16
 80021a6:	46bd      	mov	sp, r7
 80021a8:	bd80      	pop	{r7, pc}
 80021aa:	bf00      	nop
 80021ac:	200026a0 	.word	0x200026a0
 80021b0:	200026a4 	.word	0x200026a4
 80021b4:	200026a8 	.word	0x200026a8

080021b8 <DISP_FillRect>:
  DISP_DrawLine(x + w, y + h, x, y + h, color);
  DISP_DrawLine(x, y + h, x, y, color);
}

void DISP_FillRect(int x, int y, int w, int h, pixelSize_t color)
{
 80021b8:	b580      	push	{r7, lr}
 80021ba:	b086      	sub	sp, #24
 80021bc:	af00      	add	r7, sp, #0
 80021be:	60f8      	str	r0, [r7, #12]
 80021c0:	60b9      	str	r1, [r7, #8]
 80021c2:	607a      	str	r2, [r7, #4]
 80021c4:	603b      	str	r3, [r7, #0]
  int ww = w, xx = x;
 80021c6:	687b      	ldr	r3, [r7, #4]
 80021c8:	617b      	str	r3, [r7, #20]
 80021ca:	68fb      	ldr	r3, [r7, #12]
 80021cc:	613b      	str	r3, [r7, #16]

  for(; h; h--)
 80021ce:	e01a      	b.n	8002206 <DISP_FillRect+0x4e>
  {
    x = xx;
 80021d0:	693b      	ldr	r3, [r7, #16]
 80021d2:	60fb      	str	r3, [r7, #12]

    for(w = ww; w; w--)
 80021d4:	697b      	ldr	r3, [r7, #20]
 80021d6:	607b      	str	r3, [r7, #4]
 80021d8:	e00c      	b.n	80021f4 <DISP_FillRect+0x3c>
    {
      (*my_DrawPixel)(x, y, color);
 80021da:	4b0e      	ldr	r3, [pc, #56]	; (8002214 <DISP_FillRect+0x5c>)
 80021dc:	681b      	ldr	r3, [r3, #0]
 80021de:	f897 2020 	ldrb.w	r2, [r7, #32]
 80021e2:	68b9      	ldr	r1, [r7, #8]
 80021e4:	68f8      	ldr	r0, [r7, #12]
 80021e6:	4798      	blx	r3
      x++;
 80021e8:	68fb      	ldr	r3, [r7, #12]
 80021ea:	3301      	adds	r3, #1
 80021ec:	60fb      	str	r3, [r7, #12]
    for(w = ww; w; w--)
 80021ee:	687b      	ldr	r3, [r7, #4]
 80021f0:	3b01      	subs	r3, #1
 80021f2:	607b      	str	r3, [r7, #4]
 80021f4:	687b      	ldr	r3, [r7, #4]
 80021f6:	2b00      	cmp	r3, #0
 80021f8:	d1ef      	bne.n	80021da <DISP_FillRect+0x22>
    }

    y++;
 80021fa:	68bb      	ldr	r3, [r7, #8]
 80021fc:	3301      	adds	r3, #1
 80021fe:	60bb      	str	r3, [r7, #8]
  for(; h; h--)
 8002200:	683b      	ldr	r3, [r7, #0]
 8002202:	3b01      	subs	r3, #1
 8002204:	603b      	str	r3, [r7, #0]
 8002206:	683b      	ldr	r3, [r7, #0]
 8002208:	2b00      	cmp	r3, #0
 800220a:	d1e1      	bne.n	80021d0 <DISP_FillRect+0x18>
  }
}
 800220c:	bf00      	nop
 800220e:	3718      	adds	r7, #24
 8002210:	46bd      	mov	sp, r7
 8002212:	bd80      	pop	{r7, pc}
 8002214:	200026a0 	.word	0x200026a0

08002218 <DISP_DrawCircle>:

void DISP_DrawCircle(int centerX, int centerY, int radius, pixelSize_t colorSet)
{
 8002218:	b580      	push	{r7, lr}
 800221a:	b088      	sub	sp, #32
 800221c:	af00      	add	r7, sp, #0
 800221e:	60f8      	str	r0, [r7, #12]
 8002220:	60b9      	str	r1, [r7, #8]
 8002222:	607a      	str	r2, [r7, #4]
 8002224:	70fb      	strb	r3, [r7, #3]
  int d = (5 - radius * 4) / 4;
 8002226:	687b      	ldr	r3, [r7, #4]
 8002228:	009b      	lsls	r3, r3, #2
 800222a:	f1c3 0305 	rsb	r3, r3, #5
 800222e:	2b00      	cmp	r3, #0
 8002230:	da00      	bge.n	8002234 <DISP_DrawCircle+0x1c>
 8002232:	3303      	adds	r3, #3
 8002234:	109b      	asrs	r3, r3, #2
 8002236:	61fb      	str	r3, [r7, #28]
  int x = 0;
 8002238:	2300      	movs	r3, #0
 800223a:	61bb      	str	r3, [r7, #24]
  int y = radius;
 800223c:	687b      	ldr	r3, [r7, #4]
 800223e:	617b      	str	r3, [r7, #20]

  do
  {
    // ensure index is in range before setting (depends on your image implementation)
    // in this case we check if the pixel location is within the bounds of the image before setting the pixel
    if (((centerX + x) >= 0) && ((centerX + x) <= (pixelsWidth - 1)) && ((centerY + y) >= 0) && ((centerY + y) <= (pixelsHeight - 1))) (*my_DrawPixel)(centerX + x, centerY + y, colorSet);
 8002240:	68fa      	ldr	r2, [r7, #12]
 8002242:	69bb      	ldr	r3, [r7, #24]
 8002244:	4413      	add	r3, r2
 8002246:	2b00      	cmp	r3, #0
 8002248:	db1e      	blt.n	8002288 <DISP_DrawCircle+0x70>
 800224a:	68fa      	ldr	r2, [r7, #12]
 800224c:	69bb      	ldr	r3, [r7, #24]
 800224e:	441a      	add	r2, r3
 8002250:	4b90      	ldr	r3, [pc, #576]	; (8002494 <DISP_DrawCircle+0x27c>)
 8002252:	681b      	ldr	r3, [r3, #0]
 8002254:	3b01      	subs	r3, #1
 8002256:	429a      	cmp	r2, r3
 8002258:	dc16      	bgt.n	8002288 <DISP_DrawCircle+0x70>
 800225a:	68ba      	ldr	r2, [r7, #8]
 800225c:	697b      	ldr	r3, [r7, #20]
 800225e:	4413      	add	r3, r2
 8002260:	2b00      	cmp	r3, #0
 8002262:	db11      	blt.n	8002288 <DISP_DrawCircle+0x70>
 8002264:	68ba      	ldr	r2, [r7, #8]
 8002266:	697b      	ldr	r3, [r7, #20]
 8002268:	441a      	add	r2, r3
 800226a:	4b8b      	ldr	r3, [pc, #556]	; (8002498 <DISP_DrawCircle+0x280>)
 800226c:	681b      	ldr	r3, [r3, #0]
 800226e:	3b01      	subs	r3, #1
 8002270:	429a      	cmp	r2, r3
 8002272:	dc09      	bgt.n	8002288 <DISP_DrawCircle+0x70>
 8002274:	4b89      	ldr	r3, [pc, #548]	; (800249c <DISP_DrawCircle+0x284>)
 8002276:	681b      	ldr	r3, [r3, #0]
 8002278:	68f9      	ldr	r1, [r7, #12]
 800227a:	69ba      	ldr	r2, [r7, #24]
 800227c:	1888      	adds	r0, r1, r2
 800227e:	68b9      	ldr	r1, [r7, #8]
 8002280:	697a      	ldr	r2, [r7, #20]
 8002282:	4411      	add	r1, r2
 8002284:	78fa      	ldrb	r2, [r7, #3]
 8002286:	4798      	blx	r3
    if (((centerX + x) >= 0) && ((centerX + x) <= (pixelsWidth - 1)) && ((centerY - y) >= 0) && ((centerY - y) <= (pixelsHeight - 1))) (*my_DrawPixel)(centerX + x, centerY - y, colorSet);
 8002288:	68fa      	ldr	r2, [r7, #12]
 800228a:	69bb      	ldr	r3, [r7, #24]
 800228c:	4413      	add	r3, r2
 800228e:	2b00      	cmp	r3, #0
 8002290:	db1e      	blt.n	80022d0 <DISP_DrawCircle+0xb8>
 8002292:	68fa      	ldr	r2, [r7, #12]
 8002294:	69bb      	ldr	r3, [r7, #24]
 8002296:	441a      	add	r2, r3
 8002298:	4b7e      	ldr	r3, [pc, #504]	; (8002494 <DISP_DrawCircle+0x27c>)
 800229a:	681b      	ldr	r3, [r3, #0]
 800229c:	3b01      	subs	r3, #1
 800229e:	429a      	cmp	r2, r3
 80022a0:	dc16      	bgt.n	80022d0 <DISP_DrawCircle+0xb8>
 80022a2:	68ba      	ldr	r2, [r7, #8]
 80022a4:	697b      	ldr	r3, [r7, #20]
 80022a6:	1ad3      	subs	r3, r2, r3
 80022a8:	2b00      	cmp	r3, #0
 80022aa:	db11      	blt.n	80022d0 <DISP_DrawCircle+0xb8>
 80022ac:	68ba      	ldr	r2, [r7, #8]
 80022ae:	697b      	ldr	r3, [r7, #20]
 80022b0:	1ad2      	subs	r2, r2, r3
 80022b2:	4b79      	ldr	r3, [pc, #484]	; (8002498 <DISP_DrawCircle+0x280>)
 80022b4:	681b      	ldr	r3, [r3, #0]
 80022b6:	3b01      	subs	r3, #1
 80022b8:	429a      	cmp	r2, r3
 80022ba:	dc09      	bgt.n	80022d0 <DISP_DrawCircle+0xb8>
 80022bc:	4b77      	ldr	r3, [pc, #476]	; (800249c <DISP_DrawCircle+0x284>)
 80022be:	681b      	ldr	r3, [r3, #0]
 80022c0:	68f9      	ldr	r1, [r7, #12]
 80022c2:	69ba      	ldr	r2, [r7, #24]
 80022c4:	1888      	adds	r0, r1, r2
 80022c6:	68b9      	ldr	r1, [r7, #8]
 80022c8:	697a      	ldr	r2, [r7, #20]
 80022ca:	1a89      	subs	r1, r1, r2
 80022cc:	78fa      	ldrb	r2, [r7, #3]
 80022ce:	4798      	blx	r3
    if (((centerX - x) >= 0) && ((centerX - x) <= (pixelsWidth - 1)) && ((centerY + y) >= 0) && ((centerY + y) <= (pixelsHeight - 1))) (*my_DrawPixel)(centerX - x, centerY + y, colorSet);
 80022d0:	68fa      	ldr	r2, [r7, #12]
 80022d2:	69bb      	ldr	r3, [r7, #24]
 80022d4:	1ad3      	subs	r3, r2, r3
 80022d6:	2b00      	cmp	r3, #0
 80022d8:	db1e      	blt.n	8002318 <DISP_DrawCircle+0x100>
 80022da:	68fa      	ldr	r2, [r7, #12]
 80022dc:	69bb      	ldr	r3, [r7, #24]
 80022de:	1ad2      	subs	r2, r2, r3
 80022e0:	4b6c      	ldr	r3, [pc, #432]	; (8002494 <DISP_DrawCircle+0x27c>)
 80022e2:	681b      	ldr	r3, [r3, #0]
 80022e4:	3b01      	subs	r3, #1
 80022e6:	429a      	cmp	r2, r3
 80022e8:	dc16      	bgt.n	8002318 <DISP_DrawCircle+0x100>
 80022ea:	68ba      	ldr	r2, [r7, #8]
 80022ec:	697b      	ldr	r3, [r7, #20]
 80022ee:	4413      	add	r3, r2
 80022f0:	2b00      	cmp	r3, #0
 80022f2:	db11      	blt.n	8002318 <DISP_DrawCircle+0x100>
 80022f4:	68ba      	ldr	r2, [r7, #8]
 80022f6:	697b      	ldr	r3, [r7, #20]
 80022f8:	441a      	add	r2, r3
 80022fa:	4b67      	ldr	r3, [pc, #412]	; (8002498 <DISP_DrawCircle+0x280>)
 80022fc:	681b      	ldr	r3, [r3, #0]
 80022fe:	3b01      	subs	r3, #1
 8002300:	429a      	cmp	r2, r3
 8002302:	dc09      	bgt.n	8002318 <DISP_DrawCircle+0x100>
 8002304:	4b65      	ldr	r3, [pc, #404]	; (800249c <DISP_DrawCircle+0x284>)
 8002306:	681b      	ldr	r3, [r3, #0]
 8002308:	68f9      	ldr	r1, [r7, #12]
 800230a:	69ba      	ldr	r2, [r7, #24]
 800230c:	1a88      	subs	r0, r1, r2
 800230e:	68b9      	ldr	r1, [r7, #8]
 8002310:	697a      	ldr	r2, [r7, #20]
 8002312:	4411      	add	r1, r2
 8002314:	78fa      	ldrb	r2, [r7, #3]
 8002316:	4798      	blx	r3
    if (((centerX - x) >= 0) && ((centerX - x) <= (pixelsWidth - 1)) && ((centerY - y) >= 0) && ((centerY - y) <= (pixelsHeight - 1))) (*my_DrawPixel)(centerX - x, centerY - y, colorSet);
 8002318:	68fa      	ldr	r2, [r7, #12]
 800231a:	69bb      	ldr	r3, [r7, #24]
 800231c:	1ad3      	subs	r3, r2, r3
 800231e:	2b00      	cmp	r3, #0
 8002320:	db1e      	blt.n	8002360 <DISP_DrawCircle+0x148>
 8002322:	68fa      	ldr	r2, [r7, #12]
 8002324:	69bb      	ldr	r3, [r7, #24]
 8002326:	1ad2      	subs	r2, r2, r3
 8002328:	4b5a      	ldr	r3, [pc, #360]	; (8002494 <DISP_DrawCircle+0x27c>)
 800232a:	681b      	ldr	r3, [r3, #0]
 800232c:	3b01      	subs	r3, #1
 800232e:	429a      	cmp	r2, r3
 8002330:	dc16      	bgt.n	8002360 <DISP_DrawCircle+0x148>
 8002332:	68ba      	ldr	r2, [r7, #8]
 8002334:	697b      	ldr	r3, [r7, #20]
 8002336:	1ad3      	subs	r3, r2, r3
 8002338:	2b00      	cmp	r3, #0
 800233a:	db11      	blt.n	8002360 <DISP_DrawCircle+0x148>
 800233c:	68ba      	ldr	r2, [r7, #8]
 800233e:	697b      	ldr	r3, [r7, #20]
 8002340:	1ad2      	subs	r2, r2, r3
 8002342:	4b55      	ldr	r3, [pc, #340]	; (8002498 <DISP_DrawCircle+0x280>)
 8002344:	681b      	ldr	r3, [r3, #0]
 8002346:	3b01      	subs	r3, #1
 8002348:	429a      	cmp	r2, r3
 800234a:	dc09      	bgt.n	8002360 <DISP_DrawCircle+0x148>
 800234c:	4b53      	ldr	r3, [pc, #332]	; (800249c <DISP_DrawCircle+0x284>)
 800234e:	681b      	ldr	r3, [r3, #0]
 8002350:	68f9      	ldr	r1, [r7, #12]
 8002352:	69ba      	ldr	r2, [r7, #24]
 8002354:	1a88      	subs	r0, r1, r2
 8002356:	68b9      	ldr	r1, [r7, #8]
 8002358:	697a      	ldr	r2, [r7, #20]
 800235a:	1a89      	subs	r1, r1, r2
 800235c:	78fa      	ldrb	r2, [r7, #3]
 800235e:	4798      	blx	r3
    if (((centerX + y) >= 0) && ((centerX + y) <= (pixelsWidth - 1)) && ((centerY + x) >= 0) && ((centerY + x) <= (pixelsHeight - 1))) (*my_DrawPixel)(centerX + y, centerY + x, colorSet);
 8002360:	68fa      	ldr	r2, [r7, #12]
 8002362:	697b      	ldr	r3, [r7, #20]
 8002364:	4413      	add	r3, r2
 8002366:	2b00      	cmp	r3, #0
 8002368:	db1e      	blt.n	80023a8 <DISP_DrawCircle+0x190>
 800236a:	68fa      	ldr	r2, [r7, #12]
 800236c:	697b      	ldr	r3, [r7, #20]
 800236e:	441a      	add	r2, r3
 8002370:	4b48      	ldr	r3, [pc, #288]	; (8002494 <DISP_DrawCircle+0x27c>)
 8002372:	681b      	ldr	r3, [r3, #0]
 8002374:	3b01      	subs	r3, #1
 8002376:	429a      	cmp	r2, r3
 8002378:	dc16      	bgt.n	80023a8 <DISP_DrawCircle+0x190>
 800237a:	68ba      	ldr	r2, [r7, #8]
 800237c:	69bb      	ldr	r3, [r7, #24]
 800237e:	4413      	add	r3, r2
 8002380:	2b00      	cmp	r3, #0
 8002382:	db11      	blt.n	80023a8 <DISP_DrawCircle+0x190>
 8002384:	68ba      	ldr	r2, [r7, #8]
 8002386:	69bb      	ldr	r3, [r7, #24]
 8002388:	441a      	add	r2, r3
 800238a:	4b43      	ldr	r3, [pc, #268]	; (8002498 <DISP_DrawCircle+0x280>)
 800238c:	681b      	ldr	r3, [r3, #0]
 800238e:	3b01      	subs	r3, #1
 8002390:	429a      	cmp	r2, r3
 8002392:	dc09      	bgt.n	80023a8 <DISP_DrawCircle+0x190>
 8002394:	4b41      	ldr	r3, [pc, #260]	; (800249c <DISP_DrawCircle+0x284>)
 8002396:	681b      	ldr	r3, [r3, #0]
 8002398:	68f9      	ldr	r1, [r7, #12]
 800239a:	697a      	ldr	r2, [r7, #20]
 800239c:	1888      	adds	r0, r1, r2
 800239e:	68b9      	ldr	r1, [r7, #8]
 80023a0:	69ba      	ldr	r2, [r7, #24]
 80023a2:	4411      	add	r1, r2
 80023a4:	78fa      	ldrb	r2, [r7, #3]
 80023a6:	4798      	blx	r3
    if (((centerX + y) >= 0) && ((centerX + y) <= (pixelsWidth - 1)) && ((centerY - x) >= 0) && ((centerY - x) <= (pixelsHeight - 1))) (*my_DrawPixel)(centerX + y, centerY - x, colorSet);
 80023a8:	68fa      	ldr	r2, [r7, #12]
 80023aa:	697b      	ldr	r3, [r7, #20]
 80023ac:	4413      	add	r3, r2
 80023ae:	2b00      	cmp	r3, #0
 80023b0:	db1e      	blt.n	80023f0 <DISP_DrawCircle+0x1d8>
 80023b2:	68fa      	ldr	r2, [r7, #12]
 80023b4:	697b      	ldr	r3, [r7, #20]
 80023b6:	441a      	add	r2, r3
 80023b8:	4b36      	ldr	r3, [pc, #216]	; (8002494 <DISP_DrawCircle+0x27c>)
 80023ba:	681b      	ldr	r3, [r3, #0]
 80023bc:	3b01      	subs	r3, #1
 80023be:	429a      	cmp	r2, r3
 80023c0:	dc16      	bgt.n	80023f0 <DISP_DrawCircle+0x1d8>
 80023c2:	68ba      	ldr	r2, [r7, #8]
 80023c4:	69bb      	ldr	r3, [r7, #24]
 80023c6:	1ad3      	subs	r3, r2, r3
 80023c8:	2b00      	cmp	r3, #0
 80023ca:	db11      	blt.n	80023f0 <DISP_DrawCircle+0x1d8>
 80023cc:	68ba      	ldr	r2, [r7, #8]
 80023ce:	69bb      	ldr	r3, [r7, #24]
 80023d0:	1ad2      	subs	r2, r2, r3
 80023d2:	4b31      	ldr	r3, [pc, #196]	; (8002498 <DISP_DrawCircle+0x280>)
 80023d4:	681b      	ldr	r3, [r3, #0]
 80023d6:	3b01      	subs	r3, #1
 80023d8:	429a      	cmp	r2, r3
 80023da:	dc09      	bgt.n	80023f0 <DISP_DrawCircle+0x1d8>
 80023dc:	4b2f      	ldr	r3, [pc, #188]	; (800249c <DISP_DrawCircle+0x284>)
 80023de:	681b      	ldr	r3, [r3, #0]
 80023e0:	68f9      	ldr	r1, [r7, #12]
 80023e2:	697a      	ldr	r2, [r7, #20]
 80023e4:	1888      	adds	r0, r1, r2
 80023e6:	68b9      	ldr	r1, [r7, #8]
 80023e8:	69ba      	ldr	r2, [r7, #24]
 80023ea:	1a89      	subs	r1, r1, r2
 80023ec:	78fa      	ldrb	r2, [r7, #3]
 80023ee:	4798      	blx	r3
    if (((centerX - y) >= 0) && ((centerX - y) <= (pixelsWidth - 1)) && ((centerY + x) >= 0) && ((centerY + x) <= (pixelsHeight - 1))) (*my_DrawPixel)(centerX - y, centerY + x, colorSet);
 80023f0:	68fa      	ldr	r2, [r7, #12]
 80023f2:	697b      	ldr	r3, [r7, #20]
 80023f4:	1ad3      	subs	r3, r2, r3
 80023f6:	2b00      	cmp	r3, #0
 80023f8:	db1e      	blt.n	8002438 <DISP_DrawCircle+0x220>
 80023fa:	68fa      	ldr	r2, [r7, #12]
 80023fc:	697b      	ldr	r3, [r7, #20]
 80023fe:	1ad2      	subs	r2, r2, r3
 8002400:	4b24      	ldr	r3, [pc, #144]	; (8002494 <DISP_DrawCircle+0x27c>)
 8002402:	681b      	ldr	r3, [r3, #0]
 8002404:	3b01      	subs	r3, #1
 8002406:	429a      	cmp	r2, r3
 8002408:	dc16      	bgt.n	8002438 <DISP_DrawCircle+0x220>
 800240a:	68ba      	ldr	r2, [r7, #8]
 800240c:	69bb      	ldr	r3, [r7, #24]
 800240e:	4413      	add	r3, r2
 8002410:	2b00      	cmp	r3, #0
 8002412:	db11      	blt.n	8002438 <DISP_DrawCircle+0x220>
 8002414:	68ba      	ldr	r2, [r7, #8]
 8002416:	69bb      	ldr	r3, [r7, #24]
 8002418:	441a      	add	r2, r3
 800241a:	4b1f      	ldr	r3, [pc, #124]	; (8002498 <DISP_DrawCircle+0x280>)
 800241c:	681b      	ldr	r3, [r3, #0]
 800241e:	3b01      	subs	r3, #1
 8002420:	429a      	cmp	r2, r3
 8002422:	dc09      	bgt.n	8002438 <DISP_DrawCircle+0x220>
 8002424:	4b1d      	ldr	r3, [pc, #116]	; (800249c <DISP_DrawCircle+0x284>)
 8002426:	681b      	ldr	r3, [r3, #0]
 8002428:	68f9      	ldr	r1, [r7, #12]
 800242a:	697a      	ldr	r2, [r7, #20]
 800242c:	1a88      	subs	r0, r1, r2
 800242e:	68b9      	ldr	r1, [r7, #8]
 8002430:	69ba      	ldr	r2, [r7, #24]
 8002432:	4411      	add	r1, r2
 8002434:	78fa      	ldrb	r2, [r7, #3]
 8002436:	4798      	blx	r3
    if (((centerX - y) >= 0) && ((centerX - y) <= (pixelsWidth - 1)) && ((centerY - x) >= 0) && ((centerY - x) <= (pixelsHeight - 1))) (*my_DrawPixel)(centerX - y, centerY - x, colorSet);
 8002438:	68fa      	ldr	r2, [r7, #12]
 800243a:	697b      	ldr	r3, [r7, #20]
 800243c:	1ad3      	subs	r3, r2, r3
 800243e:	2b00      	cmp	r3, #0
 8002440:	db1e      	blt.n	8002480 <DISP_DrawCircle+0x268>
 8002442:	68fa      	ldr	r2, [r7, #12]
 8002444:	697b      	ldr	r3, [r7, #20]
 8002446:	1ad2      	subs	r2, r2, r3
 8002448:	4b12      	ldr	r3, [pc, #72]	; (8002494 <DISP_DrawCircle+0x27c>)
 800244a:	681b      	ldr	r3, [r3, #0]
 800244c:	3b01      	subs	r3, #1
 800244e:	429a      	cmp	r2, r3
 8002450:	dc16      	bgt.n	8002480 <DISP_DrawCircle+0x268>
 8002452:	68ba      	ldr	r2, [r7, #8]
 8002454:	69bb      	ldr	r3, [r7, #24]
 8002456:	1ad3      	subs	r3, r2, r3
 8002458:	2b00      	cmp	r3, #0
 800245a:	db11      	blt.n	8002480 <DISP_DrawCircle+0x268>
 800245c:	68ba      	ldr	r2, [r7, #8]
 800245e:	69bb      	ldr	r3, [r7, #24]
 8002460:	1ad2      	subs	r2, r2, r3
 8002462:	4b0d      	ldr	r3, [pc, #52]	; (8002498 <DISP_DrawCircle+0x280>)
 8002464:	681b      	ldr	r3, [r3, #0]
 8002466:	3b01      	subs	r3, #1
 8002468:	429a      	cmp	r2, r3
 800246a:	dc09      	bgt.n	8002480 <DISP_DrawCircle+0x268>
 800246c:	4b0b      	ldr	r3, [pc, #44]	; (800249c <DISP_DrawCircle+0x284>)
 800246e:	681b      	ldr	r3, [r3, #0]
 8002470:	68f9      	ldr	r1, [r7, #12]
 8002472:	697a      	ldr	r2, [r7, #20]
 8002474:	1a88      	subs	r0, r1, r2
 8002476:	68b9      	ldr	r1, [r7, #8]
 8002478:	69ba      	ldr	r2, [r7, #24]
 800247a:	1a89      	subs	r1, r1, r2
 800247c:	78fa      	ldrb	r2, [r7, #3]
 800247e:	4798      	blx	r3
    if (d < 0)
 8002480:	69fb      	ldr	r3, [r7, #28]
 8002482:	2b00      	cmp	r3, #0
 8002484:	da0c      	bge.n	80024a0 <DISP_DrawCircle+0x288>
    {
      d += 2 * x + 1;
 8002486:	69bb      	ldr	r3, [r7, #24]
 8002488:	005b      	lsls	r3, r3, #1
 800248a:	3301      	adds	r3, #1
 800248c:	69fa      	ldr	r2, [r7, #28]
 800248e:	4413      	add	r3, r2
 8002490:	61fb      	str	r3, [r7, #28]
 8002492:	e010      	b.n	80024b6 <DISP_DrawCircle+0x29e>
 8002494:	200026a4 	.word	0x200026a4
 8002498:	200026a8 	.word	0x200026a8
 800249c:	200026a0 	.word	0x200026a0
    }
    else
    {
      d += 2 * (x - y) + 1;
 80024a0:	69ba      	ldr	r2, [r7, #24]
 80024a2:	697b      	ldr	r3, [r7, #20]
 80024a4:	1ad3      	subs	r3, r2, r3
 80024a6:	005b      	lsls	r3, r3, #1
 80024a8:	3301      	adds	r3, #1
 80024aa:	69fa      	ldr	r2, [r7, #28]
 80024ac:	4413      	add	r3, r2
 80024ae:	61fb      	str	r3, [r7, #28]
      y--;
 80024b0:	697b      	ldr	r3, [r7, #20]
 80024b2:	3b01      	subs	r3, #1
 80024b4:	617b      	str	r3, [r7, #20]
    }
    x++;
 80024b6:	69bb      	ldr	r3, [r7, #24]
 80024b8:	3301      	adds	r3, #1
 80024ba:	61bb      	str	r3, [r7, #24]
  } while (x <= y);
 80024bc:	69ba      	ldr	r2, [r7, #24]
 80024be:	697b      	ldr	r3, [r7, #20]
 80024c0:	429a      	cmp	r2, r3
 80024c2:	f77f aebd 	ble.w	8002240 <DISP_DrawCircle+0x28>
}
 80024c6:	bf00      	nop
 80024c8:	3720      	adds	r7, #32
 80024ca:	46bd      	mov	sp, r7
 80024cc:	bd80      	pop	{r7, pc}
 80024ce:	bf00      	nop

080024d0 <__sputc_r>:
#else
#define __sgetc_r(__ptr, __p) __sgetc_raw_r(__ptr, __p)
#endif

#ifdef __GNUC__
_ELIDABLE_INLINE int __sputc_r(struct _reent *_ptr, int _c, FILE *_p) {
 80024d0:	b580      	push	{r7, lr}
 80024d2:	b084      	sub	sp, #16
 80024d4:	af00      	add	r7, sp, #0
 80024d6:	60f8      	str	r0, [r7, #12]
 80024d8:	60b9      	str	r1, [r7, #8]
 80024da:	607a      	str	r2, [r7, #4]
#ifdef __SCLE
	if ((_p->_flags & __SCLE) && _c == '\n')
	  __sputc_r (_ptr, '\r', _p);
#endif
	if (--_p->_w >= 0 || (_p->_w >= _p->_lbfsize && (char)_c != '\n'))
 80024dc:	687b      	ldr	r3, [r7, #4]
 80024de:	689b      	ldr	r3, [r3, #8]
 80024e0:	1e5a      	subs	r2, r3, #1
 80024e2:	687b      	ldr	r3, [r7, #4]
 80024e4:	609a      	str	r2, [r3, #8]
 80024e6:	687b      	ldr	r3, [r7, #4]
 80024e8:	689b      	ldr	r3, [r3, #8]
 80024ea:	2b00      	cmp	r3, #0
 80024ec:	da09      	bge.n	8002502 <__sputc_r+0x32>
 80024ee:	687b      	ldr	r3, [r7, #4]
 80024f0:	689a      	ldr	r2, [r3, #8]
 80024f2:	687b      	ldr	r3, [r7, #4]
 80024f4:	699b      	ldr	r3, [r3, #24]
 80024f6:	429a      	cmp	r2, r3
 80024f8:	db0d      	blt.n	8002516 <__sputc_r+0x46>
 80024fa:	68bb      	ldr	r3, [r7, #8]
 80024fc:	b2db      	uxtb	r3, r3
 80024fe:	2b0a      	cmp	r3, #10
 8002500:	d009      	beq.n	8002516 <__sputc_r+0x46>
		return (*_p->_p++ = _c);
 8002502:	687b      	ldr	r3, [r7, #4]
 8002504:	681b      	ldr	r3, [r3, #0]
 8002506:	1c59      	adds	r1, r3, #1
 8002508:	687a      	ldr	r2, [r7, #4]
 800250a:	6011      	str	r1, [r2, #0]
 800250c:	68ba      	ldr	r2, [r7, #8]
 800250e:	b2d2      	uxtb	r2, r2
 8002510:	701a      	strb	r2, [r3, #0]
 8002512:	781b      	ldrb	r3, [r3, #0]
 8002514:	e005      	b.n	8002522 <__sputc_r+0x52>
	else
		return (__swbuf_r(_ptr, _c, _p));
 8002516:	687a      	ldr	r2, [r7, #4]
 8002518:	68b9      	ldr	r1, [r7, #8]
 800251a:	68f8      	ldr	r0, [r7, #12]
 800251c:	f002 fcbc 	bl	8004e98 <__swbuf_r>
 8002520:	4603      	mov	r3, r0
}
 8002522:	4618      	mov	r0, r3
 8002524:	3710      	adds	r7, #16
 8002526:	46bd      	mov	sp, r7
 8002528:	bd80      	pop	{r7, pc}
	...

0800252c <main>:
**  Abstract: main program
**
**===========================================================================
*/
int main(void)
{
 800252c:	b580      	push	{r7, lr}
 800252e:	b0ca      	sub	sp, #296	; 0x128
 8002530:	af02      	add	r7, sp, #8
  uint32_t tmBtn = 0, tmAction = 0, intervalAction = 1000;
 8002532:	2300      	movs	r3, #0
 8002534:	f8c7 311c 	str.w	r3, [r7, #284]	; 0x11c
 8002538:	2300      	movs	r3, #0
 800253a:	f8c7 3118 	str.w	r3, [r7, #280]	; 0x118
 800253e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002542:	f8c7 3108 	str.w	r3, [r7, #264]	; 0x108
  bool bbButton, bbLastButton = true;
 8002546:	2301      	movs	r3, #1
 8002548:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
  char cbuf[256];

  SystemClock_100MHz();
 800254c:	f7ff f80a 	bl	8001564 <SystemClock_100MHz>
  SystemCoreClockUpdate();
 8002550:	f000 fa18 	bl	8002984 <SystemCoreClockUpdate>

  InitSystickDefault();
 8002554:	f7ff fbbe 	bl	8001cd4 <InitSystickDefault>

// shared SPI-CLK  Nucleo_SetPinGPIO(GPIOA, 5, output);
  Nucleo_SetPinGPIO(GPIOC, 13, input_pullup);
 8002558:	2202      	movs	r2, #2
 800255a:	210d      	movs	r1, #13
 800255c:	4880      	ldr	r0, [pc, #512]	; (8002760 <main+0x234>)
 800255e:	f7ff f88b 	bl	8001678 <Nucleo_SetPinGPIO>

  Nucleo_StartUart2(38400);
 8002562:	f44f 4016 	mov.w	r0, #38400	; 0x9600
 8002566:	f7ff f9fb 	bl	8001960 <Nucleo_StartUart2>
  // pozor, bez tohoto nefunguje putchar a musel by byt fputc(.., stdout)
  setvbuf(stdout,NULL,_IONBF,0);
 800256a:	4b7e      	ldr	r3, [pc, #504]	; (8002764 <main+0x238>)
 800256c:	681b      	ldr	r3, [r3, #0]
 800256e:	6898      	ldr	r0, [r3, #8]
 8002570:	2300      	movs	r3, #0
 8002572:	2202      	movs	r2, #2
 8002574:	2100      	movs	r1, #0
 8002576:	f000 fb4f 	bl	8002c18 <setvbuf>
  setvbuf(stdin,NULL,_IONBF,0);
 800257a:	4b7a      	ldr	r3, [pc, #488]	; (8002764 <main+0x238>)
 800257c:	681b      	ldr	r3, [r3, #0]
 800257e:	6858      	ldr	r0, [r3, #4]
 8002580:	2300      	movs	r3, #0
 8002582:	2202      	movs	r2, #2
 8002584:	2100      	movs	r1, #0
 8002586:	f000 fb47 	bl	8002c18 <setvbuf>

  puts("\n\nStart APP OLED NHD 3.12\" - " __DATE__ " " __TIME__);
 800258a:	4877      	ldr	r0, [pc, #476]	; (8002768 <main+0x23c>)
 800258c:	f000 fb10 	bl	8002bb0 <puts>
  printf("CoreClock: %ld\n", SystemCoreClock);
 8002590:	4b76      	ldr	r3, [pc, #472]	; (800276c <main+0x240>)
 8002592:	681b      	ldr	r3, [r3, #0]
 8002594:	4619      	mov	r1, r3
 8002596:	4876      	ldr	r0, [pc, #472]	; (8002770 <main+0x244>)
 8002598:	f000 fa92 	bl	8002ac0 <printf>

  OLED_Init();
 800259c:	f7fe fc90 	bl	8000ec0 <OLED_Init>

  puts("OLED Init finish");
 80025a0:	4874      	ldr	r0, [pc, #464]	; (8002774 <main+0x248>)
 80025a2:	f000 fb05 	bl	8002bb0 <puts>

  DISP_Clear();
 80025a6:	f7ff fdcb 	bl	8002140 <DISP_Clear>
//   DISP_SetFont(font_system_5x7pr);
  DISP_SetFont(font_system_5x7pr);
 80025aa:	2004      	movs	r0, #4
 80025ac:	f7ff fbd6 	bl	8001d5c <DISP_SetFont>

  for(int i = 0; i < 16; i++)
 80025b0:	2300      	movs	r3, #0
 80025b2:	f8c7 3110 	str.w	r3, [r7, #272]	; 0x110
 80025b6:	e029      	b.n	800260c <main+0xe0>
  {
    DISP_DrawCircle(32, 32, i, 15 - i);
 80025b8:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 80025bc:	b2db      	uxtb	r3, r3
 80025be:	f1c3 030f 	rsb	r3, r3, #15
 80025c2:	b2db      	uxtb	r3, r3
 80025c4:	f8d7 2110 	ldr.w	r2, [r7, #272]	; 0x110
 80025c8:	2120      	movs	r1, #32
 80025ca:	2020      	movs	r0, #32
 80025cc:	f7ff fe24 	bl	8002218 <DISP_DrawCircle>
    DISP_DrawCircle(64, 32, i, i);
 80025d0:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 80025d4:	b2db      	uxtb	r3, r3
 80025d6:	f8d7 2110 	ldr.w	r2, [r7, #272]	; 0x110
 80025da:	2120      	movs	r1, #32
 80025dc:	2040      	movs	r0, #64	; 0x40
 80025de:	f7ff fe1b 	bl	8002218 <DISP_DrawCircle>

    DISP_FillRect(10 * i, 54, 10, 10, i);
 80025e2:	f8d7 2110 	ldr.w	r2, [r7, #272]	; 0x110
 80025e6:	4613      	mov	r3, r2
 80025e8:	009b      	lsls	r3, r3, #2
 80025ea:	4413      	add	r3, r2
 80025ec:	005b      	lsls	r3, r3, #1
 80025ee:	4618      	mov	r0, r3
 80025f0:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 80025f4:	b2db      	uxtb	r3, r3
 80025f6:	9300      	str	r3, [sp, #0]
 80025f8:	230a      	movs	r3, #10
 80025fa:	220a      	movs	r2, #10
 80025fc:	2136      	movs	r1, #54	; 0x36
 80025fe:	f7ff fddb 	bl	80021b8 <DISP_FillRect>
  for(int i = 0; i < 16; i++)
 8002602:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 8002606:	3301      	adds	r3, #1
 8002608:	f8c7 3110 	str.w	r3, [r7, #272]	; 0x110
 800260c:	f8d7 3110 	ldr.w	r3, [r7, #272]	; 0x110
 8002610:	2b0f      	cmp	r3, #15
 8002612:	ddd1      	ble.n	80025b8 <main+0x8c>
  }

  DISP_TextForeColor(0x0f);
 8002614:	200f      	movs	r0, #15
 8002616:	f7ff fc23 	bl	8001e60 <DISP_TextForeColor>
  DISP_TextBackColor(0x00);
 800261a:	2000      	movs	r0, #0
 800261c:	f7ff fc30 	bl	8001e80 <DISP_TextBackColor>

  DISP_GotoXY(0, 0);
 8002620:	2100      	movs	r1, #0
 8002622:	2000      	movs	r0, #0
 8002624:	f7ff fc3c 	bl	8001ea0 <DISP_GotoXY>
  DISP_WriteString("SPI OLED 256x64 Demo");
 8002628:	4853      	ldr	r0, [pc, #332]	; (8002778 <main+0x24c>)
 800262a:	f7ff fc83 	bl	8001f34 <DISP_WriteString>

  for(int i = 0; i < DISP_GetRowPerDisp(); i++)
 800262e:	2300      	movs	r3, #0
 8002630:	f8c7 310c 	str.w	r3, [r7, #268]	; 0x10c
 8002634:	e018      	b.n	8002668 <main+0x13c>
  {
    DISP_GotoXY(DISP_GetCharPerRow() - 2, i);
 8002636:	f7ff fbe3 	bl	8001e00 <DISP_GetCharPerRow>
 800263a:	4603      	mov	r3, r0
 800263c:	3b02      	subs	r3, #2
 800263e:	f8d7 110c 	ldr.w	r1, [r7, #268]	; 0x10c
 8002642:	4618      	mov	r0, r3
 8002644:	f7ff fc2c 	bl	8001ea0 <DISP_GotoXY>
    sprintf(cbuf, "%02d", i);
 8002648:	1d3b      	adds	r3, r7, #4
 800264a:	f8d7 210c 	ldr.w	r2, [r7, #268]	; 0x10c
 800264e:	494b      	ldr	r1, [pc, #300]	; (800277c <main+0x250>)
 8002650:	4618      	mov	r0, r3
 8002652:	f000 fbad 	bl	8002db0 <sprintf>
    DISP_WriteString(cbuf);
 8002656:	1d3b      	adds	r3, r7, #4
 8002658:	4618      	mov	r0, r3
 800265a:	f7ff fc6b 	bl	8001f34 <DISP_WriteString>
  for(int i = 0; i < DISP_GetRowPerDisp(); i++)
 800265e:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8002662:	3301      	adds	r3, #1
 8002664:	f8c7 310c 	str.w	r3, [r7, #268]	; 0x10c
 8002668:	f7ff fbe2 	bl	8001e30 <DISP_GetRowPerDisp>
 800266c:	4602      	mov	r2, r0
 800266e:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8002672:	429a      	cmp	r2, r3
 8002674:	dcdf      	bgt.n	8002636 <main+0x10a>
  }

  OLED_1322_Refresh();
 8002676:	f7fe ff55 	bl	8001524 <OLED_1322_Refresh>

  /* Infinite loop */
  while (1)
  {
    if (CUR_TICKS > tmBtn)
 800267a:	4b41      	ldr	r3, [pc, #260]	; (8002780 <main+0x254>)
 800267c:	681a      	ldr	r2, [r3, #0]
 800267e:	f8d7 311c 	ldr.w	r3, [r7, #284]	; 0x11c
 8002682:	429a      	cmp	r2, r3
 8002684:	d918      	bls.n	80026b8 <main+0x18c>
    {
      tmBtn = CUR_TICKS + 10;
 8002686:	4b3e      	ldr	r3, [pc, #248]	; (8002780 <main+0x254>)
 8002688:	681b      	ldr	r3, [r3, #0]
 800268a:	330a      	adds	r3, #10
 800268c:	f8c7 311c 	str.w	r3, [r7, #284]	; 0x11c

      bbButton = GPIO_READ(GPIOC, 13);
 8002690:	4b33      	ldr	r3, [pc, #204]	; (8002760 <main+0x234>)
 8002692:	691b      	ldr	r3, [r3, #16]
 8002694:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8002698:	2b00      	cmp	r3, #0
 800269a:	bf14      	ite	ne
 800269c:	2301      	movne	r3, #1
 800269e:	2300      	moveq	r3, #0
 80026a0:	f887 3107 	strb.w	r3, [r7, #263]	; 0x107

      if (bbLastButton != bbButton)
 80026a4:	f897 2117 	ldrb.w	r2, [r7, #279]	; 0x117
 80026a8:	f897 3107 	ldrb.w	r3, [r7, #263]	; 0x107
 80026ac:	429a      	cmp	r2, r3
 80026ae:	d003      	beq.n	80026b8 <main+0x18c>
      {
        bbLastButton = bbButton;
 80026b0:	f897 3107 	ldrb.w	r3, [r7, #263]	; 0x107
 80026b4:	f887 3117 	strb.w	r3, [r7, #279]	; 0x117
        {
        }
      }
    }

    if (CUR_TICKS > tmAction)
 80026b8:	4b31      	ldr	r3, [pc, #196]	; (8002780 <main+0x254>)
 80026ba:	681a      	ldr	r2, [r3, #0]
 80026bc:	f8d7 3118 	ldr.w	r3, [r7, #280]	; 0x118
 80026c0:	429a      	cmp	r2, r3
 80026c2:	d90f      	bls.n	80026e4 <main+0x1b8>
    {
      tmAction = CUR_TICKS + intervalAction;
 80026c4:	4b2e      	ldr	r3, [pc, #184]	; (8002780 <main+0x254>)
 80026c6:	681a      	ldr	r2, [r3, #0]
 80026c8:	f8d7 3108 	ldr.w	r3, [r7, #264]	; 0x108
 80026cc:	4413      	add	r3, r2
 80026ce:	f8c7 3118 	str.w	r3, [r7, #280]	; 0x118

      putchar('*');
 80026d2:	4b24      	ldr	r3, [pc, #144]	; (8002764 <main+0x238>)
 80026d4:	6818      	ldr	r0, [r3, #0]
 80026d6:	4b23      	ldr	r3, [pc, #140]	; (8002764 <main+0x238>)
 80026d8:	681b      	ldr	r3, [r3, #0]
 80026da:	689b      	ldr	r3, [r3, #8]
 80026dc:	461a      	mov	r2, r3
 80026de:	212a      	movs	r1, #42	; 0x2a
 80026e0:	f7ff fef6 	bl	80024d0 <__sputc_r>
    }

    if (isCharRecv())
 80026e4:	f7ff fa70 	bl	8001bc8 <isCharRecv>
 80026e8:	4603      	mov	r3, r0
 80026ea:	2b00      	cmp	r3, #0
 80026ec:	d0c5      	beq.n	800267a <main+0x14e>
    {
      char c = getchar();
 80026ee:	4b1d      	ldr	r3, [pc, #116]	; (8002764 <main+0x238>)
 80026f0:	681b      	ldr	r3, [r3, #0]
 80026f2:	685b      	ldr	r3, [r3, #4]
 80026f4:	685a      	ldr	r2, [r3, #4]
 80026f6:	3a01      	subs	r2, #1
 80026f8:	605a      	str	r2, [r3, #4]
 80026fa:	685b      	ldr	r3, [r3, #4]
 80026fc:	2b00      	cmp	r3, #0
 80026fe:	da0b      	bge.n	8002718 <main+0x1ec>
 8002700:	4b18      	ldr	r3, [pc, #96]	; (8002764 <main+0x238>)
 8002702:	681a      	ldr	r2, [r3, #0]
 8002704:	4b17      	ldr	r3, [pc, #92]	; (8002764 <main+0x238>)
 8002706:	681b      	ldr	r3, [r3, #0]
 8002708:	685b      	ldr	r3, [r3, #4]
 800270a:	4619      	mov	r1, r3
 800270c:	4610      	mov	r0, r2
 800270e:	f000 fa57 	bl	8002bc0 <__srget_r>
 8002712:	4603      	mov	r3, r0
 8002714:	b2db      	uxtb	r3, r3
 8002716:	e006      	b.n	8002726 <main+0x1fa>
 8002718:	4b12      	ldr	r3, [pc, #72]	; (8002764 <main+0x238>)
 800271a:	681b      	ldr	r3, [r3, #0]
 800271c:	685a      	ldr	r2, [r3, #4]
 800271e:	6813      	ldr	r3, [r2, #0]
 8002720:	1c59      	adds	r1, r3, #1
 8002722:	6011      	str	r1, [r2, #0]
 8002724:	781b      	ldrb	r3, [r3, #0]
 8002726:	f887 3106 	strb.w	r3, [r7, #262]	; 0x106
      switch(c)
      {
        default:
          if ((c >= 0) && (c <= 127))
 800272a:	f997 3106 	ldrsb.w	r3, [r7, #262]	; 0x106
 800272e:	2b00      	cmp	r3, #0
 8002730:	db0a      	blt.n	8002748 <main+0x21c>
          {
            putchar(c);
 8002732:	4b0c      	ldr	r3, [pc, #48]	; (8002764 <main+0x238>)
 8002734:	6818      	ldr	r0, [r3, #0]
 8002736:	f897 1106 	ldrb.w	r1, [r7, #262]	; 0x106
 800273a:	4b0a      	ldr	r3, [pc, #40]	; (8002764 <main+0x238>)
 800273c:	681b      	ldr	r3, [r3, #0]
 800273e:	689b      	ldr	r3, [r3, #8]
 8002740:	461a      	mov	r2, r3
 8002742:	f7ff fec5 	bl	80024d0 <__sputc_r>
          }
          else
            putchar('?');
          break;
 8002746:	e008      	b.n	800275a <main+0x22e>
            putchar('?');
 8002748:	4b06      	ldr	r3, [pc, #24]	; (8002764 <main+0x238>)
 800274a:	6818      	ldr	r0, [r3, #0]
 800274c:	4b05      	ldr	r3, [pc, #20]	; (8002764 <main+0x238>)
 800274e:	681b      	ldr	r3, [r3, #0]
 8002750:	689b      	ldr	r3, [r3, #8]
 8002752:	461a      	mov	r2, r3
 8002754:	213f      	movs	r1, #63	; 0x3f
 8002756:	f7ff febb 	bl	80024d0 <__sputc_r>
          break;
 800275a:	bf00      	nop
    if (CUR_TICKS > tmBtn)
 800275c:	e78d      	b.n	800267a <main+0x14e>
 800275e:	bf00      	nop
 8002760:	40020800 	.word	0x40020800
 8002764:	20000010 	.word	0x20000010
 8002768:	08007aa8 	.word	0x08007aa8
 800276c:	2000000c 	.word	0x2000000c
 8002770:	08007adc 	.word	0x08007adc
 8002774:	08007aec 	.word	0x08007aec
 8002778:	08007b00 	.word	0x08007b00
 800277c:	08007b18 	.word	0x08007b18
 8002780:	2000269c 	.word	0x2000269c

08002784 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack    		 /* set stack pointer */
 8002784:	f8df d034 	ldr.w	sp, [pc, #52]	; 80027bc <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8002788:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800278a:	e003      	b.n	8002794 <LoopCopyDataInit>

0800278c <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 800278c:	4b0c      	ldr	r3, [pc, #48]	; (80027c0 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 800278e:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8002790:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8002792:	3104      	adds	r1, #4

08002794 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8002794:	480b      	ldr	r0, [pc, #44]	; (80027c4 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8002796:	4b0c      	ldr	r3, [pc, #48]	; (80027c8 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8002798:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 800279a:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 800279c:	d3f6      	bcc.n	800278c <CopyDataInit>
  ldr  r2, =_sbss
 800279e:	4a0b      	ldr	r2, [pc, #44]	; (80027cc <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80027a0:	e002      	b.n	80027a8 <LoopFillZerobss>

080027a2 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80027a2:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80027a4:	f842 3b04 	str.w	r3, [r2], #4

080027a8 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80027a8:	4b09      	ldr	r3, [pc, #36]	; (80027d0 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80027aa:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80027ac:	d3f9      	bcc.n	80027a2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80027ae:	f000 f8b3 	bl	8002918 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80027b2:	f000 f961 	bl	8002a78 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80027b6:	f7ff feb9 	bl	800252c <main>
  bx  lr    
 80027ba:	4770      	bx	lr
  ldr   sp, =_estack    		 /* set stack pointer */
 80027bc:	20020000 	.word	0x20020000
  ldr  r3, =_sidata
 80027c0:	08008728 	.word	0x08008728
  ldr  r0, =_sdata
 80027c4:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80027c8:	20000680 	.word	0x20000680
  ldr  r2, =_sbss
 80027cc:	20000680 	.word	0x20000680
  ldr  r3, = _ebss
 80027d0:	20002708 	.word	0x20002708

080027d4 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80027d4:	e7fe      	b.n	80027d4 <ADC_IRQHandler>
	...

080027d8 <_write>:

int usart2_putc(int ch);
int usart2_getc(void);

int _write(int32_t file, uint8_t *ptr, int32_t len)
{
 80027d8:	b580      	push	{r7, lr}
 80027da:	b086      	sub	sp, #24
 80027dc:	af00      	add	r7, sp, #0
 80027de:	60f8      	str	r0, [r7, #12]
 80027e0:	60b9      	str	r1, [r7, #8]
 80027e2:	607a      	str	r2, [r7, #4]
  int32_t x = len;
 80027e4:	687b      	ldr	r3, [r7, #4]
 80027e6:	617b      	str	r3, [r7, #20]
  while(x)
 80027e8:	e00a      	b.n	8002800 <_write+0x28>
  {
    usart2_putc(*ptr);
 80027ea:	68bb      	ldr	r3, [r7, #8]
 80027ec:	781b      	ldrb	r3, [r3, #0]
 80027ee:	4618      	mov	r0, r3
 80027f0:	f7ff f9ac 	bl	8001b4c <usart2_putc>
    ptr++;
 80027f4:	68bb      	ldr	r3, [r7, #8]
 80027f6:	3301      	adds	r3, #1
 80027f8:	60bb      	str	r3, [r7, #8]
    x--;
 80027fa:	697b      	ldr	r3, [r7, #20]
 80027fc:	3b01      	subs	r3, #1
 80027fe:	617b      	str	r3, [r7, #20]
  while(x)
 8002800:	697b      	ldr	r3, [r7, #20]
 8002802:	2b00      	cmp	r3, #0
 8002804:	d1f1      	bne.n	80027ea <_write+0x12>
  }
  errno = 0;   // OK
 8002806:	4b04      	ldr	r3, [pc, #16]	; (8002818 <_write+0x40>)
 8002808:	2200      	movs	r2, #0
 800280a:	601a      	str	r2, [r3, #0]
  return len;
 800280c:	687b      	ldr	r3, [r7, #4]
}
 800280e:	4618      	mov	r0, r3
 8002810:	3718      	adds	r7, #24
 8002812:	46bd      	mov	sp, r7
 8002814:	bd80      	pop	{r7, pc}
 8002816:	bf00      	nop
 8002818:	200026f8 	.word	0x200026f8

0800281c <_read>:

int _read(int32_t file, uint8_t *ptr, int32_t len)
{
 800281c:	b580      	push	{r7, lr}
 800281e:	b084      	sub	sp, #16
 8002820:	af00      	add	r7, sp, #0
 8002822:	60f8      	str	r0, [r7, #12]
 8002824:	60b9      	str	r1, [r7, #8]
 8002826:	607a      	str	r2, [r7, #4]
  *ptr = usart2_getc();
 8002828:	f7ff f9bc 	bl	8001ba4 <usart2_getc>
 800282c:	4603      	mov	r3, r0
 800282e:	b2da      	uxtb	r2, r3
 8002830:	68bb      	ldr	r3, [r7, #8]
 8002832:	701a      	strb	r2, [r3, #0]
  errno = 0;   // OK
 8002834:	4b03      	ldr	r3, [pc, #12]	; (8002844 <_read+0x28>)
 8002836:	2200      	movs	r2, #0
 8002838:	601a      	str	r2, [r3, #0]
  return 1;
 800283a:	2301      	movs	r3, #1
}
 800283c:	4618      	mov	r0, r3
 800283e:	3710      	adds	r7, #16
 8002840:	46bd      	mov	sp, r7
 8002842:	bd80      	pop	{r7, pc}
 8002844:	200026f8 	.word	0x200026f8

08002848 <_sbrk>:

void * _sbrk(int32_t incr)
{
 8002848:	b480      	push	{r7}
 800284a:	b085      	sub	sp, #20
 800284c:	af00      	add	r7, sp, #0
 800284e:	6078      	str	r0, [r7, #4]
	extern char   end; /* Set by linker.  */
	static char * heap_end;
	char *        prev_heap_end;

	if (heap_end == 0) {
 8002850:	4b0b      	ldr	r3, [pc, #44]	; (8002880 <_sbrk+0x38>)
 8002852:	681b      	ldr	r3, [r3, #0]
 8002854:	2b00      	cmp	r3, #0
 8002856:	d102      	bne.n	800285e <_sbrk+0x16>
		heap_end = & end;
 8002858:	4b09      	ldr	r3, [pc, #36]	; (8002880 <_sbrk+0x38>)
 800285a:	4a0a      	ldr	r2, [pc, #40]	; (8002884 <_sbrk+0x3c>)
 800285c:	601a      	str	r2, [r3, #0]
	}

	prev_heap_end = heap_end;
 800285e:	4b08      	ldr	r3, [pc, #32]	; (8002880 <_sbrk+0x38>)
 8002860:	681b      	ldr	r3, [r3, #0]
 8002862:	60fb      	str	r3, [r7, #12]
	heap_end += incr;
 8002864:	4b06      	ldr	r3, [pc, #24]	; (8002880 <_sbrk+0x38>)
 8002866:	681a      	ldr	r2, [r3, #0]
 8002868:	687b      	ldr	r3, [r7, #4]
 800286a:	4413      	add	r3, r2
 800286c:	4a04      	ldr	r2, [pc, #16]	; (8002880 <_sbrk+0x38>)
 800286e:	6013      	str	r3, [r2, #0]

	return (void *) prev_heap_end;
 8002870:	68fb      	ldr	r3, [r7, #12]
}
 8002872:	4618      	mov	r0, r3
 8002874:	3714      	adds	r7, #20
 8002876:	46bd      	mov	sp, r7
 8002878:	f85d 7b04 	ldr.w	r7, [sp], #4
 800287c:	4770      	bx	lr
 800287e:	bf00      	nop
 8002880:	200026c0 	.word	0x200026c0
 8002884:	20002708 	.word	0x20002708

08002888 <_close>:

int _close(int32_t file)
{
 8002888:	b480      	push	{r7}
 800288a:	b083      	sub	sp, #12
 800288c:	af00      	add	r7, sp, #0
 800288e:	6078      	str	r0, [r7, #4]
	errno = ENOSYS;
 8002890:	4b05      	ldr	r3, [pc, #20]	; (80028a8 <_close+0x20>)
 8002892:	2258      	movs	r2, #88	; 0x58
 8002894:	601a      	str	r2, [r3, #0]
	return -1;
 8002896:	f04f 33ff 	mov.w	r3, #4294967295
}
 800289a:	4618      	mov	r0, r3
 800289c:	370c      	adds	r7, #12
 800289e:	46bd      	mov	sp, r7
 80028a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028a4:	4770      	bx	lr
 80028a6:	bf00      	nop
 80028a8:	200026f8 	.word	0x200026f8

080028ac <_fstat>:


int _fstat(int32_t file, struct stat *st)
{
 80028ac:	b480      	push	{r7}
 80028ae:	b083      	sub	sp, #12
 80028b0:	af00      	add	r7, sp, #0
 80028b2:	6078      	str	r0, [r7, #4]
 80028b4:	6039      	str	r1, [r7, #0]
	errno = ENOSYS;
 80028b6:	4b05      	ldr	r3, [pc, #20]	; (80028cc <_fstat+0x20>)
 80028b8:	2258      	movs	r2, #88	; 0x58
 80028ba:	601a      	str	r2, [r3, #0]
	return -1;
 80028bc:	f04f 33ff 	mov.w	r3, #4294967295
}
 80028c0:	4618      	mov	r0, r3
 80028c2:	370c      	adds	r7, #12
 80028c4:	46bd      	mov	sp, r7
 80028c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028ca:	4770      	bx	lr
 80028cc:	200026f8 	.word	0x200026f8

080028d0 <_isatty>:

int _isatty(int32_t file)
{
 80028d0:	b480      	push	{r7}
 80028d2:	b083      	sub	sp, #12
 80028d4:	af00      	add	r7, sp, #0
 80028d6:	6078      	str	r0, [r7, #4]
	errno = ENOSYS;
 80028d8:	4b04      	ldr	r3, [pc, #16]	; (80028ec <_isatty+0x1c>)
 80028da:	2258      	movs	r2, #88	; 0x58
 80028dc:	601a      	str	r2, [r3, #0]
	return 0;
 80028de:	2300      	movs	r3, #0
}
 80028e0:	4618      	mov	r0, r3
 80028e2:	370c      	adds	r7, #12
 80028e4:	46bd      	mov	sp, r7
 80028e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028ea:	4770      	bx	lr
 80028ec:	200026f8 	.word	0x200026f8

080028f0 <_lseek>:

int _lseek(int32_t file, int32_t ptr, int32_t dir)
{
 80028f0:	b480      	push	{r7}
 80028f2:	b085      	sub	sp, #20
 80028f4:	af00      	add	r7, sp, #0
 80028f6:	60f8      	str	r0, [r7, #12]
 80028f8:	60b9      	str	r1, [r7, #8]
 80028fa:	607a      	str	r2, [r7, #4]
	errno = ENOSYS;
 80028fc:	4b05      	ldr	r3, [pc, #20]	; (8002914 <_lseek+0x24>)
 80028fe:	2258      	movs	r2, #88	; 0x58
 8002900:	601a      	str	r2, [r3, #0]
	return -1;
 8002902:	f04f 33ff 	mov.w	r3, #4294967295
}
 8002906:	4618      	mov	r0, r3
 8002908:	3714      	adds	r7, #20
 800290a:	46bd      	mov	sp, r7
 800290c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002910:	4770      	bx	lr
 8002912:	bf00      	nop
 8002914:	200026f8 	.word	0x200026f8

08002918 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8002918:	b480      	push	{r7}
 800291a:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800291c:	4a16      	ldr	r2, [pc, #88]	; (8002978 <SystemInit+0x60>)
 800291e:	4b16      	ldr	r3, [pc, #88]	; (8002978 <SystemInit+0x60>)
 8002920:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002924:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8002928:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
  #endif
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;
 800292c:	4a13      	ldr	r2, [pc, #76]	; (800297c <SystemInit+0x64>)
 800292e:	4b13      	ldr	r3, [pc, #76]	; (800297c <SystemInit+0x64>)
 8002930:	681b      	ldr	r3, [r3, #0]
 8002932:	f043 0301 	orr.w	r3, r3, #1
 8002936:	6013      	str	r3, [r2, #0]

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
 8002938:	4b10      	ldr	r3, [pc, #64]	; (800297c <SystemInit+0x64>)
 800293a:	2200      	movs	r2, #0
 800293c:	609a      	str	r2, [r3, #8]

  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xFEF6FFFF;
 800293e:	4a0f      	ldr	r2, [pc, #60]	; (800297c <SystemInit+0x64>)
 8002940:	4b0e      	ldr	r3, [pc, #56]	; (800297c <SystemInit+0x64>)
 8002942:	681b      	ldr	r3, [r3, #0]
 8002944:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 8002948:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800294c:	6013      	str	r3, [r2, #0]

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x24003010;
 800294e:	4b0b      	ldr	r3, [pc, #44]	; (800297c <SystemInit+0x64>)
 8002950:	4a0b      	ldr	r2, [pc, #44]	; (8002980 <SystemInit+0x68>)
 8002952:	605a      	str	r2, [r3, #4]

  /* Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFF;
 8002954:	4a09      	ldr	r2, [pc, #36]	; (800297c <SystemInit+0x64>)
 8002956:	4b09      	ldr	r3, [pc, #36]	; (800297c <SystemInit+0x64>)
 8002958:	681b      	ldr	r3, [r3, #0]
 800295a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800295e:	6013      	str	r3, [r2, #0]

  /* Disable all interrupts */
  RCC->CIR = 0x00000000;
 8002960:	4b06      	ldr	r3, [pc, #24]	; (800297c <SystemInit+0x64>)
 8002962:	2200      	movs	r2, #0
 8002964:	60da      	str	r2, [r3, #12]

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8002966:	4b04      	ldr	r3, [pc, #16]	; (8002978 <SystemInit+0x60>)
 8002968:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800296c:	609a      	str	r2, [r3, #8]
#endif
}
 800296e:	bf00      	nop
 8002970:	46bd      	mov	sp, r7
 8002972:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002976:	4770      	bx	lr
 8002978:	e000ed00 	.word	0xe000ed00
 800297c:	40023800 	.word	0x40023800
 8002980:	24003010 	.word	0x24003010

08002984 <SystemCoreClockUpdate>:
  *     
  * @param  None
  * @retval None
  */
void SystemCoreClockUpdate(void)
{
 8002984:	b480      	push	{r7}
 8002986:	b087      	sub	sp, #28
 8002988:	af00      	add	r7, sp, #0
  uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 800298a:	2300      	movs	r3, #0
 800298c:	613b      	str	r3, [r7, #16]
 800298e:	2300      	movs	r3, #0
 8002990:	617b      	str	r3, [r7, #20]
 8002992:	2302      	movs	r3, #2
 8002994:	60fb      	str	r3, [r7, #12]
 8002996:	2300      	movs	r3, #0
 8002998:	60bb      	str	r3, [r7, #8]
 800299a:	2302      	movs	r3, #2
 800299c:	607b      	str	r3, [r7, #4]
  
  /* Get SYSCLK source -------------------------------------------------------*/
  tmp = RCC->CFGR & RCC_CFGR_SWS;
 800299e:	4b31      	ldr	r3, [pc, #196]	; (8002a64 <SystemCoreClockUpdate+0xe0>)
 80029a0:	689b      	ldr	r3, [r3, #8]
 80029a2:	f003 030c 	and.w	r3, r3, #12
 80029a6:	613b      	str	r3, [r7, #16]

  switch (tmp)
 80029a8:	693b      	ldr	r3, [r7, #16]
 80029aa:	2b04      	cmp	r3, #4
 80029ac:	d007      	beq.n	80029be <SystemCoreClockUpdate+0x3a>
 80029ae:	2b08      	cmp	r3, #8
 80029b0:	d009      	beq.n	80029c6 <SystemCoreClockUpdate+0x42>
 80029b2:	2b00      	cmp	r3, #0
 80029b4:	d13d      	bne.n	8002a32 <SystemCoreClockUpdate+0xae>
  {
    case 0x00:  /* HSI used as system clock source */
      SystemCoreClock = HSI_VALUE;
 80029b6:	4b2c      	ldr	r3, [pc, #176]	; (8002a68 <SystemCoreClockUpdate+0xe4>)
 80029b8:	4a2c      	ldr	r2, [pc, #176]	; (8002a6c <SystemCoreClockUpdate+0xe8>)
 80029ba:	601a      	str	r2, [r3, #0]
      break;
 80029bc:	e03d      	b.n	8002a3a <SystemCoreClockUpdate+0xb6>
    case 0x04:  /* HSE used as system clock source */
      SystemCoreClock = HSE_VALUE;
 80029be:	4b2a      	ldr	r3, [pc, #168]	; (8002a68 <SystemCoreClockUpdate+0xe4>)
 80029c0:	4a2b      	ldr	r2, [pc, #172]	; (8002a70 <SystemCoreClockUpdate+0xec>)
 80029c2:	601a      	str	r2, [r3, #0]
      break;
 80029c4:	e039      	b.n	8002a3a <SystemCoreClockUpdate+0xb6>
    case 0x08:  /* PLL used as system clock source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
         SYSCLK = PLL_VCO / PLL_P
         */    
      pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 80029c6:	4b27      	ldr	r3, [pc, #156]	; (8002a64 <SystemCoreClockUpdate+0xe0>)
 80029c8:	685b      	ldr	r3, [r3, #4]
 80029ca:	0d9b      	lsrs	r3, r3, #22
 80029cc:	f003 0301 	and.w	r3, r3, #1
 80029d0:	60bb      	str	r3, [r7, #8]
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80029d2:	4b24      	ldr	r3, [pc, #144]	; (8002a64 <SystemCoreClockUpdate+0xe0>)
 80029d4:	685b      	ldr	r3, [r3, #4]
 80029d6:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80029da:	607b      	str	r3, [r7, #4]
      
      if (pllsource != 0)
 80029dc:	68bb      	ldr	r3, [r7, #8]
 80029de:	2b00      	cmp	r3, #0
 80029e0:	d00c      	beq.n	80029fc <SystemCoreClockUpdate+0x78>
      {
        /* HSE used as PLL clock source */
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 80029e2:	4a23      	ldr	r2, [pc, #140]	; (8002a70 <SystemCoreClockUpdate+0xec>)
 80029e4:	687b      	ldr	r3, [r7, #4]
 80029e6:	fbb2 f3f3 	udiv	r3, r2, r3
 80029ea:	4a1e      	ldr	r2, [pc, #120]	; (8002a64 <SystemCoreClockUpdate+0xe0>)
 80029ec:	6852      	ldr	r2, [r2, #4]
 80029ee:	0992      	lsrs	r2, r2, #6
 80029f0:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80029f4:	fb02 f303 	mul.w	r3, r2, r3
 80029f8:	617b      	str	r3, [r7, #20]
 80029fa:	e00b      	b.n	8002a14 <SystemCoreClockUpdate+0x90>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 80029fc:	4a1b      	ldr	r2, [pc, #108]	; (8002a6c <SystemCoreClockUpdate+0xe8>)
 80029fe:	687b      	ldr	r3, [r7, #4]
 8002a00:	fbb2 f3f3 	udiv	r3, r2, r3
 8002a04:	4a17      	ldr	r2, [pc, #92]	; (8002a64 <SystemCoreClockUpdate+0xe0>)
 8002a06:	6852      	ldr	r2, [r2, #4]
 8002a08:	0992      	lsrs	r2, r2, #6
 8002a0a:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8002a0e:	fb02 f303 	mul.w	r3, r2, r3
 8002a12:	617b      	str	r3, [r7, #20]
      }

      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 8002a14:	4b13      	ldr	r3, [pc, #76]	; (8002a64 <SystemCoreClockUpdate+0xe0>)
 8002a16:	685b      	ldr	r3, [r3, #4]
 8002a18:	0c1b      	lsrs	r3, r3, #16
 8002a1a:	f003 0303 	and.w	r3, r3, #3
 8002a1e:	3301      	adds	r3, #1
 8002a20:	005b      	lsls	r3, r3, #1
 8002a22:	60fb      	str	r3, [r7, #12]
      SystemCoreClock = pllvco/pllp;
 8002a24:	697a      	ldr	r2, [r7, #20]
 8002a26:	68fb      	ldr	r3, [r7, #12]
 8002a28:	fbb2 f3f3 	udiv	r3, r2, r3
 8002a2c:	4a0e      	ldr	r2, [pc, #56]	; (8002a68 <SystemCoreClockUpdate+0xe4>)
 8002a2e:	6013      	str	r3, [r2, #0]
      break;
 8002a30:	e003      	b.n	8002a3a <SystemCoreClockUpdate+0xb6>
    default:
      SystemCoreClock = HSI_VALUE;
 8002a32:	4b0d      	ldr	r3, [pc, #52]	; (8002a68 <SystemCoreClockUpdate+0xe4>)
 8002a34:	4a0d      	ldr	r2, [pc, #52]	; (8002a6c <SystemCoreClockUpdate+0xe8>)
 8002a36:	601a      	str	r2, [r3, #0]
      break;
 8002a38:	bf00      	nop
  }
  /* Compute HCLK frequency --------------------------------------------------*/
  /* Get HCLK prescaler */
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 8002a3a:	4b0a      	ldr	r3, [pc, #40]	; (8002a64 <SystemCoreClockUpdate+0xe0>)
 8002a3c:	689b      	ldr	r3, [r3, #8]
 8002a3e:	091b      	lsrs	r3, r3, #4
 8002a40:	f003 030f 	and.w	r3, r3, #15
 8002a44:	4a0b      	ldr	r2, [pc, #44]	; (8002a74 <SystemCoreClockUpdate+0xf0>)
 8002a46:	5cd3      	ldrb	r3, [r2, r3]
 8002a48:	613b      	str	r3, [r7, #16]
  /* HCLK frequency */
  SystemCoreClock >>= tmp;
 8002a4a:	4b07      	ldr	r3, [pc, #28]	; (8002a68 <SystemCoreClockUpdate+0xe4>)
 8002a4c:	681a      	ldr	r2, [r3, #0]
 8002a4e:	693b      	ldr	r3, [r7, #16]
 8002a50:	fa22 f303 	lsr.w	r3, r2, r3
 8002a54:	4a04      	ldr	r2, [pc, #16]	; (8002a68 <SystemCoreClockUpdate+0xe4>)
 8002a56:	6013      	str	r3, [r2, #0]
}
 8002a58:	bf00      	nop
 8002a5a:	371c      	adds	r7, #28
 8002a5c:	46bd      	mov	sp, r7
 8002a5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a62:	4770      	bx	lr
 8002a64:	40023800 	.word	0x40023800
 8002a68:	2000000c 	.word	0x2000000c
 8002a6c:	00f42400 	.word	0x00f42400
 8002a70:	007a1200 	.word	0x007a1200
 8002a74:	08008414 	.word	0x08008414

08002a78 <__libc_init_array>:
 8002a78:	b570      	push	{r4, r5, r6, lr}
 8002a7a:	4e0d      	ldr	r6, [pc, #52]	; (8002ab0 <__libc_init_array+0x38>)
 8002a7c:	4c0d      	ldr	r4, [pc, #52]	; (8002ab4 <__libc_init_array+0x3c>)
 8002a7e:	1ba4      	subs	r4, r4, r6
 8002a80:	10a4      	asrs	r4, r4, #2
 8002a82:	2500      	movs	r5, #0
 8002a84:	42a5      	cmp	r5, r4
 8002a86:	d109      	bne.n	8002a9c <__libc_init_array+0x24>
 8002a88:	4e0b      	ldr	r6, [pc, #44]	; (8002ab8 <__libc_init_array+0x40>)
 8002a8a:	4c0c      	ldr	r4, [pc, #48]	; (8002abc <__libc_init_array+0x44>)
 8002a8c:	f004 fffe 	bl	8007a8c <_init>
 8002a90:	1ba4      	subs	r4, r4, r6
 8002a92:	10a4      	asrs	r4, r4, #2
 8002a94:	2500      	movs	r5, #0
 8002a96:	42a5      	cmp	r5, r4
 8002a98:	d105      	bne.n	8002aa6 <__libc_init_array+0x2e>
 8002a9a:	bd70      	pop	{r4, r5, r6, pc}
 8002a9c:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8002aa0:	4798      	blx	r3
 8002aa2:	3501      	adds	r5, #1
 8002aa4:	e7ee      	b.n	8002a84 <__libc_init_array+0xc>
 8002aa6:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8002aaa:	4798      	blx	r3
 8002aac:	3501      	adds	r5, #1
 8002aae:	e7f2      	b.n	8002a96 <__libc_init_array+0x1e>
 8002ab0:	08008720 	.word	0x08008720
 8002ab4:	08008720 	.word	0x08008720
 8002ab8:	08008720 	.word	0x08008720
 8002abc:	08008724 	.word	0x08008724

08002ac0 <printf>:
 8002ac0:	b40f      	push	{r0, r1, r2, r3}
 8002ac2:	4b0a      	ldr	r3, [pc, #40]	; (8002aec <printf+0x2c>)
 8002ac4:	b513      	push	{r0, r1, r4, lr}
 8002ac6:	681c      	ldr	r4, [r3, #0]
 8002ac8:	b124      	cbz	r4, 8002ad4 <printf+0x14>
 8002aca:	69a3      	ldr	r3, [r4, #24]
 8002acc:	b913      	cbnz	r3, 8002ad4 <printf+0x14>
 8002ace:	4620      	mov	r0, r4
 8002ad0:	f003 fa40 	bl	8005f54 <__sinit>
 8002ad4:	ab05      	add	r3, sp, #20
 8002ad6:	9a04      	ldr	r2, [sp, #16]
 8002ad8:	68a1      	ldr	r1, [r4, #8]
 8002ada:	9301      	str	r3, [sp, #4]
 8002adc:	4620      	mov	r0, r4
 8002ade:	f001 f95f 	bl	8003da0 <_vfprintf_r>
 8002ae2:	b002      	add	sp, #8
 8002ae4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002ae8:	b004      	add	sp, #16
 8002aea:	4770      	bx	lr
 8002aec:	20000010 	.word	0x20000010

08002af0 <_puts_r>:
 8002af0:	b530      	push	{r4, r5, lr}
 8002af2:	4605      	mov	r5, r0
 8002af4:	b089      	sub	sp, #36	; 0x24
 8002af6:	4608      	mov	r0, r1
 8002af8:	460c      	mov	r4, r1
 8002afa:	f7fd fb71 	bl	80001e0 <strlen>
 8002afe:	4b28      	ldr	r3, [pc, #160]	; (8002ba0 <_puts_r+0xb0>)
 8002b00:	9306      	str	r3, [sp, #24]
 8002b02:	2301      	movs	r3, #1
 8002b04:	9005      	str	r0, [sp, #20]
 8002b06:	9307      	str	r3, [sp, #28]
 8002b08:	4418      	add	r0, r3
 8002b0a:	ab04      	add	r3, sp, #16
 8002b0c:	9301      	str	r3, [sp, #4]
 8002b0e:	2302      	movs	r3, #2
 8002b10:	9404      	str	r4, [sp, #16]
 8002b12:	9003      	str	r0, [sp, #12]
 8002b14:	9302      	str	r3, [sp, #8]
 8002b16:	b125      	cbz	r5, 8002b22 <_puts_r+0x32>
 8002b18:	69ab      	ldr	r3, [r5, #24]
 8002b1a:	b913      	cbnz	r3, 8002b22 <_puts_r+0x32>
 8002b1c:	4628      	mov	r0, r5
 8002b1e:	f003 fa19 	bl	8005f54 <__sinit>
 8002b22:	69ab      	ldr	r3, [r5, #24]
 8002b24:	68ac      	ldr	r4, [r5, #8]
 8002b26:	b913      	cbnz	r3, 8002b2e <_puts_r+0x3e>
 8002b28:	4628      	mov	r0, r5
 8002b2a:	f003 fa13 	bl	8005f54 <__sinit>
 8002b2e:	4b1d      	ldr	r3, [pc, #116]	; (8002ba4 <_puts_r+0xb4>)
 8002b30:	429c      	cmp	r4, r3
 8002b32:	d12a      	bne.n	8002b8a <_puts_r+0x9a>
 8002b34:	686c      	ldr	r4, [r5, #4]
 8002b36:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8002b38:	07db      	lsls	r3, r3, #31
 8002b3a:	d405      	bmi.n	8002b48 <_puts_r+0x58>
 8002b3c:	89a3      	ldrh	r3, [r4, #12]
 8002b3e:	0598      	lsls	r0, r3, #22
 8002b40:	d402      	bmi.n	8002b48 <_puts_r+0x58>
 8002b42:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8002b44:	f003 fd30 	bl	80065a8 <__retarget_lock_acquire_recursive>
 8002b48:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8002b4c:	0499      	lsls	r1, r3, #18
 8002b4e:	d406      	bmi.n	8002b5e <_puts_r+0x6e>
 8002b50:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8002b54:	81a3      	strh	r3, [r4, #12]
 8002b56:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8002b58:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8002b5c:	6663      	str	r3, [r4, #100]	; 0x64
 8002b5e:	4628      	mov	r0, r5
 8002b60:	aa01      	add	r2, sp, #4
 8002b62:	4621      	mov	r1, r4
 8002b64:	f003 fb88 	bl	8006278 <__sfvwrite_r>
 8002b68:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8002b6a:	2800      	cmp	r0, #0
 8002b6c:	bf14      	ite	ne
 8002b6e:	f04f 35ff 	movne.w	r5, #4294967295
 8002b72:	250a      	moveq	r5, #10
 8002b74:	07da      	lsls	r2, r3, #31
 8002b76:	d405      	bmi.n	8002b84 <_puts_r+0x94>
 8002b78:	89a3      	ldrh	r3, [r4, #12]
 8002b7a:	059b      	lsls	r3, r3, #22
 8002b7c:	d402      	bmi.n	8002b84 <_puts_r+0x94>
 8002b7e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8002b80:	f003 fd13 	bl	80065aa <__retarget_lock_release_recursive>
 8002b84:	4628      	mov	r0, r5
 8002b86:	b009      	add	sp, #36	; 0x24
 8002b88:	bd30      	pop	{r4, r5, pc}
 8002b8a:	4b07      	ldr	r3, [pc, #28]	; (8002ba8 <_puts_r+0xb8>)
 8002b8c:	429c      	cmp	r4, r3
 8002b8e:	d101      	bne.n	8002b94 <_puts_r+0xa4>
 8002b90:	68ac      	ldr	r4, [r5, #8]
 8002b92:	e7d0      	b.n	8002b36 <_puts_r+0x46>
 8002b94:	4b05      	ldr	r3, [pc, #20]	; (8002bac <_puts_r+0xbc>)
 8002b96:	429c      	cmp	r4, r3
 8002b98:	bf08      	it	eq
 8002b9a:	68ec      	ldreq	r4, [r5, #12]
 8002b9c:	e7cb      	b.n	8002b36 <_puts_r+0x46>
 8002b9e:	bf00      	nop
 8002ba0:	08008428 	.word	0x08008428
 8002ba4:	080084cc 	.word	0x080084cc
 8002ba8:	080084ec 	.word	0x080084ec
 8002bac:	080084ac 	.word	0x080084ac

08002bb0 <puts>:
 8002bb0:	4b02      	ldr	r3, [pc, #8]	; (8002bbc <puts+0xc>)
 8002bb2:	4601      	mov	r1, r0
 8002bb4:	6818      	ldr	r0, [r3, #0]
 8002bb6:	f7ff bf9b 	b.w	8002af0 <_puts_r>
 8002bba:	bf00      	nop
 8002bbc:	20000010 	.word	0x20000010

08002bc0 <__srget_r>:
 8002bc0:	b538      	push	{r3, r4, r5, lr}
 8002bc2:	460c      	mov	r4, r1
 8002bc4:	4605      	mov	r5, r0
 8002bc6:	b118      	cbz	r0, 8002bd0 <__srget_r+0x10>
 8002bc8:	6983      	ldr	r3, [r0, #24]
 8002bca:	b90b      	cbnz	r3, 8002bd0 <__srget_r+0x10>
 8002bcc:	f003 f9c2 	bl	8005f54 <__sinit>
 8002bd0:	4b0e      	ldr	r3, [pc, #56]	; (8002c0c <__srget_r+0x4c>)
 8002bd2:	429c      	cmp	r4, r3
 8002bd4:	d10d      	bne.n	8002bf2 <__srget_r+0x32>
 8002bd6:	686c      	ldr	r4, [r5, #4]
 8002bd8:	4621      	mov	r1, r4
 8002bda:	4628      	mov	r0, r5
 8002bdc:	f004 fbfc 	bl	80073d8 <__srefill_r>
 8002be0:	b988      	cbnz	r0, 8002c06 <__srget_r+0x46>
 8002be2:	6863      	ldr	r3, [r4, #4]
 8002be4:	3b01      	subs	r3, #1
 8002be6:	6063      	str	r3, [r4, #4]
 8002be8:	6823      	ldr	r3, [r4, #0]
 8002bea:	1c5a      	adds	r2, r3, #1
 8002bec:	6022      	str	r2, [r4, #0]
 8002bee:	7818      	ldrb	r0, [r3, #0]
 8002bf0:	bd38      	pop	{r3, r4, r5, pc}
 8002bf2:	4b07      	ldr	r3, [pc, #28]	; (8002c10 <__srget_r+0x50>)
 8002bf4:	429c      	cmp	r4, r3
 8002bf6:	d101      	bne.n	8002bfc <__srget_r+0x3c>
 8002bf8:	68ac      	ldr	r4, [r5, #8]
 8002bfa:	e7ed      	b.n	8002bd8 <__srget_r+0x18>
 8002bfc:	4b05      	ldr	r3, [pc, #20]	; (8002c14 <__srget_r+0x54>)
 8002bfe:	429c      	cmp	r4, r3
 8002c00:	bf08      	it	eq
 8002c02:	68ec      	ldreq	r4, [r5, #12]
 8002c04:	e7e8      	b.n	8002bd8 <__srget_r+0x18>
 8002c06:	f04f 30ff 	mov.w	r0, #4294967295
 8002c0a:	bd38      	pop	{r3, r4, r5, pc}
 8002c0c:	080084cc 	.word	0x080084cc
 8002c10:	080084ec 	.word	0x080084ec
 8002c14:	080084ac 	.word	0x080084ac

08002c18 <setvbuf>:
 8002c18:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8002c1c:	461d      	mov	r5, r3
 8002c1e:	4b60      	ldr	r3, [pc, #384]	; (8002da0 <setvbuf+0x188>)
 8002c20:	681e      	ldr	r6, [r3, #0]
 8002c22:	4604      	mov	r4, r0
 8002c24:	460f      	mov	r7, r1
 8002c26:	4690      	mov	r8, r2
 8002c28:	b126      	cbz	r6, 8002c34 <setvbuf+0x1c>
 8002c2a:	69b3      	ldr	r3, [r6, #24]
 8002c2c:	b913      	cbnz	r3, 8002c34 <setvbuf+0x1c>
 8002c2e:	4630      	mov	r0, r6
 8002c30:	f003 f990 	bl	8005f54 <__sinit>
 8002c34:	4b5b      	ldr	r3, [pc, #364]	; (8002da4 <setvbuf+0x18c>)
 8002c36:	429c      	cmp	r4, r3
 8002c38:	d166      	bne.n	8002d08 <setvbuf+0xf0>
 8002c3a:	6874      	ldr	r4, [r6, #4]
 8002c3c:	f1b8 0f02 	cmp.w	r8, #2
 8002c40:	d006      	beq.n	8002c50 <setvbuf+0x38>
 8002c42:	f1b8 0f01 	cmp.w	r8, #1
 8002c46:	f200 80a7 	bhi.w	8002d98 <setvbuf+0x180>
 8002c4a:	2d00      	cmp	r5, #0
 8002c4c:	f2c0 80a4 	blt.w	8002d98 <setvbuf+0x180>
 8002c50:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8002c52:	07da      	lsls	r2, r3, #31
 8002c54:	d405      	bmi.n	8002c62 <setvbuf+0x4a>
 8002c56:	89a3      	ldrh	r3, [r4, #12]
 8002c58:	059b      	lsls	r3, r3, #22
 8002c5a:	d402      	bmi.n	8002c62 <setvbuf+0x4a>
 8002c5c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8002c5e:	f003 fca3 	bl	80065a8 <__retarget_lock_acquire_recursive>
 8002c62:	4621      	mov	r1, r4
 8002c64:	4630      	mov	r0, r6
 8002c66:	f003 f8cf 	bl	8005e08 <_fflush_r>
 8002c6a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8002c6c:	b141      	cbz	r1, 8002c80 <setvbuf+0x68>
 8002c6e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8002c72:	4299      	cmp	r1, r3
 8002c74:	d002      	beq.n	8002c7c <setvbuf+0x64>
 8002c76:	4630      	mov	r0, r6
 8002c78:	f003 fa42 	bl	8006100 <_free_r>
 8002c7c:	2300      	movs	r3, #0
 8002c7e:	6363      	str	r3, [r4, #52]	; 0x34
 8002c80:	2300      	movs	r3, #0
 8002c82:	61a3      	str	r3, [r4, #24]
 8002c84:	6063      	str	r3, [r4, #4]
 8002c86:	89a3      	ldrh	r3, [r4, #12]
 8002c88:	0618      	lsls	r0, r3, #24
 8002c8a:	d503      	bpl.n	8002c94 <setvbuf+0x7c>
 8002c8c:	6921      	ldr	r1, [r4, #16]
 8002c8e:	4630      	mov	r0, r6
 8002c90:	f003 fa36 	bl	8006100 <_free_r>
 8002c94:	89a3      	ldrh	r3, [r4, #12]
 8002c96:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
 8002c9a:	f023 0303 	bic.w	r3, r3, #3
 8002c9e:	f1b8 0f02 	cmp.w	r8, #2
 8002ca2:	81a3      	strh	r3, [r4, #12]
 8002ca4:	d072      	beq.n	8002d8c <setvbuf+0x174>
 8002ca6:	ab01      	add	r3, sp, #4
 8002ca8:	466a      	mov	r2, sp
 8002caa:	4621      	mov	r1, r4
 8002cac:	4630      	mov	r0, r6
 8002cae:	f003 fc7d 	bl	80065ac <__swhatbuf_r>
 8002cb2:	89a3      	ldrh	r3, [r4, #12]
 8002cb4:	4318      	orrs	r0, r3
 8002cb6:	81a0      	strh	r0, [r4, #12]
 8002cb8:	2d00      	cmp	r5, #0
 8002cba:	d12f      	bne.n	8002d1c <setvbuf+0x104>
 8002cbc:	9d00      	ldr	r5, [sp, #0]
 8002cbe:	4628      	mov	r0, r5
 8002cc0:	f003 fce0 	bl	8006684 <malloc>
 8002cc4:	4607      	mov	r7, r0
 8002cc6:	2800      	cmp	r0, #0
 8002cc8:	d162      	bne.n	8002d90 <setvbuf+0x178>
 8002cca:	f8dd 9000 	ldr.w	r9, [sp]
 8002cce:	45a9      	cmp	r9, r5
 8002cd0:	d150      	bne.n	8002d74 <setvbuf+0x15c>
 8002cd2:	f04f 35ff 	mov.w	r5, #4294967295
 8002cd6:	2200      	movs	r2, #0
 8002cd8:	60a2      	str	r2, [r4, #8]
 8002cda:	f104 0247 	add.w	r2, r4, #71	; 0x47
 8002cde:	6022      	str	r2, [r4, #0]
 8002ce0:	6122      	str	r2, [r4, #16]
 8002ce2:	2201      	movs	r2, #1
 8002ce4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8002ce8:	6162      	str	r2, [r4, #20]
 8002cea:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8002cec:	f043 0302 	orr.w	r3, r3, #2
 8002cf0:	07d1      	lsls	r1, r2, #31
 8002cf2:	81a3      	strh	r3, [r4, #12]
 8002cf4:	d404      	bmi.n	8002d00 <setvbuf+0xe8>
 8002cf6:	059b      	lsls	r3, r3, #22
 8002cf8:	d402      	bmi.n	8002d00 <setvbuf+0xe8>
 8002cfa:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8002cfc:	f003 fc55 	bl	80065aa <__retarget_lock_release_recursive>
 8002d00:	4628      	mov	r0, r5
 8002d02:	b003      	add	sp, #12
 8002d04:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002d08:	4b27      	ldr	r3, [pc, #156]	; (8002da8 <setvbuf+0x190>)
 8002d0a:	429c      	cmp	r4, r3
 8002d0c:	d101      	bne.n	8002d12 <setvbuf+0xfa>
 8002d0e:	68b4      	ldr	r4, [r6, #8]
 8002d10:	e794      	b.n	8002c3c <setvbuf+0x24>
 8002d12:	4b26      	ldr	r3, [pc, #152]	; (8002dac <setvbuf+0x194>)
 8002d14:	429c      	cmp	r4, r3
 8002d16:	bf08      	it	eq
 8002d18:	68f4      	ldreq	r4, [r6, #12]
 8002d1a:	e78f      	b.n	8002c3c <setvbuf+0x24>
 8002d1c:	2f00      	cmp	r7, #0
 8002d1e:	d0ce      	beq.n	8002cbe <setvbuf+0xa6>
 8002d20:	69b3      	ldr	r3, [r6, #24]
 8002d22:	b913      	cbnz	r3, 8002d2a <setvbuf+0x112>
 8002d24:	4630      	mov	r0, r6
 8002d26:	f003 f915 	bl	8005f54 <__sinit>
 8002d2a:	9b00      	ldr	r3, [sp, #0]
 8002d2c:	6127      	str	r7, [r4, #16]
 8002d2e:	429d      	cmp	r5, r3
 8002d30:	bf18      	it	ne
 8002d32:	89a3      	ldrhne	r3, [r4, #12]
 8002d34:	6027      	str	r7, [r4, #0]
 8002d36:	bf1c      	itt	ne
 8002d38:	f443 6300 	orrne.w	r3, r3, #2048	; 0x800
 8002d3c:	81a3      	strhne	r3, [r4, #12]
 8002d3e:	f1b8 0f01 	cmp.w	r8, #1
 8002d42:	bf08      	it	eq
 8002d44:	89a3      	ldrheq	r3, [r4, #12]
 8002d46:	6165      	str	r5, [r4, #20]
 8002d48:	bf04      	itt	eq
 8002d4a:	f043 0301 	orreq.w	r3, r3, #1
 8002d4e:	81a3      	strheq	r3, [r4, #12]
 8002d50:	89a3      	ldrh	r3, [r4, #12]
 8002d52:	f013 0208 	ands.w	r2, r3, #8
 8002d56:	d01d      	beq.n	8002d94 <setvbuf+0x17c>
 8002d58:	07da      	lsls	r2, r3, #31
 8002d5a:	bf41      	itttt	mi
 8002d5c:	2200      	movmi	r2, #0
 8002d5e:	426d      	negmi	r5, r5
 8002d60:	60a2      	strmi	r2, [r4, #8]
 8002d62:	61a5      	strmi	r5, [r4, #24]
 8002d64:	bf58      	it	pl
 8002d66:	60a5      	strpl	r5, [r4, #8]
 8002d68:	6e65      	ldr	r5, [r4, #100]	; 0x64
 8002d6a:	f015 0501 	ands.w	r5, r5, #1
 8002d6e:	d0c2      	beq.n	8002cf6 <setvbuf+0xde>
 8002d70:	2500      	movs	r5, #0
 8002d72:	e7c5      	b.n	8002d00 <setvbuf+0xe8>
 8002d74:	4648      	mov	r0, r9
 8002d76:	f003 fc85 	bl	8006684 <malloc>
 8002d7a:	4607      	mov	r7, r0
 8002d7c:	2800      	cmp	r0, #0
 8002d7e:	d0a8      	beq.n	8002cd2 <setvbuf+0xba>
 8002d80:	89a3      	ldrh	r3, [r4, #12]
 8002d82:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8002d86:	81a3      	strh	r3, [r4, #12]
 8002d88:	464d      	mov	r5, r9
 8002d8a:	e7c9      	b.n	8002d20 <setvbuf+0x108>
 8002d8c:	2500      	movs	r5, #0
 8002d8e:	e7a2      	b.n	8002cd6 <setvbuf+0xbe>
 8002d90:	46a9      	mov	r9, r5
 8002d92:	e7f5      	b.n	8002d80 <setvbuf+0x168>
 8002d94:	60a2      	str	r2, [r4, #8]
 8002d96:	e7e7      	b.n	8002d68 <setvbuf+0x150>
 8002d98:	f04f 35ff 	mov.w	r5, #4294967295
 8002d9c:	e7b0      	b.n	8002d00 <setvbuf+0xe8>
 8002d9e:	bf00      	nop
 8002da0:	20000010 	.word	0x20000010
 8002da4:	080084cc 	.word	0x080084cc
 8002da8:	080084ec 	.word	0x080084ec
 8002dac:	080084ac 	.word	0x080084ac

08002db0 <sprintf>:
 8002db0:	b40e      	push	{r1, r2, r3}
 8002db2:	b500      	push	{lr}
 8002db4:	b09c      	sub	sp, #112	; 0x70
 8002db6:	f44f 7102 	mov.w	r1, #520	; 0x208
 8002dba:	ab1d      	add	r3, sp, #116	; 0x74
 8002dbc:	f8ad 1014 	strh.w	r1, [sp, #20]
 8002dc0:	9002      	str	r0, [sp, #8]
 8002dc2:	9006      	str	r0, [sp, #24]
 8002dc4:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8002dc8:	480a      	ldr	r0, [pc, #40]	; (8002df4 <sprintf+0x44>)
 8002dca:	9104      	str	r1, [sp, #16]
 8002dcc:	9107      	str	r1, [sp, #28]
 8002dce:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8002dd2:	f853 2b04 	ldr.w	r2, [r3], #4
 8002dd6:	f8ad 1016 	strh.w	r1, [sp, #22]
 8002dda:	6800      	ldr	r0, [r0, #0]
 8002ddc:	9301      	str	r3, [sp, #4]
 8002dde:	a902      	add	r1, sp, #8
 8002de0:	f000 f80a 	bl	8002df8 <_svfprintf_r>
 8002de4:	9b02      	ldr	r3, [sp, #8]
 8002de6:	2200      	movs	r2, #0
 8002de8:	701a      	strb	r2, [r3, #0]
 8002dea:	b01c      	add	sp, #112	; 0x70
 8002dec:	f85d eb04 	ldr.w	lr, [sp], #4
 8002df0:	b003      	add	sp, #12
 8002df2:	4770      	bx	lr
 8002df4:	20000010 	.word	0x20000010

08002df8 <_svfprintf_r>:
 8002df8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002dfc:	b0bd      	sub	sp, #244	; 0xf4
 8002dfe:	468a      	mov	sl, r1
 8002e00:	4615      	mov	r5, r2
 8002e02:	461f      	mov	r7, r3
 8002e04:	4683      	mov	fp, r0
 8002e06:	f003 fbbf 	bl	8006588 <_localeconv_r>
 8002e0a:	6803      	ldr	r3, [r0, #0]
 8002e0c:	930d      	str	r3, [sp, #52]	; 0x34
 8002e0e:	4618      	mov	r0, r3
 8002e10:	f7fd f9e6 	bl	80001e0 <strlen>
 8002e14:	f8ba 300c 	ldrh.w	r3, [sl, #12]
 8002e18:	9008      	str	r0, [sp, #32]
 8002e1a:	061b      	lsls	r3, r3, #24
 8002e1c:	d518      	bpl.n	8002e50 <_svfprintf_r+0x58>
 8002e1e:	f8da 3010 	ldr.w	r3, [sl, #16]
 8002e22:	b9ab      	cbnz	r3, 8002e50 <_svfprintf_r+0x58>
 8002e24:	2140      	movs	r1, #64	; 0x40
 8002e26:	4658      	mov	r0, fp
 8002e28:	f003 fc34 	bl	8006694 <_malloc_r>
 8002e2c:	f8ca 0000 	str.w	r0, [sl]
 8002e30:	f8ca 0010 	str.w	r0, [sl, #16]
 8002e34:	b948      	cbnz	r0, 8002e4a <_svfprintf_r+0x52>
 8002e36:	230c      	movs	r3, #12
 8002e38:	f8cb 3000 	str.w	r3, [fp]
 8002e3c:	f04f 33ff 	mov.w	r3, #4294967295
 8002e40:	9309      	str	r3, [sp, #36]	; 0x24
 8002e42:	9809      	ldr	r0, [sp, #36]	; 0x24
 8002e44:	b03d      	add	sp, #244	; 0xf4
 8002e46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002e4a:	2340      	movs	r3, #64	; 0x40
 8002e4c:	f8ca 3014 	str.w	r3, [sl, #20]
 8002e50:	ed9f 7b99 	vldr	d7, [pc, #612]	; 80030b8 <_svfprintf_r+0x2c0>
 8002e54:	ed8d 7b06 	vstr	d7, [sp, #24]
 8002e58:	2300      	movs	r3, #0
 8002e5a:	ac2c      	add	r4, sp, #176	; 0xb0
 8002e5c:	941f      	str	r4, [sp, #124]	; 0x7c
 8002e5e:	9321      	str	r3, [sp, #132]	; 0x84
 8002e60:	9320      	str	r3, [sp, #128]	; 0x80
 8002e62:	9505      	str	r5, [sp, #20]
 8002e64:	9303      	str	r3, [sp, #12]
 8002e66:	9311      	str	r3, [sp, #68]	; 0x44
 8002e68:	9310      	str	r3, [sp, #64]	; 0x40
 8002e6a:	9309      	str	r3, [sp, #36]	; 0x24
 8002e6c:	9d05      	ldr	r5, [sp, #20]
 8002e6e:	462b      	mov	r3, r5
 8002e70:	f813 2b01 	ldrb.w	r2, [r3], #1
 8002e74:	b112      	cbz	r2, 8002e7c <_svfprintf_r+0x84>
 8002e76:	2a25      	cmp	r2, #37	; 0x25
 8002e78:	f040 8083 	bne.w	8002f82 <_svfprintf_r+0x18a>
 8002e7c:	9b05      	ldr	r3, [sp, #20]
 8002e7e:	1aee      	subs	r6, r5, r3
 8002e80:	d00d      	beq.n	8002e9e <_svfprintf_r+0xa6>
 8002e82:	e884 0048 	stmia.w	r4, {r3, r6}
 8002e86:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8002e88:	4433      	add	r3, r6
 8002e8a:	9321      	str	r3, [sp, #132]	; 0x84
 8002e8c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8002e8e:	3301      	adds	r3, #1
 8002e90:	2b07      	cmp	r3, #7
 8002e92:	9320      	str	r3, [sp, #128]	; 0x80
 8002e94:	dc77      	bgt.n	8002f86 <_svfprintf_r+0x18e>
 8002e96:	3408      	adds	r4, #8
 8002e98:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002e9a:	4433      	add	r3, r6
 8002e9c:	9309      	str	r3, [sp, #36]	; 0x24
 8002e9e:	782b      	ldrb	r3, [r5, #0]
 8002ea0:	2b00      	cmp	r3, #0
 8002ea2:	f000 8729 	beq.w	8003cf8 <_svfprintf_r+0xf00>
 8002ea6:	2300      	movs	r3, #0
 8002ea8:	1c69      	adds	r1, r5, #1
 8002eaa:	f88d 305f 	strb.w	r3, [sp, #95]	; 0x5f
 8002eae:	461a      	mov	r2, r3
 8002eb0:	f04f 39ff 	mov.w	r9, #4294967295
 8002eb4:	930a      	str	r3, [sp, #40]	; 0x28
 8002eb6:	461d      	mov	r5, r3
 8002eb8:	200a      	movs	r0, #10
 8002eba:	1c4e      	adds	r6, r1, #1
 8002ebc:	7809      	ldrb	r1, [r1, #0]
 8002ebe:	9605      	str	r6, [sp, #20]
 8002ec0:	9102      	str	r1, [sp, #8]
 8002ec2:	9902      	ldr	r1, [sp, #8]
 8002ec4:	3920      	subs	r1, #32
 8002ec6:	2958      	cmp	r1, #88	; 0x58
 8002ec8:	f200 8418 	bhi.w	80036fc <_svfprintf_r+0x904>
 8002ecc:	e8df f011 	tbh	[pc, r1, lsl #1]
 8002ed0:	041600a6 	.word	0x041600a6
 8002ed4:	00ab0416 	.word	0x00ab0416
 8002ed8:	04160416 	.word	0x04160416
 8002edc:	04160416 	.word	0x04160416
 8002ee0:	04160416 	.word	0x04160416
 8002ee4:	006500ae 	.word	0x006500ae
 8002ee8:	00b70416 	.word	0x00b70416
 8002eec:	041600ba 	.word	0x041600ba
 8002ef0:	00da00d7 	.word	0x00da00d7
 8002ef4:	00da00da 	.word	0x00da00da
 8002ef8:	00da00da 	.word	0x00da00da
 8002efc:	00da00da 	.word	0x00da00da
 8002f00:	00da00da 	.word	0x00da00da
 8002f04:	04160416 	.word	0x04160416
 8002f08:	04160416 	.word	0x04160416
 8002f0c:	04160416 	.word	0x04160416
 8002f10:	04160416 	.word	0x04160416
 8002f14:	04160416 	.word	0x04160416
 8002f18:	012b0115 	.word	0x012b0115
 8002f1c:	012b0416 	.word	0x012b0416
 8002f20:	04160416 	.word	0x04160416
 8002f24:	04160416 	.word	0x04160416
 8002f28:	041600ed 	.word	0x041600ed
 8002f2c:	03400416 	.word	0x03400416
 8002f30:	04160416 	.word	0x04160416
 8002f34:	04160416 	.word	0x04160416
 8002f38:	03a80416 	.word	0x03a80416
 8002f3c:	04160416 	.word	0x04160416
 8002f40:	04160086 	.word	0x04160086
 8002f44:	04160416 	.word	0x04160416
 8002f48:	04160416 	.word	0x04160416
 8002f4c:	04160416 	.word	0x04160416
 8002f50:	04160416 	.word	0x04160416
 8002f54:	01070416 	.word	0x01070416
 8002f58:	012b006b 	.word	0x012b006b
 8002f5c:	012b012b 	.word	0x012b012b
 8002f60:	006b00f0 	.word	0x006b00f0
 8002f64:	04160416 	.word	0x04160416
 8002f68:	041600fa 	.word	0x041600fa
 8002f6c:	03420322 	.word	0x03420322
 8002f70:	01010376 	.word	0x01010376
 8002f74:	03870416 	.word	0x03870416
 8002f78:	03aa0416 	.word	0x03aa0416
 8002f7c:	04160416 	.word	0x04160416
 8002f80:	03c2      	.short	0x03c2
 8002f82:	461d      	mov	r5, r3
 8002f84:	e773      	b.n	8002e6e <_svfprintf_r+0x76>
 8002f86:	aa1f      	add	r2, sp, #124	; 0x7c
 8002f88:	4651      	mov	r1, sl
 8002f8a:	4658      	mov	r0, fp
 8002f8c:	f004 fb0d 	bl	80075aa <__ssprint_r>
 8002f90:	2800      	cmp	r0, #0
 8002f92:	f040 8692 	bne.w	8003cba <_svfprintf_r+0xec2>
 8002f96:	ac2c      	add	r4, sp, #176	; 0xb0
 8002f98:	e77e      	b.n	8002e98 <_svfprintf_r+0xa0>
 8002f9a:	2301      	movs	r3, #1
 8002f9c:	222b      	movs	r2, #43	; 0x2b
 8002f9e:	9905      	ldr	r1, [sp, #20]
 8002fa0:	e78b      	b.n	8002eba <_svfprintf_r+0xc2>
 8002fa2:	460f      	mov	r7, r1
 8002fa4:	e7fb      	b.n	8002f9e <_svfprintf_r+0x1a6>
 8002fa6:	b10b      	cbz	r3, 8002fac <_svfprintf_r+0x1b4>
 8002fa8:	f88d 205f 	strb.w	r2, [sp, #95]	; 0x5f
 8002fac:	06ae      	lsls	r6, r5, #26
 8002fae:	f140 80aa 	bpl.w	8003106 <_svfprintf_r+0x30e>
 8002fb2:	3707      	adds	r7, #7
 8002fb4:	f027 0707 	bic.w	r7, r7, #7
 8002fb8:	f107 0308 	add.w	r3, r7, #8
 8002fbc:	e9d7 6700 	ldrd	r6, r7, [r7]
 8002fc0:	9304      	str	r3, [sp, #16]
 8002fc2:	2e00      	cmp	r6, #0
 8002fc4:	f177 0300 	sbcs.w	r3, r7, #0
 8002fc8:	da06      	bge.n	8002fd8 <_svfprintf_r+0x1e0>
 8002fca:	4276      	negs	r6, r6
 8002fcc:	f04f 032d 	mov.w	r3, #45	; 0x2d
 8002fd0:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
 8002fd4:	f88d 305f 	strb.w	r3, [sp, #95]	; 0x5f
 8002fd8:	2301      	movs	r3, #1
 8002fda:	e2ca      	b.n	8003572 <_svfprintf_r+0x77a>
 8002fdc:	b10b      	cbz	r3, 8002fe2 <_svfprintf_r+0x1ea>
 8002fde:	f88d 205f 	strb.w	r2, [sp, #95]	; 0x5f
 8002fe2:	4b37      	ldr	r3, [pc, #220]	; (80030c0 <_svfprintf_r+0x2c8>)
 8002fe4:	9311      	str	r3, [sp, #68]	; 0x44
 8002fe6:	06ab      	lsls	r3, r5, #26
 8002fe8:	f140 8339 	bpl.w	800365e <_svfprintf_r+0x866>
 8002fec:	3707      	adds	r7, #7
 8002fee:	f027 0707 	bic.w	r7, r7, #7
 8002ff2:	f107 0308 	add.w	r3, r7, #8
 8002ff6:	e9d7 6700 	ldrd	r6, r7, [r7]
 8002ffa:	9304      	str	r3, [sp, #16]
 8002ffc:	07e8      	lsls	r0, r5, #31
 8002ffe:	d50b      	bpl.n	8003018 <_svfprintf_r+0x220>
 8003000:	ea56 0307 	orrs.w	r3, r6, r7
 8003004:	d008      	beq.n	8003018 <_svfprintf_r+0x220>
 8003006:	2330      	movs	r3, #48	; 0x30
 8003008:	f88d 3060 	strb.w	r3, [sp, #96]	; 0x60
 800300c:	f89d 3008 	ldrb.w	r3, [sp, #8]
 8003010:	f88d 3061 	strb.w	r3, [sp, #97]	; 0x61
 8003014:	f045 0502 	orr.w	r5, r5, #2
 8003018:	2302      	movs	r3, #2
 800301a:	e2a7      	b.n	800356c <_svfprintf_r+0x774>
 800301c:	2a00      	cmp	r2, #0
 800301e:	d1be      	bne.n	8002f9e <_svfprintf_r+0x1a6>
 8003020:	2301      	movs	r3, #1
 8003022:	2220      	movs	r2, #32
 8003024:	e7bb      	b.n	8002f9e <_svfprintf_r+0x1a6>
 8003026:	f045 0501 	orr.w	r5, r5, #1
 800302a:	e7b8      	b.n	8002f9e <_svfprintf_r+0x1a6>
 800302c:	683e      	ldr	r6, [r7, #0]
 800302e:	960a      	str	r6, [sp, #40]	; 0x28
 8003030:	2e00      	cmp	r6, #0
 8003032:	f107 0104 	add.w	r1, r7, #4
 8003036:	dab4      	bge.n	8002fa2 <_svfprintf_r+0x1aa>
 8003038:	4276      	negs	r6, r6
 800303a:	960a      	str	r6, [sp, #40]	; 0x28
 800303c:	460f      	mov	r7, r1
 800303e:	f045 0504 	orr.w	r5, r5, #4
 8003042:	e7ac      	b.n	8002f9e <_svfprintf_r+0x1a6>
 8003044:	9905      	ldr	r1, [sp, #20]
 8003046:	1c4e      	adds	r6, r1, #1
 8003048:	7809      	ldrb	r1, [r1, #0]
 800304a:	9102      	str	r1, [sp, #8]
 800304c:	292a      	cmp	r1, #42	; 0x2a
 800304e:	d010      	beq.n	8003072 <_svfprintf_r+0x27a>
 8003050:	f04f 0900 	mov.w	r9, #0
 8003054:	9605      	str	r6, [sp, #20]
 8003056:	9902      	ldr	r1, [sp, #8]
 8003058:	3930      	subs	r1, #48	; 0x30
 800305a:	2909      	cmp	r1, #9
 800305c:	f63f af31 	bhi.w	8002ec2 <_svfprintf_r+0xca>
 8003060:	fb00 1909 	mla	r9, r0, r9, r1
 8003064:	9905      	ldr	r1, [sp, #20]
 8003066:	460e      	mov	r6, r1
 8003068:	f816 1b01 	ldrb.w	r1, [r6], #1
 800306c:	9102      	str	r1, [sp, #8]
 800306e:	9605      	str	r6, [sp, #20]
 8003070:	e7f1      	b.n	8003056 <_svfprintf_r+0x25e>
 8003072:	6839      	ldr	r1, [r7, #0]
 8003074:	9605      	str	r6, [sp, #20]
 8003076:	ea41 79e1 	orr.w	r9, r1, r1, asr #31
 800307a:	3704      	adds	r7, #4
 800307c:	e78f      	b.n	8002f9e <_svfprintf_r+0x1a6>
 800307e:	f045 0580 	orr.w	r5, r5, #128	; 0x80
 8003082:	e78c      	b.n	8002f9e <_svfprintf_r+0x1a6>
 8003084:	2100      	movs	r1, #0
 8003086:	910a      	str	r1, [sp, #40]	; 0x28
 8003088:	9902      	ldr	r1, [sp, #8]
 800308a:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 800308c:	3930      	subs	r1, #48	; 0x30
 800308e:	fb00 1106 	mla	r1, r0, r6, r1
 8003092:	910a      	str	r1, [sp, #40]	; 0x28
 8003094:	9905      	ldr	r1, [sp, #20]
 8003096:	460e      	mov	r6, r1
 8003098:	f816 1b01 	ldrb.w	r1, [r6], #1
 800309c:	9102      	str	r1, [sp, #8]
 800309e:	9902      	ldr	r1, [sp, #8]
 80030a0:	9605      	str	r6, [sp, #20]
 80030a2:	3930      	subs	r1, #48	; 0x30
 80030a4:	2909      	cmp	r1, #9
 80030a6:	d9ef      	bls.n	8003088 <_svfprintf_r+0x290>
 80030a8:	e70b      	b.n	8002ec2 <_svfprintf_r+0xca>
 80030aa:	f045 0508 	orr.w	r5, r5, #8
 80030ae:	e776      	b.n	8002f9e <_svfprintf_r+0x1a6>
 80030b0:	f045 0540 	orr.w	r5, r5, #64	; 0x40
 80030b4:	e773      	b.n	8002f9e <_svfprintf_r+0x1a6>
 80030b6:	bf00      	nop
	...
 80030c0:	0800843a 	.word	0x0800843a
 80030c4:	9905      	ldr	r1, [sp, #20]
 80030c6:	7809      	ldrb	r1, [r1, #0]
 80030c8:	296c      	cmp	r1, #108	; 0x6c
 80030ca:	d105      	bne.n	80030d8 <_svfprintf_r+0x2e0>
 80030cc:	9905      	ldr	r1, [sp, #20]
 80030ce:	3101      	adds	r1, #1
 80030d0:	9105      	str	r1, [sp, #20]
 80030d2:	f045 0520 	orr.w	r5, r5, #32
 80030d6:	e762      	b.n	8002f9e <_svfprintf_r+0x1a6>
 80030d8:	f045 0510 	orr.w	r5, r5, #16
 80030dc:	e75f      	b.n	8002f9e <_svfprintf_r+0x1a6>
 80030de:	1d3b      	adds	r3, r7, #4
 80030e0:	9304      	str	r3, [sp, #16]
 80030e2:	2600      	movs	r6, #0
 80030e4:	683b      	ldr	r3, [r7, #0]
 80030e6:	f88d 3088 	strb.w	r3, [sp, #136]	; 0x88
 80030ea:	f88d 605f 	strb.w	r6, [sp, #95]	; 0x5f
 80030ee:	f04f 0901 	mov.w	r9, #1
 80030f2:	4637      	mov	r7, r6
 80030f4:	f10d 0888 	add.w	r8, sp, #136	; 0x88
 80030f8:	e11b      	b.n	8003332 <_svfprintf_r+0x53a>
 80030fa:	b10b      	cbz	r3, 8003100 <_svfprintf_r+0x308>
 80030fc:	f88d 205f 	strb.w	r2, [sp, #95]	; 0x5f
 8003100:	f045 0510 	orr.w	r5, r5, #16
 8003104:	e752      	b.n	8002fac <_svfprintf_r+0x1b4>
 8003106:	f015 0f10 	tst.w	r5, #16
 800310a:	f107 0304 	add.w	r3, r7, #4
 800310e:	d003      	beq.n	8003118 <_svfprintf_r+0x320>
 8003110:	683e      	ldr	r6, [r7, #0]
 8003112:	9304      	str	r3, [sp, #16]
 8003114:	17f7      	asrs	r7, r6, #31
 8003116:	e754      	b.n	8002fc2 <_svfprintf_r+0x1ca>
 8003118:	683e      	ldr	r6, [r7, #0]
 800311a:	9304      	str	r3, [sp, #16]
 800311c:	f015 0f40 	tst.w	r5, #64	; 0x40
 8003120:	bf18      	it	ne
 8003122:	b236      	sxthne	r6, r6
 8003124:	e7f6      	b.n	8003114 <_svfprintf_r+0x31c>
 8003126:	b10b      	cbz	r3, 800312c <_svfprintf_r+0x334>
 8003128:	f88d 205f 	strb.w	r2, [sp, #95]	; 0x5f
 800312c:	3707      	adds	r7, #7
 800312e:	f027 0707 	bic.w	r7, r7, #7
 8003132:	f107 0308 	add.w	r3, r7, #8
 8003136:	9304      	str	r3, [sp, #16]
 8003138:	ed97 7b00 	vldr	d7, [r7]
 800313c:	ed8d 7b06 	vstr	d7, [sp, #24]
 8003140:	9b06      	ldr	r3, [sp, #24]
 8003142:	9312      	str	r3, [sp, #72]	; 0x48
 8003144:	9b07      	ldr	r3, [sp, #28]
 8003146:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800314a:	9313      	str	r3, [sp, #76]	; 0x4c
 800314c:	f04f 32ff 	mov.w	r2, #4294967295
 8003150:	4b4a      	ldr	r3, [pc, #296]	; (800327c <_svfprintf_r+0x484>)
 8003152:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
 8003156:	f7fd fced 	bl	8000b34 <__aeabi_dcmpun>
 800315a:	2800      	cmp	r0, #0
 800315c:	f040 85d5 	bne.w	8003d0a <_svfprintf_r+0xf12>
 8003160:	f04f 32ff 	mov.w	r2, #4294967295
 8003164:	4b45      	ldr	r3, [pc, #276]	; (800327c <_svfprintf_r+0x484>)
 8003166:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
 800316a:	f7fd fcc5 	bl	8000af8 <__aeabi_dcmple>
 800316e:	2800      	cmp	r0, #0
 8003170:	f040 85cb 	bne.w	8003d0a <_svfprintf_r+0xf12>
 8003174:	2200      	movs	r2, #0
 8003176:	2300      	movs	r3, #0
 8003178:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800317c:	f7fd fcb2 	bl	8000ae4 <__aeabi_dcmplt>
 8003180:	b110      	cbz	r0, 8003188 <_svfprintf_r+0x390>
 8003182:	232d      	movs	r3, #45	; 0x2d
 8003184:	f88d 305f 	strb.w	r3, [sp, #95]	; 0x5f
 8003188:	4b3d      	ldr	r3, [pc, #244]	; (8003280 <_svfprintf_r+0x488>)
 800318a:	4a3e      	ldr	r2, [pc, #248]	; (8003284 <_svfprintf_r+0x48c>)
 800318c:	9902      	ldr	r1, [sp, #8]
 800318e:	f025 0580 	bic.w	r5, r5, #128	; 0x80
 8003192:	2947      	cmp	r1, #71	; 0x47
 8003194:	bfcc      	ite	gt
 8003196:	4690      	movgt	r8, r2
 8003198:	4698      	movle	r8, r3
 800319a:	f04f 0903 	mov.w	r9, #3
 800319e:	2600      	movs	r6, #0
 80031a0:	4637      	mov	r7, r6
 80031a2:	e0c6      	b.n	8003332 <_svfprintf_r+0x53a>
 80031a4:	f1b9 3fff 	cmp.w	r9, #4294967295
 80031a8:	d022      	beq.n	80031f0 <_svfprintf_r+0x3f8>
 80031aa:	9b02      	ldr	r3, [sp, #8]
 80031ac:	f023 0320 	bic.w	r3, r3, #32
 80031b0:	2b47      	cmp	r3, #71	; 0x47
 80031b2:	d104      	bne.n	80031be <_svfprintf_r+0x3c6>
 80031b4:	f1b9 0f00 	cmp.w	r9, #0
 80031b8:	bf08      	it	eq
 80031ba:	f04f 0901 	moveq.w	r9, #1
 80031be:	f445 7380 	orr.w	r3, r5, #256	; 0x100
 80031c2:	930c      	str	r3, [sp, #48]	; 0x30
 80031c4:	9b07      	ldr	r3, [sp, #28]
 80031c6:	2b00      	cmp	r3, #0
 80031c8:	da15      	bge.n	80031f6 <_svfprintf_r+0x3fe>
 80031ca:	9b06      	ldr	r3, [sp, #24]
 80031cc:	930e      	str	r3, [sp, #56]	; 0x38
 80031ce:	9b07      	ldr	r3, [sp, #28]
 80031d0:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 80031d4:	930f      	str	r3, [sp, #60]	; 0x3c
 80031d6:	232d      	movs	r3, #45	; 0x2d
 80031d8:	930b      	str	r3, [sp, #44]	; 0x2c
 80031da:	9b02      	ldr	r3, [sp, #8]
 80031dc:	f023 0720 	bic.w	r7, r3, #32
 80031e0:	2f46      	cmp	r7, #70	; 0x46
 80031e2:	d00e      	beq.n	8003202 <_svfprintf_r+0x40a>
 80031e4:	2f45      	cmp	r7, #69	; 0x45
 80031e6:	d146      	bne.n	8003276 <_svfprintf_r+0x47e>
 80031e8:	f109 0601 	add.w	r6, r9, #1
 80031ec:	2102      	movs	r1, #2
 80031ee:	e00a      	b.n	8003206 <_svfprintf_r+0x40e>
 80031f0:	f04f 0906 	mov.w	r9, #6
 80031f4:	e7e3      	b.n	80031be <_svfprintf_r+0x3c6>
 80031f6:	ed9d 7b06 	vldr	d7, [sp, #24]
 80031fa:	2300      	movs	r3, #0
 80031fc:	ed8d 7b0e 	vstr	d7, [sp, #56]	; 0x38
 8003200:	e7ea      	b.n	80031d8 <_svfprintf_r+0x3e0>
 8003202:	464e      	mov	r6, r9
 8003204:	2103      	movs	r1, #3
 8003206:	ab1d      	add	r3, sp, #116	; 0x74
 8003208:	9301      	str	r3, [sp, #4]
 800320a:	ab1a      	add	r3, sp, #104	; 0x68
 800320c:	9300      	str	r3, [sp, #0]
 800320e:	4632      	mov	r2, r6
 8003210:	ab19      	add	r3, sp, #100	; 0x64
 8003212:	ed9d 0b0e 	vldr	d0, [sp, #56]	; 0x38
 8003216:	4658      	mov	r0, fp
 8003218:	f001 ff96 	bl	8005148 <_dtoa_r>
 800321c:	2f47      	cmp	r7, #71	; 0x47
 800321e:	4680      	mov	r8, r0
 8003220:	d102      	bne.n	8003228 <_svfprintf_r+0x430>
 8003222:	07e8      	lsls	r0, r5, #31
 8003224:	f140 857e 	bpl.w	8003d24 <_svfprintf_r+0xf2c>
 8003228:	eb08 0306 	add.w	r3, r8, r6
 800322c:	2f46      	cmp	r7, #70	; 0x46
 800322e:	9303      	str	r3, [sp, #12]
 8003230:	d111      	bne.n	8003256 <_svfprintf_r+0x45e>
 8003232:	f898 3000 	ldrb.w	r3, [r8]
 8003236:	2b30      	cmp	r3, #48	; 0x30
 8003238:	d109      	bne.n	800324e <_svfprintf_r+0x456>
 800323a:	2200      	movs	r2, #0
 800323c:	2300      	movs	r3, #0
 800323e:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 8003242:	f7fd fc45 	bl	8000ad0 <__aeabi_dcmpeq>
 8003246:	b910      	cbnz	r0, 800324e <_svfprintf_r+0x456>
 8003248:	f1c6 0601 	rsb	r6, r6, #1
 800324c:	9619      	str	r6, [sp, #100]	; 0x64
 800324e:	9a03      	ldr	r2, [sp, #12]
 8003250:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8003252:	441a      	add	r2, r3
 8003254:	9203      	str	r2, [sp, #12]
 8003256:	2200      	movs	r2, #0
 8003258:	2300      	movs	r3, #0
 800325a:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 800325e:	f7fd fc37 	bl	8000ad0 <__aeabi_dcmpeq>
 8003262:	b988      	cbnz	r0, 8003288 <_svfprintf_r+0x490>
 8003264:	2230      	movs	r2, #48	; 0x30
 8003266:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8003268:	9903      	ldr	r1, [sp, #12]
 800326a:	4299      	cmp	r1, r3
 800326c:	d90e      	bls.n	800328c <_svfprintf_r+0x494>
 800326e:	1c59      	adds	r1, r3, #1
 8003270:	911d      	str	r1, [sp, #116]	; 0x74
 8003272:	701a      	strb	r2, [r3, #0]
 8003274:	e7f7      	b.n	8003266 <_svfprintf_r+0x46e>
 8003276:	464e      	mov	r6, r9
 8003278:	e7b8      	b.n	80031ec <_svfprintf_r+0x3f4>
 800327a:	bf00      	nop
 800327c:	7fefffff 	.word	0x7fefffff
 8003280:	0800842a 	.word	0x0800842a
 8003284:	0800842e 	.word	0x0800842e
 8003288:	9b03      	ldr	r3, [sp, #12]
 800328a:	931d      	str	r3, [sp, #116]	; 0x74
 800328c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 800328e:	2f47      	cmp	r7, #71	; 0x47
 8003290:	eba3 0308 	sub.w	r3, r3, r8
 8003294:	9303      	str	r3, [sp, #12]
 8003296:	f040 80fa 	bne.w	800348e <_svfprintf_r+0x696>
 800329a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800329c:	1cd9      	adds	r1, r3, #3
 800329e:	db02      	blt.n	80032a6 <_svfprintf_r+0x4ae>
 80032a0:	4599      	cmp	r9, r3
 80032a2:	f280 8120 	bge.w	80034e6 <_svfprintf_r+0x6ee>
 80032a6:	9b02      	ldr	r3, [sp, #8]
 80032a8:	3b02      	subs	r3, #2
 80032aa:	9302      	str	r3, [sp, #8]
 80032ac:	9a19      	ldr	r2, [sp, #100]	; 0x64
 80032ae:	f89d 1008 	ldrb.w	r1, [sp, #8]
 80032b2:	f88d 106c 	strb.w	r1, [sp, #108]	; 0x6c
 80032b6:	1e53      	subs	r3, r2, #1
 80032b8:	2b00      	cmp	r3, #0
 80032ba:	9319      	str	r3, [sp, #100]	; 0x64
 80032bc:	bfb6      	itet	lt
 80032be:	f1c2 0301 	rsblt	r3, r2, #1
 80032c2:	222b      	movge	r2, #43	; 0x2b
 80032c4:	222d      	movlt	r2, #45	; 0x2d
 80032c6:	2b09      	cmp	r3, #9
 80032c8:	f88d 206d 	strb.w	r2, [sp, #109]	; 0x6d
 80032cc:	f340 80fb 	ble.w	80034c6 <_svfprintf_r+0x6ce>
 80032d0:	f10d 027b 	add.w	r2, sp, #123	; 0x7b
 80032d4:	260a      	movs	r6, #10
 80032d6:	fb93 f0f6 	sdiv	r0, r3, r6
 80032da:	fb06 3310 	mls	r3, r6, r0, r3
 80032de:	3330      	adds	r3, #48	; 0x30
 80032e0:	2809      	cmp	r0, #9
 80032e2:	f802 3c01 	strb.w	r3, [r2, #-1]
 80032e6:	f102 31ff 	add.w	r1, r2, #4294967295
 80032ea:	4603      	mov	r3, r0
 80032ec:	f300 80e4 	bgt.w	80034b8 <_svfprintf_r+0x6c0>
 80032f0:	3330      	adds	r3, #48	; 0x30
 80032f2:	f801 3c01 	strb.w	r3, [r1, #-1]
 80032f6:	3a02      	subs	r2, #2
 80032f8:	f10d 036e 	add.w	r3, sp, #110	; 0x6e
 80032fc:	f10d 007b 	add.w	r0, sp, #123	; 0x7b
 8003300:	4282      	cmp	r2, r0
 8003302:	4619      	mov	r1, r3
 8003304:	f0c0 80da 	bcc.w	80034bc <_svfprintf_r+0x6c4>
 8003308:	9a03      	ldr	r2, [sp, #12]
 800330a:	ab1b      	add	r3, sp, #108	; 0x6c
 800330c:	1acb      	subs	r3, r1, r3
 800330e:	2a01      	cmp	r2, #1
 8003310:	9310      	str	r3, [sp, #64]	; 0x40
 8003312:	eb03 0902 	add.w	r9, r3, r2
 8003316:	dc02      	bgt.n	800331e <_svfprintf_r+0x526>
 8003318:	f015 0701 	ands.w	r7, r5, #1
 800331c:	d002      	beq.n	8003324 <_svfprintf_r+0x52c>
 800331e:	9b08      	ldr	r3, [sp, #32]
 8003320:	2700      	movs	r7, #0
 8003322:	4499      	add	r9, r3
 8003324:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003326:	b113      	cbz	r3, 800332e <_svfprintf_r+0x536>
 8003328:	232d      	movs	r3, #45	; 0x2d
 800332a:	f88d 305f 	strb.w	r3, [sp, #95]	; 0x5f
 800332e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8003330:	2600      	movs	r6, #0
 8003332:	454e      	cmp	r6, r9
 8003334:	4633      	mov	r3, r6
 8003336:	bfb8      	it	lt
 8003338:	464b      	movlt	r3, r9
 800333a:	930b      	str	r3, [sp, #44]	; 0x2c
 800333c:	f89d 305f 	ldrb.w	r3, [sp, #95]	; 0x5f
 8003340:	b113      	cbz	r3, 8003348 <_svfprintf_r+0x550>
 8003342:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003344:	3301      	adds	r3, #1
 8003346:	930b      	str	r3, [sp, #44]	; 0x2c
 8003348:	f015 0302 	ands.w	r3, r5, #2
 800334c:	9314      	str	r3, [sp, #80]	; 0x50
 800334e:	bf1e      	ittt	ne
 8003350:	9b0b      	ldrne	r3, [sp, #44]	; 0x2c
 8003352:	3302      	addne	r3, #2
 8003354:	930b      	strne	r3, [sp, #44]	; 0x2c
 8003356:	f015 0384 	ands.w	r3, r5, #132	; 0x84
 800335a:	9315      	str	r3, [sp, #84]	; 0x54
 800335c:	d118      	bne.n	8003390 <_svfprintf_r+0x598>
 800335e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003360:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8003362:	1a9b      	subs	r3, r3, r2
 8003364:	2b00      	cmp	r3, #0
 8003366:	930c      	str	r3, [sp, #48]	; 0x30
 8003368:	dd12      	ble.n	8003390 <_svfprintf_r+0x598>
 800336a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800336c:	2b10      	cmp	r3, #16
 800336e:	4ba9      	ldr	r3, [pc, #676]	; (8003614 <_svfprintf_r+0x81c>)
 8003370:	6023      	str	r3, [r4, #0]
 8003372:	f300 81d5 	bgt.w	8003720 <_svfprintf_r+0x928>
 8003376:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003378:	6063      	str	r3, [r4, #4]
 800337a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800337c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800337e:	4413      	add	r3, r2
 8003380:	9321      	str	r3, [sp, #132]	; 0x84
 8003382:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003384:	3301      	adds	r3, #1
 8003386:	2b07      	cmp	r3, #7
 8003388:	9320      	str	r3, [sp, #128]	; 0x80
 800338a:	f300 81e2 	bgt.w	8003752 <_svfprintf_r+0x95a>
 800338e:	3408      	adds	r4, #8
 8003390:	f89d 305f 	ldrb.w	r3, [sp, #95]	; 0x5f
 8003394:	b173      	cbz	r3, 80033b4 <_svfprintf_r+0x5bc>
 8003396:	f10d 035f 	add.w	r3, sp, #95	; 0x5f
 800339a:	6023      	str	r3, [r4, #0]
 800339c:	2301      	movs	r3, #1
 800339e:	6063      	str	r3, [r4, #4]
 80033a0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80033a2:	3301      	adds	r3, #1
 80033a4:	9321      	str	r3, [sp, #132]	; 0x84
 80033a6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80033a8:	3301      	adds	r3, #1
 80033aa:	2b07      	cmp	r3, #7
 80033ac:	9320      	str	r3, [sp, #128]	; 0x80
 80033ae:	f300 81da 	bgt.w	8003766 <_svfprintf_r+0x96e>
 80033b2:	3408      	adds	r4, #8
 80033b4:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80033b6:	b16b      	cbz	r3, 80033d4 <_svfprintf_r+0x5dc>
 80033b8:	ab18      	add	r3, sp, #96	; 0x60
 80033ba:	6023      	str	r3, [r4, #0]
 80033bc:	2302      	movs	r3, #2
 80033be:	6063      	str	r3, [r4, #4]
 80033c0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80033c2:	3302      	adds	r3, #2
 80033c4:	9321      	str	r3, [sp, #132]	; 0x84
 80033c6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80033c8:	3301      	adds	r3, #1
 80033ca:	2b07      	cmp	r3, #7
 80033cc:	9320      	str	r3, [sp, #128]	; 0x80
 80033ce:	f300 81d4 	bgt.w	800377a <_svfprintf_r+0x982>
 80033d2:	3408      	adds	r4, #8
 80033d4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80033d6:	2b80      	cmp	r3, #128	; 0x80
 80033d8:	d114      	bne.n	8003404 <_svfprintf_r+0x60c>
 80033da:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80033dc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80033de:	1a9b      	subs	r3, r3, r2
 80033e0:	2b00      	cmp	r3, #0
 80033e2:	dd0f      	ble.n	8003404 <_svfprintf_r+0x60c>
 80033e4:	4a8c      	ldr	r2, [pc, #560]	; (8003618 <_svfprintf_r+0x820>)
 80033e6:	6022      	str	r2, [r4, #0]
 80033e8:	2b10      	cmp	r3, #16
 80033ea:	f300 81d0 	bgt.w	800378e <_svfprintf_r+0x996>
 80033ee:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80033f0:	6063      	str	r3, [r4, #4]
 80033f2:	4413      	add	r3, r2
 80033f4:	9321      	str	r3, [sp, #132]	; 0x84
 80033f6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80033f8:	3301      	adds	r3, #1
 80033fa:	2b07      	cmp	r3, #7
 80033fc:	9320      	str	r3, [sp, #128]	; 0x80
 80033fe:	f300 81df 	bgt.w	80037c0 <_svfprintf_r+0x9c8>
 8003402:	3408      	adds	r4, #8
 8003404:	eba6 0609 	sub.w	r6, r6, r9
 8003408:	2e00      	cmp	r6, #0
 800340a:	dd0f      	ble.n	800342c <_svfprintf_r+0x634>
 800340c:	4b82      	ldr	r3, [pc, #520]	; (8003618 <_svfprintf_r+0x820>)
 800340e:	6023      	str	r3, [r4, #0]
 8003410:	2e10      	cmp	r6, #16
 8003412:	f300 81df 	bgt.w	80037d4 <_svfprintf_r+0x9dc>
 8003416:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003418:	9821      	ldr	r0, [sp, #132]	; 0x84
 800341a:	6066      	str	r6, [r4, #4]
 800341c:	3301      	adds	r3, #1
 800341e:	4406      	add	r6, r0
 8003420:	2b07      	cmp	r3, #7
 8003422:	9621      	str	r6, [sp, #132]	; 0x84
 8003424:	9320      	str	r3, [sp, #128]	; 0x80
 8003426:	f300 81ec 	bgt.w	8003802 <_svfprintf_r+0xa0a>
 800342a:	3408      	adds	r4, #8
 800342c:	05eb      	lsls	r3, r5, #23
 800342e:	f100 81f2 	bmi.w	8003816 <_svfprintf_r+0xa1e>
 8003432:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003434:	e884 0300 	stmia.w	r4, {r8, r9}
 8003438:	444b      	add	r3, r9
 800343a:	9321      	str	r3, [sp, #132]	; 0x84
 800343c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800343e:	3301      	adds	r3, #1
 8003440:	2b07      	cmp	r3, #7
 8003442:	9320      	str	r3, [sp, #128]	; 0x80
 8003444:	f340 8419 	ble.w	8003c7a <_svfprintf_r+0xe82>
 8003448:	aa1f      	add	r2, sp, #124	; 0x7c
 800344a:	4651      	mov	r1, sl
 800344c:	4658      	mov	r0, fp
 800344e:	f004 f8ac 	bl	80075aa <__ssprint_r>
 8003452:	2800      	cmp	r0, #0
 8003454:	f040 8431 	bne.w	8003cba <_svfprintf_r+0xec2>
 8003458:	ac2c      	add	r4, sp, #176	; 0xb0
 800345a:	076b      	lsls	r3, r5, #29
 800345c:	f100 8410 	bmi.w	8003c80 <_svfprintf_r+0xe88>
 8003460:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003462:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8003464:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8003466:	428a      	cmp	r2, r1
 8003468:	bfac      	ite	ge
 800346a:	189b      	addge	r3, r3, r2
 800346c:	185b      	addlt	r3, r3, r1
 800346e:	9309      	str	r3, [sp, #36]	; 0x24
 8003470:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003472:	b13b      	cbz	r3, 8003484 <_svfprintf_r+0x68c>
 8003474:	aa1f      	add	r2, sp, #124	; 0x7c
 8003476:	4651      	mov	r1, sl
 8003478:	4658      	mov	r0, fp
 800347a:	f004 f896 	bl	80075aa <__ssprint_r>
 800347e:	2800      	cmp	r0, #0
 8003480:	f040 841b 	bne.w	8003cba <_svfprintf_r+0xec2>
 8003484:	2300      	movs	r3, #0
 8003486:	9320      	str	r3, [sp, #128]	; 0x80
 8003488:	9f04      	ldr	r7, [sp, #16]
 800348a:	ac2c      	add	r4, sp, #176	; 0xb0
 800348c:	e4ee      	b.n	8002e6c <_svfprintf_r+0x74>
 800348e:	9b02      	ldr	r3, [sp, #8]
 8003490:	2b65      	cmp	r3, #101	; 0x65
 8003492:	f77f af0b 	ble.w	80032ac <_svfprintf_r+0x4b4>
 8003496:	9b02      	ldr	r3, [sp, #8]
 8003498:	2b66      	cmp	r3, #102	; 0x66
 800349a:	d124      	bne.n	80034e6 <_svfprintf_r+0x6ee>
 800349c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800349e:	2b00      	cmp	r3, #0
 80034a0:	dd19      	ble.n	80034d6 <_svfprintf_r+0x6de>
 80034a2:	f1b9 0f00 	cmp.w	r9, #0
 80034a6:	d101      	bne.n	80034ac <_svfprintf_r+0x6b4>
 80034a8:	07ea      	lsls	r2, r5, #31
 80034aa:	d502      	bpl.n	80034b2 <_svfprintf_r+0x6ba>
 80034ac:	9a08      	ldr	r2, [sp, #32]
 80034ae:	4413      	add	r3, r2
 80034b0:	444b      	add	r3, r9
 80034b2:	9f19      	ldr	r7, [sp, #100]	; 0x64
 80034b4:	4699      	mov	r9, r3
 80034b6:	e735      	b.n	8003324 <_svfprintf_r+0x52c>
 80034b8:	460a      	mov	r2, r1
 80034ba:	e70c      	b.n	80032d6 <_svfprintf_r+0x4de>
 80034bc:	f812 1b01 	ldrb.w	r1, [r2], #1
 80034c0:	f803 1b01 	strb.w	r1, [r3], #1
 80034c4:	e71c      	b.n	8003300 <_svfprintf_r+0x508>
 80034c6:	2230      	movs	r2, #48	; 0x30
 80034c8:	4413      	add	r3, r2
 80034ca:	f88d 206e 	strb.w	r2, [sp, #110]	; 0x6e
 80034ce:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 80034d2:	a91c      	add	r1, sp, #112	; 0x70
 80034d4:	e718      	b.n	8003308 <_svfprintf_r+0x510>
 80034d6:	f1b9 0f00 	cmp.w	r9, #0
 80034da:	d101      	bne.n	80034e0 <_svfprintf_r+0x6e8>
 80034dc:	07eb      	lsls	r3, r5, #31
 80034de:	d515      	bpl.n	800350c <_svfprintf_r+0x714>
 80034e0:	9b08      	ldr	r3, [sp, #32]
 80034e2:	3301      	adds	r3, #1
 80034e4:	e7e4      	b.n	80034b0 <_svfprintf_r+0x6b8>
 80034e6:	9a19      	ldr	r2, [sp, #100]	; 0x64
 80034e8:	9b03      	ldr	r3, [sp, #12]
 80034ea:	429a      	cmp	r2, r3
 80034ec:	db06      	blt.n	80034fc <_svfprintf_r+0x704>
 80034ee:	07ef      	lsls	r7, r5, #31
 80034f0:	d50e      	bpl.n	8003510 <_svfprintf_r+0x718>
 80034f2:	9b08      	ldr	r3, [sp, #32]
 80034f4:	4413      	add	r3, r2
 80034f6:	2267      	movs	r2, #103	; 0x67
 80034f8:	9202      	str	r2, [sp, #8]
 80034fa:	e7da      	b.n	80034b2 <_svfprintf_r+0x6ba>
 80034fc:	9b03      	ldr	r3, [sp, #12]
 80034fe:	9908      	ldr	r1, [sp, #32]
 8003500:	2a00      	cmp	r2, #0
 8003502:	440b      	add	r3, r1
 8003504:	dcf7      	bgt.n	80034f6 <_svfprintf_r+0x6fe>
 8003506:	f1c2 0201 	rsb	r2, r2, #1
 800350a:	e7f3      	b.n	80034f4 <_svfprintf_r+0x6fc>
 800350c:	2301      	movs	r3, #1
 800350e:	e7d0      	b.n	80034b2 <_svfprintf_r+0x6ba>
 8003510:	4613      	mov	r3, r2
 8003512:	e7f0      	b.n	80034f6 <_svfprintf_r+0x6fe>
 8003514:	b10b      	cbz	r3, 800351a <_svfprintf_r+0x722>
 8003516:	f88d 205f 	strb.w	r2, [sp, #95]	; 0x5f
 800351a:	f015 0f20 	tst.w	r5, #32
 800351e:	f107 0304 	add.w	r3, r7, #4
 8003522:	d008      	beq.n	8003536 <_svfprintf_r+0x73e>
 8003524:	9909      	ldr	r1, [sp, #36]	; 0x24
 8003526:	683a      	ldr	r2, [r7, #0]
 8003528:	17ce      	asrs	r6, r1, #31
 800352a:	4608      	mov	r0, r1
 800352c:	4631      	mov	r1, r6
 800352e:	e9c2 0100 	strd	r0, r1, [r2]
 8003532:	461f      	mov	r7, r3
 8003534:	e49a      	b.n	8002e6c <_svfprintf_r+0x74>
 8003536:	06ee      	lsls	r6, r5, #27
 8003538:	d503      	bpl.n	8003542 <_svfprintf_r+0x74a>
 800353a:	683a      	ldr	r2, [r7, #0]
 800353c:	9909      	ldr	r1, [sp, #36]	; 0x24
 800353e:	6011      	str	r1, [r2, #0]
 8003540:	e7f7      	b.n	8003532 <_svfprintf_r+0x73a>
 8003542:	0668      	lsls	r0, r5, #25
 8003544:	d5f9      	bpl.n	800353a <_svfprintf_r+0x742>
 8003546:	683a      	ldr	r2, [r7, #0]
 8003548:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 800354c:	8011      	strh	r1, [r2, #0]
 800354e:	e7f0      	b.n	8003532 <_svfprintf_r+0x73a>
 8003550:	f045 0510 	orr.w	r5, r5, #16
 8003554:	f015 0320 	ands.w	r3, r5, #32
 8003558:	d022      	beq.n	80035a0 <_svfprintf_r+0x7a8>
 800355a:	3707      	adds	r7, #7
 800355c:	f027 0707 	bic.w	r7, r7, #7
 8003560:	f107 0308 	add.w	r3, r7, #8
 8003564:	e9d7 6700 	ldrd	r6, r7, [r7]
 8003568:	9304      	str	r3, [sp, #16]
 800356a:	2300      	movs	r3, #0
 800356c:	2200      	movs	r2, #0
 800356e:	f88d 205f 	strb.w	r2, [sp, #95]	; 0x5f
 8003572:	f1b9 3fff 	cmp.w	r9, #4294967295
 8003576:	f000 83db 	beq.w	8003d30 <_svfprintf_r+0xf38>
 800357a:	f025 0280 	bic.w	r2, r5, #128	; 0x80
 800357e:	920b      	str	r2, [sp, #44]	; 0x2c
 8003580:	ea56 0207 	orrs.w	r2, r6, r7
 8003584:	f040 83d9 	bne.w	8003d3a <_svfprintf_r+0xf42>
 8003588:	f1b9 0f00 	cmp.w	r9, #0
 800358c:	f000 80aa 	beq.w	80036e4 <_svfprintf_r+0x8ec>
 8003590:	2b01      	cmp	r3, #1
 8003592:	d076      	beq.n	8003682 <_svfprintf_r+0x88a>
 8003594:	2b02      	cmp	r3, #2
 8003596:	f000 8091 	beq.w	80036bc <_svfprintf_r+0x8c4>
 800359a:	2600      	movs	r6, #0
 800359c:	2700      	movs	r7, #0
 800359e:	e3d2      	b.n	8003d46 <_svfprintf_r+0xf4e>
 80035a0:	1d3a      	adds	r2, r7, #4
 80035a2:	f015 0110 	ands.w	r1, r5, #16
 80035a6:	9204      	str	r2, [sp, #16]
 80035a8:	d002      	beq.n	80035b0 <_svfprintf_r+0x7b8>
 80035aa:	683e      	ldr	r6, [r7, #0]
 80035ac:	2700      	movs	r7, #0
 80035ae:	e7dd      	b.n	800356c <_svfprintf_r+0x774>
 80035b0:	f015 0340 	ands.w	r3, r5, #64	; 0x40
 80035b4:	d0f9      	beq.n	80035aa <_svfprintf_r+0x7b2>
 80035b6:	883e      	ldrh	r6, [r7, #0]
 80035b8:	2700      	movs	r7, #0
 80035ba:	e7d6      	b.n	800356a <_svfprintf_r+0x772>
 80035bc:	1d3b      	adds	r3, r7, #4
 80035be:	9304      	str	r3, [sp, #16]
 80035c0:	2330      	movs	r3, #48	; 0x30
 80035c2:	2278      	movs	r2, #120	; 0x78
 80035c4:	f88d 3060 	strb.w	r3, [sp, #96]	; 0x60
 80035c8:	4b14      	ldr	r3, [pc, #80]	; (800361c <_svfprintf_r+0x824>)
 80035ca:	683e      	ldr	r6, [r7, #0]
 80035cc:	9311      	str	r3, [sp, #68]	; 0x44
 80035ce:	2700      	movs	r7, #0
 80035d0:	f045 0502 	orr.w	r5, r5, #2
 80035d4:	f88d 2061 	strb.w	r2, [sp, #97]	; 0x61
 80035d8:	2302      	movs	r3, #2
 80035da:	9202      	str	r2, [sp, #8]
 80035dc:	e7c6      	b.n	800356c <_svfprintf_r+0x774>
 80035de:	1d3b      	adds	r3, r7, #4
 80035e0:	2600      	movs	r6, #0
 80035e2:	f1b9 3fff 	cmp.w	r9, #4294967295
 80035e6:	9304      	str	r3, [sp, #16]
 80035e8:	f8d7 8000 	ldr.w	r8, [r7]
 80035ec:	f88d 605f 	strb.w	r6, [sp, #95]	; 0x5f
 80035f0:	d00a      	beq.n	8003608 <_svfprintf_r+0x810>
 80035f2:	464a      	mov	r2, r9
 80035f4:	4631      	mov	r1, r6
 80035f6:	4640      	mov	r0, r8
 80035f8:	f7fc fdfa 	bl	80001f0 <memchr>
 80035fc:	2800      	cmp	r0, #0
 80035fe:	f000 808d 	beq.w	800371c <_svfprintf_r+0x924>
 8003602:	eba0 0908 	sub.w	r9, r0, r8
 8003606:	e5cb      	b.n	80031a0 <_svfprintf_r+0x3a8>
 8003608:	4640      	mov	r0, r8
 800360a:	f7fc fde9 	bl	80001e0 <strlen>
 800360e:	4681      	mov	r9, r0
 8003610:	e5c6      	b.n	80031a0 <_svfprintf_r+0x3a8>
 8003612:	bf00      	nop
 8003614:	0800845e 	.word	0x0800845e
 8003618:	0800846e 	.word	0x0800846e
 800361c:	0800844b 	.word	0x0800844b
 8003620:	f045 0510 	orr.w	r5, r5, #16
 8003624:	06a9      	lsls	r1, r5, #26
 8003626:	d509      	bpl.n	800363c <_svfprintf_r+0x844>
 8003628:	3707      	adds	r7, #7
 800362a:	f027 0707 	bic.w	r7, r7, #7
 800362e:	f107 0308 	add.w	r3, r7, #8
 8003632:	e9d7 6700 	ldrd	r6, r7, [r7]
 8003636:	9304      	str	r3, [sp, #16]
 8003638:	2301      	movs	r3, #1
 800363a:	e797      	b.n	800356c <_svfprintf_r+0x774>
 800363c:	1d3b      	adds	r3, r7, #4
 800363e:	f015 0f10 	tst.w	r5, #16
 8003642:	9304      	str	r3, [sp, #16]
 8003644:	d001      	beq.n	800364a <_svfprintf_r+0x852>
 8003646:	683e      	ldr	r6, [r7, #0]
 8003648:	e002      	b.n	8003650 <_svfprintf_r+0x858>
 800364a:	066a      	lsls	r2, r5, #25
 800364c:	d5fb      	bpl.n	8003646 <_svfprintf_r+0x84e>
 800364e:	883e      	ldrh	r6, [r7, #0]
 8003650:	2700      	movs	r7, #0
 8003652:	e7f1      	b.n	8003638 <_svfprintf_r+0x840>
 8003654:	b10b      	cbz	r3, 800365a <_svfprintf_r+0x862>
 8003656:	f88d 205f 	strb.w	r2, [sp, #95]	; 0x5f
 800365a:	4ba3      	ldr	r3, [pc, #652]	; (80038e8 <_svfprintf_r+0xaf0>)
 800365c:	e4c2      	b.n	8002fe4 <_svfprintf_r+0x1ec>
 800365e:	1d3b      	adds	r3, r7, #4
 8003660:	f015 0f10 	tst.w	r5, #16
 8003664:	9304      	str	r3, [sp, #16]
 8003666:	d001      	beq.n	800366c <_svfprintf_r+0x874>
 8003668:	683e      	ldr	r6, [r7, #0]
 800366a:	e002      	b.n	8003672 <_svfprintf_r+0x87a>
 800366c:	066e      	lsls	r6, r5, #25
 800366e:	d5fb      	bpl.n	8003668 <_svfprintf_r+0x870>
 8003670:	883e      	ldrh	r6, [r7, #0]
 8003672:	2700      	movs	r7, #0
 8003674:	e4c2      	b.n	8002ffc <_svfprintf_r+0x204>
 8003676:	4643      	mov	r3, r8
 8003678:	e366      	b.n	8003d48 <_svfprintf_r+0xf50>
 800367a:	2f00      	cmp	r7, #0
 800367c:	bf08      	it	eq
 800367e:	2e0a      	cmpeq	r6, #10
 8003680:	d205      	bcs.n	800368e <_svfprintf_r+0x896>
 8003682:	f10d 08f0 	add.w	r8, sp, #240	; 0xf0
 8003686:	3630      	adds	r6, #48	; 0x30
 8003688:	f808 6d41 	strb.w	r6, [r8, #-65]!
 800368c:	e377      	b.n	8003d7e <_svfprintf_r+0xf86>
 800368e:	f10d 08b0 	add.w	r8, sp, #176	; 0xb0
 8003692:	4630      	mov	r0, r6
 8003694:	4639      	mov	r1, r7
 8003696:	220a      	movs	r2, #10
 8003698:	2300      	movs	r3, #0
 800369a:	f7fd fa89 	bl	8000bb0 <__aeabi_uldivmod>
 800369e:	3230      	adds	r2, #48	; 0x30
 80036a0:	f808 2d01 	strb.w	r2, [r8, #-1]!
 80036a4:	2300      	movs	r3, #0
 80036a6:	4630      	mov	r0, r6
 80036a8:	4639      	mov	r1, r7
 80036aa:	220a      	movs	r2, #10
 80036ac:	f7fd fa80 	bl	8000bb0 <__aeabi_uldivmod>
 80036b0:	4606      	mov	r6, r0
 80036b2:	460f      	mov	r7, r1
 80036b4:	ea56 0307 	orrs.w	r3, r6, r7
 80036b8:	d1eb      	bne.n	8003692 <_svfprintf_r+0x89a>
 80036ba:	e360      	b.n	8003d7e <_svfprintf_r+0xf86>
 80036bc:	2600      	movs	r6, #0
 80036be:	2700      	movs	r7, #0
 80036c0:	f10d 08b0 	add.w	r8, sp, #176	; 0xb0
 80036c4:	f006 030f 	and.w	r3, r6, #15
 80036c8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80036ca:	5cd3      	ldrb	r3, [r2, r3]
 80036cc:	f808 3d01 	strb.w	r3, [r8, #-1]!
 80036d0:	0933      	lsrs	r3, r6, #4
 80036d2:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
 80036d6:	093a      	lsrs	r2, r7, #4
 80036d8:	461e      	mov	r6, r3
 80036da:	4617      	mov	r7, r2
 80036dc:	ea56 0307 	orrs.w	r3, r6, r7
 80036e0:	d1f0      	bne.n	80036c4 <_svfprintf_r+0x8cc>
 80036e2:	e34c      	b.n	8003d7e <_svfprintf_r+0xf86>
 80036e4:	b93b      	cbnz	r3, 80036f6 <_svfprintf_r+0x8fe>
 80036e6:	07ea      	lsls	r2, r5, #31
 80036e8:	d505      	bpl.n	80036f6 <_svfprintf_r+0x8fe>
 80036ea:	f10d 08f0 	add.w	r8, sp, #240	; 0xf0
 80036ee:	2330      	movs	r3, #48	; 0x30
 80036f0:	f808 3d41 	strb.w	r3, [r8, #-65]!
 80036f4:	e343      	b.n	8003d7e <_svfprintf_r+0xf86>
 80036f6:	f10d 08b0 	add.w	r8, sp, #176	; 0xb0
 80036fa:	e340      	b.n	8003d7e <_svfprintf_r+0xf86>
 80036fc:	b10b      	cbz	r3, 8003702 <_svfprintf_r+0x90a>
 80036fe:	f88d 205f 	strb.w	r2, [sp, #95]	; 0x5f
 8003702:	9b02      	ldr	r3, [sp, #8]
 8003704:	2b00      	cmp	r3, #0
 8003706:	f000 82f7 	beq.w	8003cf8 <_svfprintf_r+0xf00>
 800370a:	f89d 3008 	ldrb.w	r3, [sp, #8]
 800370e:	f88d 3088 	strb.w	r3, [sp, #136]	; 0x88
 8003712:	2600      	movs	r6, #0
 8003714:	f88d 605f 	strb.w	r6, [sp, #95]	; 0x5f
 8003718:	9704      	str	r7, [sp, #16]
 800371a:	e4e8      	b.n	80030ee <_svfprintf_r+0x2f6>
 800371c:	4606      	mov	r6, r0
 800371e:	e53f      	b.n	80031a0 <_svfprintf_r+0x3a8>
 8003720:	2310      	movs	r3, #16
 8003722:	6063      	str	r3, [r4, #4]
 8003724:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003726:	3310      	adds	r3, #16
 8003728:	9321      	str	r3, [sp, #132]	; 0x84
 800372a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800372c:	3301      	adds	r3, #1
 800372e:	2b07      	cmp	r3, #7
 8003730:	9320      	str	r3, [sp, #128]	; 0x80
 8003732:	dc04      	bgt.n	800373e <_svfprintf_r+0x946>
 8003734:	3408      	adds	r4, #8
 8003736:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003738:	3b10      	subs	r3, #16
 800373a:	930c      	str	r3, [sp, #48]	; 0x30
 800373c:	e615      	b.n	800336a <_svfprintf_r+0x572>
 800373e:	aa1f      	add	r2, sp, #124	; 0x7c
 8003740:	4651      	mov	r1, sl
 8003742:	4658      	mov	r0, fp
 8003744:	f003 ff31 	bl	80075aa <__ssprint_r>
 8003748:	2800      	cmp	r0, #0
 800374a:	f040 82b6 	bne.w	8003cba <_svfprintf_r+0xec2>
 800374e:	ac2c      	add	r4, sp, #176	; 0xb0
 8003750:	e7f1      	b.n	8003736 <_svfprintf_r+0x93e>
 8003752:	aa1f      	add	r2, sp, #124	; 0x7c
 8003754:	4651      	mov	r1, sl
 8003756:	4658      	mov	r0, fp
 8003758:	f003 ff27 	bl	80075aa <__ssprint_r>
 800375c:	2800      	cmp	r0, #0
 800375e:	f040 82ac 	bne.w	8003cba <_svfprintf_r+0xec2>
 8003762:	ac2c      	add	r4, sp, #176	; 0xb0
 8003764:	e614      	b.n	8003390 <_svfprintf_r+0x598>
 8003766:	aa1f      	add	r2, sp, #124	; 0x7c
 8003768:	4651      	mov	r1, sl
 800376a:	4658      	mov	r0, fp
 800376c:	f003 ff1d 	bl	80075aa <__ssprint_r>
 8003770:	2800      	cmp	r0, #0
 8003772:	f040 82a2 	bne.w	8003cba <_svfprintf_r+0xec2>
 8003776:	ac2c      	add	r4, sp, #176	; 0xb0
 8003778:	e61c      	b.n	80033b4 <_svfprintf_r+0x5bc>
 800377a:	aa1f      	add	r2, sp, #124	; 0x7c
 800377c:	4651      	mov	r1, sl
 800377e:	4658      	mov	r0, fp
 8003780:	f003 ff13 	bl	80075aa <__ssprint_r>
 8003784:	2800      	cmp	r0, #0
 8003786:	f040 8298 	bne.w	8003cba <_svfprintf_r+0xec2>
 800378a:	ac2c      	add	r4, sp, #176	; 0xb0
 800378c:	e622      	b.n	80033d4 <_svfprintf_r+0x5dc>
 800378e:	2210      	movs	r2, #16
 8003790:	6062      	str	r2, [r4, #4]
 8003792:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8003794:	3210      	adds	r2, #16
 8003796:	9221      	str	r2, [sp, #132]	; 0x84
 8003798:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800379a:	3201      	adds	r2, #1
 800379c:	2a07      	cmp	r2, #7
 800379e:	9220      	str	r2, [sp, #128]	; 0x80
 80037a0:	dc02      	bgt.n	80037a8 <_svfprintf_r+0x9b0>
 80037a2:	3408      	adds	r4, #8
 80037a4:	3b10      	subs	r3, #16
 80037a6:	e61d      	b.n	80033e4 <_svfprintf_r+0x5ec>
 80037a8:	aa1f      	add	r2, sp, #124	; 0x7c
 80037aa:	4651      	mov	r1, sl
 80037ac:	4658      	mov	r0, fp
 80037ae:	930c      	str	r3, [sp, #48]	; 0x30
 80037b0:	f003 fefb 	bl	80075aa <__ssprint_r>
 80037b4:	2800      	cmp	r0, #0
 80037b6:	f040 8280 	bne.w	8003cba <_svfprintf_r+0xec2>
 80037ba:	ac2c      	add	r4, sp, #176	; 0xb0
 80037bc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80037be:	e7f1      	b.n	80037a4 <_svfprintf_r+0x9ac>
 80037c0:	aa1f      	add	r2, sp, #124	; 0x7c
 80037c2:	4651      	mov	r1, sl
 80037c4:	4658      	mov	r0, fp
 80037c6:	f003 fef0 	bl	80075aa <__ssprint_r>
 80037ca:	2800      	cmp	r0, #0
 80037cc:	f040 8275 	bne.w	8003cba <_svfprintf_r+0xec2>
 80037d0:	ac2c      	add	r4, sp, #176	; 0xb0
 80037d2:	e617      	b.n	8003404 <_svfprintf_r+0x60c>
 80037d4:	2310      	movs	r3, #16
 80037d6:	6063      	str	r3, [r4, #4]
 80037d8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80037da:	3310      	adds	r3, #16
 80037dc:	9321      	str	r3, [sp, #132]	; 0x84
 80037de:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80037e0:	3301      	adds	r3, #1
 80037e2:	2b07      	cmp	r3, #7
 80037e4:	9320      	str	r3, [sp, #128]	; 0x80
 80037e6:	dc02      	bgt.n	80037ee <_svfprintf_r+0x9f6>
 80037e8:	3408      	adds	r4, #8
 80037ea:	3e10      	subs	r6, #16
 80037ec:	e60e      	b.n	800340c <_svfprintf_r+0x614>
 80037ee:	aa1f      	add	r2, sp, #124	; 0x7c
 80037f0:	4651      	mov	r1, sl
 80037f2:	4658      	mov	r0, fp
 80037f4:	f003 fed9 	bl	80075aa <__ssprint_r>
 80037f8:	2800      	cmp	r0, #0
 80037fa:	f040 825e 	bne.w	8003cba <_svfprintf_r+0xec2>
 80037fe:	ac2c      	add	r4, sp, #176	; 0xb0
 8003800:	e7f3      	b.n	80037ea <_svfprintf_r+0x9f2>
 8003802:	aa1f      	add	r2, sp, #124	; 0x7c
 8003804:	4651      	mov	r1, sl
 8003806:	4658      	mov	r0, fp
 8003808:	f003 fecf 	bl	80075aa <__ssprint_r>
 800380c:	2800      	cmp	r0, #0
 800380e:	f040 8254 	bne.w	8003cba <_svfprintf_r+0xec2>
 8003812:	ac2c      	add	r4, sp, #176	; 0xb0
 8003814:	e60a      	b.n	800342c <_svfprintf_r+0x634>
 8003816:	9b02      	ldr	r3, [sp, #8]
 8003818:	2b65      	cmp	r3, #101	; 0x65
 800381a:	f340 81a9 	ble.w	8003b70 <_svfprintf_r+0xd78>
 800381e:	2200      	movs	r2, #0
 8003820:	2300      	movs	r3, #0
 8003822:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8003826:	f7fd f953 	bl	8000ad0 <__aeabi_dcmpeq>
 800382a:	2800      	cmp	r0, #0
 800382c:	d062      	beq.n	80038f4 <_svfprintf_r+0xafc>
 800382e:	4b2f      	ldr	r3, [pc, #188]	; (80038ec <_svfprintf_r+0xaf4>)
 8003830:	6023      	str	r3, [r4, #0]
 8003832:	2301      	movs	r3, #1
 8003834:	6063      	str	r3, [r4, #4]
 8003836:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003838:	3301      	adds	r3, #1
 800383a:	9321      	str	r3, [sp, #132]	; 0x84
 800383c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800383e:	3301      	adds	r3, #1
 8003840:	2b07      	cmp	r3, #7
 8003842:	9320      	str	r3, [sp, #128]	; 0x80
 8003844:	dc25      	bgt.n	8003892 <_svfprintf_r+0xa9a>
 8003846:	3408      	adds	r4, #8
 8003848:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800384a:	9a03      	ldr	r2, [sp, #12]
 800384c:	4293      	cmp	r3, r2
 800384e:	db02      	blt.n	8003856 <_svfprintf_r+0xa5e>
 8003850:	07ee      	lsls	r6, r5, #31
 8003852:	f57f ae02 	bpl.w	800345a <_svfprintf_r+0x662>
 8003856:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003858:	6023      	str	r3, [r4, #0]
 800385a:	9b08      	ldr	r3, [sp, #32]
 800385c:	6063      	str	r3, [r4, #4]
 800385e:	9a08      	ldr	r2, [sp, #32]
 8003860:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003862:	4413      	add	r3, r2
 8003864:	9321      	str	r3, [sp, #132]	; 0x84
 8003866:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003868:	3301      	adds	r3, #1
 800386a:	2b07      	cmp	r3, #7
 800386c:	9320      	str	r3, [sp, #128]	; 0x80
 800386e:	dc1a      	bgt.n	80038a6 <_svfprintf_r+0xaae>
 8003870:	3408      	adds	r4, #8
 8003872:	9b03      	ldr	r3, [sp, #12]
 8003874:	1e5e      	subs	r6, r3, #1
 8003876:	2e00      	cmp	r6, #0
 8003878:	f77f adef 	ble.w	800345a <_svfprintf_r+0x662>
 800387c:	4f1c      	ldr	r7, [pc, #112]	; (80038f0 <_svfprintf_r+0xaf8>)
 800387e:	f04f 0810 	mov.w	r8, #16
 8003882:	2e10      	cmp	r6, #16
 8003884:	6027      	str	r7, [r4, #0]
 8003886:	dc18      	bgt.n	80038ba <_svfprintf_r+0xac2>
 8003888:	6066      	str	r6, [r4, #4]
 800388a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800388c:	441e      	add	r6, r3
 800388e:	9621      	str	r6, [sp, #132]	; 0x84
 8003890:	e5d4      	b.n	800343c <_svfprintf_r+0x644>
 8003892:	aa1f      	add	r2, sp, #124	; 0x7c
 8003894:	4651      	mov	r1, sl
 8003896:	4658      	mov	r0, fp
 8003898:	f003 fe87 	bl	80075aa <__ssprint_r>
 800389c:	2800      	cmp	r0, #0
 800389e:	f040 820c 	bne.w	8003cba <_svfprintf_r+0xec2>
 80038a2:	ac2c      	add	r4, sp, #176	; 0xb0
 80038a4:	e7d0      	b.n	8003848 <_svfprintf_r+0xa50>
 80038a6:	aa1f      	add	r2, sp, #124	; 0x7c
 80038a8:	4651      	mov	r1, sl
 80038aa:	4658      	mov	r0, fp
 80038ac:	f003 fe7d 	bl	80075aa <__ssprint_r>
 80038b0:	2800      	cmp	r0, #0
 80038b2:	f040 8202 	bne.w	8003cba <_svfprintf_r+0xec2>
 80038b6:	ac2c      	add	r4, sp, #176	; 0xb0
 80038b8:	e7db      	b.n	8003872 <_svfprintf_r+0xa7a>
 80038ba:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80038bc:	f8c4 8004 	str.w	r8, [r4, #4]
 80038c0:	3310      	adds	r3, #16
 80038c2:	9321      	str	r3, [sp, #132]	; 0x84
 80038c4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80038c6:	3301      	adds	r3, #1
 80038c8:	2b07      	cmp	r3, #7
 80038ca:	9320      	str	r3, [sp, #128]	; 0x80
 80038cc:	dc02      	bgt.n	80038d4 <_svfprintf_r+0xadc>
 80038ce:	3408      	adds	r4, #8
 80038d0:	3e10      	subs	r6, #16
 80038d2:	e7d6      	b.n	8003882 <_svfprintf_r+0xa8a>
 80038d4:	aa1f      	add	r2, sp, #124	; 0x7c
 80038d6:	4651      	mov	r1, sl
 80038d8:	4658      	mov	r0, fp
 80038da:	f003 fe66 	bl	80075aa <__ssprint_r>
 80038de:	2800      	cmp	r0, #0
 80038e0:	f040 81eb 	bne.w	8003cba <_svfprintf_r+0xec2>
 80038e4:	ac2c      	add	r4, sp, #176	; 0xb0
 80038e6:	e7f3      	b.n	80038d0 <_svfprintf_r+0xad8>
 80038e8:	0800844b 	.word	0x0800844b
 80038ec:	0800845c 	.word	0x0800845c
 80038f0:	0800846e 	.word	0x0800846e
 80038f4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80038f6:	2b00      	cmp	r3, #0
 80038f8:	dc7a      	bgt.n	80039f0 <_svfprintf_r+0xbf8>
 80038fa:	4b9b      	ldr	r3, [pc, #620]	; (8003b68 <_svfprintf_r+0xd70>)
 80038fc:	6023      	str	r3, [r4, #0]
 80038fe:	2301      	movs	r3, #1
 8003900:	6063      	str	r3, [r4, #4]
 8003902:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003904:	3301      	adds	r3, #1
 8003906:	9321      	str	r3, [sp, #132]	; 0x84
 8003908:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800390a:	3301      	adds	r3, #1
 800390c:	2b07      	cmp	r3, #7
 800390e:	9320      	str	r3, [sp, #128]	; 0x80
 8003910:	dc44      	bgt.n	800399c <_svfprintf_r+0xba4>
 8003912:	3408      	adds	r4, #8
 8003914:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8003916:	b923      	cbnz	r3, 8003922 <_svfprintf_r+0xb2a>
 8003918:	9b03      	ldr	r3, [sp, #12]
 800391a:	b913      	cbnz	r3, 8003922 <_svfprintf_r+0xb2a>
 800391c:	07e8      	lsls	r0, r5, #31
 800391e:	f57f ad9c 	bpl.w	800345a <_svfprintf_r+0x662>
 8003922:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003924:	6023      	str	r3, [r4, #0]
 8003926:	9b08      	ldr	r3, [sp, #32]
 8003928:	6063      	str	r3, [r4, #4]
 800392a:	9a08      	ldr	r2, [sp, #32]
 800392c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800392e:	4413      	add	r3, r2
 8003930:	9321      	str	r3, [sp, #132]	; 0x84
 8003932:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003934:	3301      	adds	r3, #1
 8003936:	2b07      	cmp	r3, #7
 8003938:	9320      	str	r3, [sp, #128]	; 0x80
 800393a:	dc39      	bgt.n	80039b0 <_svfprintf_r+0xbb8>
 800393c:	f104 0308 	add.w	r3, r4, #8
 8003940:	9e19      	ldr	r6, [sp, #100]	; 0x64
 8003942:	2e00      	cmp	r6, #0
 8003944:	da19      	bge.n	800397a <_svfprintf_r+0xb82>
 8003946:	4f89      	ldr	r7, [pc, #548]	; (8003b6c <_svfprintf_r+0xd74>)
 8003948:	4276      	negs	r6, r6
 800394a:	2410      	movs	r4, #16
 800394c:	2e10      	cmp	r6, #16
 800394e:	601f      	str	r7, [r3, #0]
 8003950:	dc38      	bgt.n	80039c4 <_svfprintf_r+0xbcc>
 8003952:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8003954:	605e      	str	r6, [r3, #4]
 8003956:	4416      	add	r6, r2
 8003958:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800395a:	9621      	str	r6, [sp, #132]	; 0x84
 800395c:	3201      	adds	r2, #1
 800395e:	2a07      	cmp	r2, #7
 8003960:	f103 0308 	add.w	r3, r3, #8
 8003964:	9220      	str	r2, [sp, #128]	; 0x80
 8003966:	dd08      	ble.n	800397a <_svfprintf_r+0xb82>
 8003968:	aa1f      	add	r2, sp, #124	; 0x7c
 800396a:	4651      	mov	r1, sl
 800396c:	4658      	mov	r0, fp
 800396e:	f003 fe1c 	bl	80075aa <__ssprint_r>
 8003972:	2800      	cmp	r0, #0
 8003974:	f040 81a1 	bne.w	8003cba <_svfprintf_r+0xec2>
 8003978:	ab2c      	add	r3, sp, #176	; 0xb0
 800397a:	9a03      	ldr	r2, [sp, #12]
 800397c:	605a      	str	r2, [r3, #4]
 800397e:	9903      	ldr	r1, [sp, #12]
 8003980:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8003982:	f8c3 8000 	str.w	r8, [r3]
 8003986:	440a      	add	r2, r1
 8003988:	9221      	str	r2, [sp, #132]	; 0x84
 800398a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800398c:	3201      	adds	r2, #1
 800398e:	2a07      	cmp	r2, #7
 8003990:	9220      	str	r2, [sp, #128]	; 0x80
 8003992:	f73f ad59 	bgt.w	8003448 <_svfprintf_r+0x650>
 8003996:	f103 0408 	add.w	r4, r3, #8
 800399a:	e55e      	b.n	800345a <_svfprintf_r+0x662>
 800399c:	aa1f      	add	r2, sp, #124	; 0x7c
 800399e:	4651      	mov	r1, sl
 80039a0:	4658      	mov	r0, fp
 80039a2:	f003 fe02 	bl	80075aa <__ssprint_r>
 80039a6:	2800      	cmp	r0, #0
 80039a8:	f040 8187 	bne.w	8003cba <_svfprintf_r+0xec2>
 80039ac:	ac2c      	add	r4, sp, #176	; 0xb0
 80039ae:	e7b1      	b.n	8003914 <_svfprintf_r+0xb1c>
 80039b0:	aa1f      	add	r2, sp, #124	; 0x7c
 80039b2:	4651      	mov	r1, sl
 80039b4:	4658      	mov	r0, fp
 80039b6:	f003 fdf8 	bl	80075aa <__ssprint_r>
 80039ba:	2800      	cmp	r0, #0
 80039bc:	f040 817d 	bne.w	8003cba <_svfprintf_r+0xec2>
 80039c0:	ab2c      	add	r3, sp, #176	; 0xb0
 80039c2:	e7bd      	b.n	8003940 <_svfprintf_r+0xb48>
 80039c4:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80039c6:	605c      	str	r4, [r3, #4]
 80039c8:	3210      	adds	r2, #16
 80039ca:	9221      	str	r2, [sp, #132]	; 0x84
 80039cc:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80039ce:	3201      	adds	r2, #1
 80039d0:	2a07      	cmp	r2, #7
 80039d2:	9220      	str	r2, [sp, #128]	; 0x80
 80039d4:	dc02      	bgt.n	80039dc <_svfprintf_r+0xbe4>
 80039d6:	3308      	adds	r3, #8
 80039d8:	3e10      	subs	r6, #16
 80039da:	e7b7      	b.n	800394c <_svfprintf_r+0xb54>
 80039dc:	aa1f      	add	r2, sp, #124	; 0x7c
 80039de:	4651      	mov	r1, sl
 80039e0:	4658      	mov	r0, fp
 80039e2:	f003 fde2 	bl	80075aa <__ssprint_r>
 80039e6:	2800      	cmp	r0, #0
 80039e8:	f040 8167 	bne.w	8003cba <_svfprintf_r+0xec2>
 80039ec:	ab2c      	add	r3, sp, #176	; 0xb0
 80039ee:	e7f3      	b.n	80039d8 <_svfprintf_r+0xbe0>
 80039f0:	9b03      	ldr	r3, [sp, #12]
 80039f2:	42bb      	cmp	r3, r7
 80039f4:	bfa8      	it	ge
 80039f6:	463b      	movge	r3, r7
 80039f8:	2b00      	cmp	r3, #0
 80039fa:	461e      	mov	r6, r3
 80039fc:	dd0b      	ble.n	8003a16 <_svfprintf_r+0xc1e>
 80039fe:	6063      	str	r3, [r4, #4]
 8003a00:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003a02:	f8c4 8000 	str.w	r8, [r4]
 8003a06:	4433      	add	r3, r6
 8003a08:	9321      	str	r3, [sp, #132]	; 0x84
 8003a0a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003a0c:	3301      	adds	r3, #1
 8003a0e:	2b07      	cmp	r3, #7
 8003a10:	9320      	str	r3, [sp, #128]	; 0x80
 8003a12:	dc5f      	bgt.n	8003ad4 <_svfprintf_r+0xcdc>
 8003a14:	3408      	adds	r4, #8
 8003a16:	2e00      	cmp	r6, #0
 8003a18:	bfac      	ite	ge
 8003a1a:	1bbe      	subge	r6, r7, r6
 8003a1c:	463e      	movlt	r6, r7
 8003a1e:	2e00      	cmp	r6, #0
 8003a20:	dd0f      	ble.n	8003a42 <_svfprintf_r+0xc4a>
 8003a22:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8003b6c <_svfprintf_r+0xd74>
 8003a26:	f8c4 9000 	str.w	r9, [r4]
 8003a2a:	2e10      	cmp	r6, #16
 8003a2c:	dc5c      	bgt.n	8003ae8 <_svfprintf_r+0xcf0>
 8003a2e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003a30:	6066      	str	r6, [r4, #4]
 8003a32:	441e      	add	r6, r3
 8003a34:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003a36:	9621      	str	r6, [sp, #132]	; 0x84
 8003a38:	3301      	adds	r3, #1
 8003a3a:	2b07      	cmp	r3, #7
 8003a3c:	9320      	str	r3, [sp, #128]	; 0x80
 8003a3e:	dc6a      	bgt.n	8003b16 <_svfprintf_r+0xd1e>
 8003a40:	3408      	adds	r4, #8
 8003a42:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8003a44:	9a03      	ldr	r2, [sp, #12]
 8003a46:	4293      	cmp	r3, r2
 8003a48:	db01      	blt.n	8003a4e <_svfprintf_r+0xc56>
 8003a4a:	07e9      	lsls	r1, r5, #31
 8003a4c:	d50d      	bpl.n	8003a6a <_svfprintf_r+0xc72>
 8003a4e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003a50:	6023      	str	r3, [r4, #0]
 8003a52:	9b08      	ldr	r3, [sp, #32]
 8003a54:	6063      	str	r3, [r4, #4]
 8003a56:	9a08      	ldr	r2, [sp, #32]
 8003a58:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003a5a:	4413      	add	r3, r2
 8003a5c:	9321      	str	r3, [sp, #132]	; 0x84
 8003a5e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003a60:	3301      	adds	r3, #1
 8003a62:	2b07      	cmp	r3, #7
 8003a64:	9320      	str	r3, [sp, #128]	; 0x80
 8003a66:	dc60      	bgt.n	8003b2a <_svfprintf_r+0xd32>
 8003a68:	3408      	adds	r4, #8
 8003a6a:	9b03      	ldr	r3, [sp, #12]
 8003a6c:	9a03      	ldr	r2, [sp, #12]
 8003a6e:	1bde      	subs	r6, r3, r7
 8003a70:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8003a72:	1ad3      	subs	r3, r2, r3
 8003a74:	429e      	cmp	r6, r3
 8003a76:	bfa8      	it	ge
 8003a78:	461e      	movge	r6, r3
 8003a7a:	2e00      	cmp	r6, #0
 8003a7c:	dd0b      	ble.n	8003a96 <_svfprintf_r+0xc9e>
 8003a7e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003a80:	6066      	str	r6, [r4, #4]
 8003a82:	4433      	add	r3, r6
 8003a84:	9321      	str	r3, [sp, #132]	; 0x84
 8003a86:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003a88:	3301      	adds	r3, #1
 8003a8a:	4447      	add	r7, r8
 8003a8c:	2b07      	cmp	r3, #7
 8003a8e:	6027      	str	r7, [r4, #0]
 8003a90:	9320      	str	r3, [sp, #128]	; 0x80
 8003a92:	dc54      	bgt.n	8003b3e <_svfprintf_r+0xd46>
 8003a94:	3408      	adds	r4, #8
 8003a96:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8003a98:	9a03      	ldr	r2, [sp, #12]
 8003a9a:	2e00      	cmp	r6, #0
 8003a9c:	eba2 0303 	sub.w	r3, r2, r3
 8003aa0:	bfac      	ite	ge
 8003aa2:	1b9e      	subge	r6, r3, r6
 8003aa4:	461e      	movlt	r6, r3
 8003aa6:	2e00      	cmp	r6, #0
 8003aa8:	f77f acd7 	ble.w	800345a <_svfprintf_r+0x662>
 8003aac:	4f2f      	ldr	r7, [pc, #188]	; (8003b6c <_svfprintf_r+0xd74>)
 8003aae:	f04f 0810 	mov.w	r8, #16
 8003ab2:	2e10      	cmp	r6, #16
 8003ab4:	6027      	str	r7, [r4, #0]
 8003ab6:	f77f aee7 	ble.w	8003888 <_svfprintf_r+0xa90>
 8003aba:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003abc:	f8c4 8004 	str.w	r8, [r4, #4]
 8003ac0:	3310      	adds	r3, #16
 8003ac2:	9321      	str	r3, [sp, #132]	; 0x84
 8003ac4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003ac6:	3301      	adds	r3, #1
 8003ac8:	2b07      	cmp	r3, #7
 8003aca:	9320      	str	r3, [sp, #128]	; 0x80
 8003acc:	dc41      	bgt.n	8003b52 <_svfprintf_r+0xd5a>
 8003ace:	3408      	adds	r4, #8
 8003ad0:	3e10      	subs	r6, #16
 8003ad2:	e7ee      	b.n	8003ab2 <_svfprintf_r+0xcba>
 8003ad4:	aa1f      	add	r2, sp, #124	; 0x7c
 8003ad6:	4651      	mov	r1, sl
 8003ad8:	4658      	mov	r0, fp
 8003ada:	f003 fd66 	bl	80075aa <__ssprint_r>
 8003ade:	2800      	cmp	r0, #0
 8003ae0:	f040 80eb 	bne.w	8003cba <_svfprintf_r+0xec2>
 8003ae4:	ac2c      	add	r4, sp, #176	; 0xb0
 8003ae6:	e796      	b.n	8003a16 <_svfprintf_r+0xc1e>
 8003ae8:	2310      	movs	r3, #16
 8003aea:	6063      	str	r3, [r4, #4]
 8003aec:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003aee:	3310      	adds	r3, #16
 8003af0:	9321      	str	r3, [sp, #132]	; 0x84
 8003af2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003af4:	3301      	adds	r3, #1
 8003af6:	2b07      	cmp	r3, #7
 8003af8:	9320      	str	r3, [sp, #128]	; 0x80
 8003afa:	dc02      	bgt.n	8003b02 <_svfprintf_r+0xd0a>
 8003afc:	3408      	adds	r4, #8
 8003afe:	3e10      	subs	r6, #16
 8003b00:	e791      	b.n	8003a26 <_svfprintf_r+0xc2e>
 8003b02:	aa1f      	add	r2, sp, #124	; 0x7c
 8003b04:	4651      	mov	r1, sl
 8003b06:	4658      	mov	r0, fp
 8003b08:	f003 fd4f 	bl	80075aa <__ssprint_r>
 8003b0c:	2800      	cmp	r0, #0
 8003b0e:	f040 80d4 	bne.w	8003cba <_svfprintf_r+0xec2>
 8003b12:	ac2c      	add	r4, sp, #176	; 0xb0
 8003b14:	e7f3      	b.n	8003afe <_svfprintf_r+0xd06>
 8003b16:	aa1f      	add	r2, sp, #124	; 0x7c
 8003b18:	4651      	mov	r1, sl
 8003b1a:	4658      	mov	r0, fp
 8003b1c:	f003 fd45 	bl	80075aa <__ssprint_r>
 8003b20:	2800      	cmp	r0, #0
 8003b22:	f040 80ca 	bne.w	8003cba <_svfprintf_r+0xec2>
 8003b26:	ac2c      	add	r4, sp, #176	; 0xb0
 8003b28:	e78b      	b.n	8003a42 <_svfprintf_r+0xc4a>
 8003b2a:	aa1f      	add	r2, sp, #124	; 0x7c
 8003b2c:	4651      	mov	r1, sl
 8003b2e:	4658      	mov	r0, fp
 8003b30:	f003 fd3b 	bl	80075aa <__ssprint_r>
 8003b34:	2800      	cmp	r0, #0
 8003b36:	f040 80c0 	bne.w	8003cba <_svfprintf_r+0xec2>
 8003b3a:	ac2c      	add	r4, sp, #176	; 0xb0
 8003b3c:	e795      	b.n	8003a6a <_svfprintf_r+0xc72>
 8003b3e:	aa1f      	add	r2, sp, #124	; 0x7c
 8003b40:	4651      	mov	r1, sl
 8003b42:	4658      	mov	r0, fp
 8003b44:	f003 fd31 	bl	80075aa <__ssprint_r>
 8003b48:	2800      	cmp	r0, #0
 8003b4a:	f040 80b6 	bne.w	8003cba <_svfprintf_r+0xec2>
 8003b4e:	ac2c      	add	r4, sp, #176	; 0xb0
 8003b50:	e7a1      	b.n	8003a96 <_svfprintf_r+0xc9e>
 8003b52:	aa1f      	add	r2, sp, #124	; 0x7c
 8003b54:	4651      	mov	r1, sl
 8003b56:	4658      	mov	r0, fp
 8003b58:	f003 fd27 	bl	80075aa <__ssprint_r>
 8003b5c:	2800      	cmp	r0, #0
 8003b5e:	f040 80ac 	bne.w	8003cba <_svfprintf_r+0xec2>
 8003b62:	ac2c      	add	r4, sp, #176	; 0xb0
 8003b64:	e7b4      	b.n	8003ad0 <_svfprintf_r+0xcd8>
 8003b66:	bf00      	nop
 8003b68:	0800845c 	.word	0x0800845c
 8003b6c:	0800846e 	.word	0x0800846e
 8003b70:	9b03      	ldr	r3, [sp, #12]
 8003b72:	2b01      	cmp	r3, #1
 8003b74:	dc01      	bgt.n	8003b7a <_svfprintf_r+0xd82>
 8003b76:	07ea      	lsls	r2, r5, #31
 8003b78:	d576      	bpl.n	8003c68 <_svfprintf_r+0xe70>
 8003b7a:	2301      	movs	r3, #1
 8003b7c:	6063      	str	r3, [r4, #4]
 8003b7e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003b80:	f8c4 8000 	str.w	r8, [r4]
 8003b84:	3301      	adds	r3, #1
 8003b86:	9321      	str	r3, [sp, #132]	; 0x84
 8003b88:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003b8a:	3301      	adds	r3, #1
 8003b8c:	2b07      	cmp	r3, #7
 8003b8e:	9320      	str	r3, [sp, #128]	; 0x80
 8003b90:	dc36      	bgt.n	8003c00 <_svfprintf_r+0xe08>
 8003b92:	3408      	adds	r4, #8
 8003b94:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003b96:	6023      	str	r3, [r4, #0]
 8003b98:	9b08      	ldr	r3, [sp, #32]
 8003b9a:	6063      	str	r3, [r4, #4]
 8003b9c:	9a08      	ldr	r2, [sp, #32]
 8003b9e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003ba0:	4413      	add	r3, r2
 8003ba2:	9321      	str	r3, [sp, #132]	; 0x84
 8003ba4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003ba6:	3301      	adds	r3, #1
 8003ba8:	2b07      	cmp	r3, #7
 8003baa:	9320      	str	r3, [sp, #128]	; 0x80
 8003bac:	dc31      	bgt.n	8003c12 <_svfprintf_r+0xe1a>
 8003bae:	3408      	adds	r4, #8
 8003bb0:	2300      	movs	r3, #0
 8003bb2:	2200      	movs	r2, #0
 8003bb4:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8003bb8:	f7fc ff8a 	bl	8000ad0 <__aeabi_dcmpeq>
 8003bbc:	9b03      	ldr	r3, [sp, #12]
 8003bbe:	1e5e      	subs	r6, r3, #1
 8003bc0:	2800      	cmp	r0, #0
 8003bc2:	d12f      	bne.n	8003c24 <_svfprintf_r+0xe2c>
 8003bc4:	f108 0301 	add.w	r3, r8, #1
 8003bc8:	e884 0048 	stmia.w	r4, {r3, r6}
 8003bcc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003bce:	9a03      	ldr	r2, [sp, #12]
 8003bd0:	3b01      	subs	r3, #1
 8003bd2:	4413      	add	r3, r2
 8003bd4:	9321      	str	r3, [sp, #132]	; 0x84
 8003bd6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003bd8:	3301      	adds	r3, #1
 8003bda:	2b07      	cmp	r3, #7
 8003bdc:	9320      	str	r3, [sp, #128]	; 0x80
 8003bde:	dd4a      	ble.n	8003c76 <_svfprintf_r+0xe7e>
 8003be0:	aa1f      	add	r2, sp, #124	; 0x7c
 8003be2:	4651      	mov	r1, sl
 8003be4:	4658      	mov	r0, fp
 8003be6:	f003 fce0 	bl	80075aa <__ssprint_r>
 8003bea:	2800      	cmp	r0, #0
 8003bec:	d165      	bne.n	8003cba <_svfprintf_r+0xec2>
 8003bee:	ac2c      	add	r4, sp, #176	; 0xb0
 8003bf0:	ab1b      	add	r3, sp, #108	; 0x6c
 8003bf2:	6023      	str	r3, [r4, #0]
 8003bf4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8003bf6:	6063      	str	r3, [r4, #4]
 8003bf8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8003bfa:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003bfc:	4413      	add	r3, r2
 8003bfe:	e41c      	b.n	800343a <_svfprintf_r+0x642>
 8003c00:	aa1f      	add	r2, sp, #124	; 0x7c
 8003c02:	4651      	mov	r1, sl
 8003c04:	4658      	mov	r0, fp
 8003c06:	f003 fcd0 	bl	80075aa <__ssprint_r>
 8003c0a:	2800      	cmp	r0, #0
 8003c0c:	d155      	bne.n	8003cba <_svfprintf_r+0xec2>
 8003c0e:	ac2c      	add	r4, sp, #176	; 0xb0
 8003c10:	e7c0      	b.n	8003b94 <_svfprintf_r+0xd9c>
 8003c12:	aa1f      	add	r2, sp, #124	; 0x7c
 8003c14:	4651      	mov	r1, sl
 8003c16:	4658      	mov	r0, fp
 8003c18:	f003 fcc7 	bl	80075aa <__ssprint_r>
 8003c1c:	2800      	cmp	r0, #0
 8003c1e:	d14c      	bne.n	8003cba <_svfprintf_r+0xec2>
 8003c20:	ac2c      	add	r4, sp, #176	; 0xb0
 8003c22:	e7c5      	b.n	8003bb0 <_svfprintf_r+0xdb8>
 8003c24:	2e00      	cmp	r6, #0
 8003c26:	dde3      	ble.n	8003bf0 <_svfprintf_r+0xdf8>
 8003c28:	4f59      	ldr	r7, [pc, #356]	; (8003d90 <_svfprintf_r+0xf98>)
 8003c2a:	f04f 0810 	mov.w	r8, #16
 8003c2e:	2e10      	cmp	r6, #16
 8003c30:	6027      	str	r7, [r4, #0]
 8003c32:	dc04      	bgt.n	8003c3e <_svfprintf_r+0xe46>
 8003c34:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003c36:	6066      	str	r6, [r4, #4]
 8003c38:	441e      	add	r6, r3
 8003c3a:	9621      	str	r6, [sp, #132]	; 0x84
 8003c3c:	e7cb      	b.n	8003bd6 <_svfprintf_r+0xdde>
 8003c3e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003c40:	f8c4 8004 	str.w	r8, [r4, #4]
 8003c44:	3310      	adds	r3, #16
 8003c46:	9321      	str	r3, [sp, #132]	; 0x84
 8003c48:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003c4a:	3301      	adds	r3, #1
 8003c4c:	2b07      	cmp	r3, #7
 8003c4e:	9320      	str	r3, [sp, #128]	; 0x80
 8003c50:	dc02      	bgt.n	8003c58 <_svfprintf_r+0xe60>
 8003c52:	3408      	adds	r4, #8
 8003c54:	3e10      	subs	r6, #16
 8003c56:	e7ea      	b.n	8003c2e <_svfprintf_r+0xe36>
 8003c58:	aa1f      	add	r2, sp, #124	; 0x7c
 8003c5a:	4651      	mov	r1, sl
 8003c5c:	4658      	mov	r0, fp
 8003c5e:	f003 fca4 	bl	80075aa <__ssprint_r>
 8003c62:	bb50      	cbnz	r0, 8003cba <_svfprintf_r+0xec2>
 8003c64:	ac2c      	add	r4, sp, #176	; 0xb0
 8003c66:	e7f5      	b.n	8003c54 <_svfprintf_r+0xe5c>
 8003c68:	2301      	movs	r3, #1
 8003c6a:	6063      	str	r3, [r4, #4]
 8003c6c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003c6e:	f8c4 8000 	str.w	r8, [r4]
 8003c72:	3301      	adds	r3, #1
 8003c74:	e7ae      	b.n	8003bd4 <_svfprintf_r+0xddc>
 8003c76:	3408      	adds	r4, #8
 8003c78:	e7ba      	b.n	8003bf0 <_svfprintf_r+0xdf8>
 8003c7a:	3408      	adds	r4, #8
 8003c7c:	f7ff bbed 	b.w	800345a <_svfprintf_r+0x662>
 8003c80:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003c82:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8003c84:	1a9d      	subs	r5, r3, r2
 8003c86:	2d00      	cmp	r5, #0
 8003c88:	f77f abea 	ble.w	8003460 <_svfprintf_r+0x668>
 8003c8c:	2610      	movs	r6, #16
 8003c8e:	4b41      	ldr	r3, [pc, #260]	; (8003d94 <_svfprintf_r+0xf9c>)
 8003c90:	6023      	str	r3, [r4, #0]
 8003c92:	2d10      	cmp	r5, #16
 8003c94:	dc1b      	bgt.n	8003cce <_svfprintf_r+0xed6>
 8003c96:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003c98:	6065      	str	r5, [r4, #4]
 8003c9a:	441d      	add	r5, r3
 8003c9c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003c9e:	9521      	str	r5, [sp, #132]	; 0x84
 8003ca0:	3301      	adds	r3, #1
 8003ca2:	2b07      	cmp	r3, #7
 8003ca4:	9320      	str	r3, [sp, #128]	; 0x80
 8003ca6:	f77f abdb 	ble.w	8003460 <_svfprintf_r+0x668>
 8003caa:	aa1f      	add	r2, sp, #124	; 0x7c
 8003cac:	4651      	mov	r1, sl
 8003cae:	4658      	mov	r0, fp
 8003cb0:	f003 fc7b 	bl	80075aa <__ssprint_r>
 8003cb4:	2800      	cmp	r0, #0
 8003cb6:	f43f abd3 	beq.w	8003460 <_svfprintf_r+0x668>
 8003cba:	f8ba 300c 	ldrh.w	r3, [sl, #12]
 8003cbe:	f013 0f40 	tst.w	r3, #64	; 0x40
 8003cc2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003cc4:	bf18      	it	ne
 8003cc6:	f04f 33ff 	movne.w	r3, #4294967295
 8003cca:	f7ff b8b9 	b.w	8002e40 <_svfprintf_r+0x48>
 8003cce:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003cd0:	6066      	str	r6, [r4, #4]
 8003cd2:	3310      	adds	r3, #16
 8003cd4:	9321      	str	r3, [sp, #132]	; 0x84
 8003cd6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003cd8:	3301      	adds	r3, #1
 8003cda:	2b07      	cmp	r3, #7
 8003cdc:	9320      	str	r3, [sp, #128]	; 0x80
 8003cde:	dc02      	bgt.n	8003ce6 <_svfprintf_r+0xeee>
 8003ce0:	3408      	adds	r4, #8
 8003ce2:	3d10      	subs	r5, #16
 8003ce4:	e7d3      	b.n	8003c8e <_svfprintf_r+0xe96>
 8003ce6:	aa1f      	add	r2, sp, #124	; 0x7c
 8003ce8:	4651      	mov	r1, sl
 8003cea:	4658      	mov	r0, fp
 8003cec:	f003 fc5d 	bl	80075aa <__ssprint_r>
 8003cf0:	2800      	cmp	r0, #0
 8003cf2:	d1e2      	bne.n	8003cba <_svfprintf_r+0xec2>
 8003cf4:	ac2c      	add	r4, sp, #176	; 0xb0
 8003cf6:	e7f4      	b.n	8003ce2 <_svfprintf_r+0xeea>
 8003cf8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003cfa:	2b00      	cmp	r3, #0
 8003cfc:	d0dd      	beq.n	8003cba <_svfprintf_r+0xec2>
 8003cfe:	aa1f      	add	r2, sp, #124	; 0x7c
 8003d00:	4651      	mov	r1, sl
 8003d02:	4658      	mov	r0, fp
 8003d04:	f003 fc51 	bl	80075aa <__ssprint_r>
 8003d08:	e7d7      	b.n	8003cba <_svfprintf_r+0xec2>
 8003d0a:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8003d0e:	4610      	mov	r0, r2
 8003d10:	4619      	mov	r1, r3
 8003d12:	f7fc ff0f 	bl	8000b34 <__aeabi_dcmpun>
 8003d16:	2800      	cmp	r0, #0
 8003d18:	f43f aa44 	beq.w	80031a4 <_svfprintf_r+0x3ac>
 8003d1c:	4b1e      	ldr	r3, [pc, #120]	; (8003d98 <_svfprintf_r+0xfa0>)
 8003d1e:	4a1f      	ldr	r2, [pc, #124]	; (8003d9c <_svfprintf_r+0xfa4>)
 8003d20:	f7ff ba34 	b.w	800318c <_svfprintf_r+0x394>
 8003d24:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8003d26:	eba3 0308 	sub.w	r3, r3, r8
 8003d2a:	9303      	str	r3, [sp, #12]
 8003d2c:	f7ff bab5 	b.w	800329a <_svfprintf_r+0x4a2>
 8003d30:	ea56 0207 	orrs.w	r2, r6, r7
 8003d34:	950b      	str	r5, [sp, #44]	; 0x2c
 8003d36:	f43f ac2b 	beq.w	8003590 <_svfprintf_r+0x798>
 8003d3a:	2b01      	cmp	r3, #1
 8003d3c:	f43f ac9d 	beq.w	800367a <_svfprintf_r+0x882>
 8003d40:	2b02      	cmp	r3, #2
 8003d42:	f43f acbd 	beq.w	80036c0 <_svfprintf_r+0x8c8>
 8003d46:	ab2c      	add	r3, sp, #176	; 0xb0
 8003d48:	08f1      	lsrs	r1, r6, #3
 8003d4a:	ea41 7147 	orr.w	r1, r1, r7, lsl #29
 8003d4e:	08f8      	lsrs	r0, r7, #3
 8003d50:	f006 0207 	and.w	r2, r6, #7
 8003d54:	4607      	mov	r7, r0
 8003d56:	460e      	mov	r6, r1
 8003d58:	3230      	adds	r2, #48	; 0x30
 8003d5a:	ea56 0107 	orrs.w	r1, r6, r7
 8003d5e:	f103 38ff 	add.w	r8, r3, #4294967295
 8003d62:	f803 2c01 	strb.w	r2, [r3, #-1]
 8003d66:	f47f ac86 	bne.w	8003676 <_svfprintf_r+0x87e>
 8003d6a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8003d6c:	07c9      	lsls	r1, r1, #31
 8003d6e:	d506      	bpl.n	8003d7e <_svfprintf_r+0xf86>
 8003d70:	2a30      	cmp	r2, #48	; 0x30
 8003d72:	d004      	beq.n	8003d7e <_svfprintf_r+0xf86>
 8003d74:	2230      	movs	r2, #48	; 0x30
 8003d76:	f808 2c01 	strb.w	r2, [r8, #-1]
 8003d7a:	f1a3 0802 	sub.w	r8, r3, #2
 8003d7e:	464e      	mov	r6, r9
 8003d80:	f10d 09b0 	add.w	r9, sp, #176	; 0xb0
 8003d84:	eba9 0908 	sub.w	r9, r9, r8
 8003d88:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8003d8a:	2700      	movs	r7, #0
 8003d8c:	f7ff bad1 	b.w	8003332 <_svfprintf_r+0x53a>
 8003d90:	0800846e 	.word	0x0800846e
 8003d94:	0800845e 	.word	0x0800845e
 8003d98:	08008432 	.word	0x08008432
 8003d9c:	08008436 	.word	0x08008436

08003da0 <_vfprintf_r>:
 8003da0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003da4:	b0bd      	sub	sp, #244	; 0xf4
 8003da6:	4688      	mov	r8, r1
 8003da8:	4615      	mov	r5, r2
 8003daa:	461c      	mov	r4, r3
 8003dac:	461f      	mov	r7, r3
 8003dae:	4683      	mov	fp, r0
 8003db0:	f002 fbea 	bl	8006588 <_localeconv_r>
 8003db4:	6803      	ldr	r3, [r0, #0]
 8003db6:	930d      	str	r3, [sp, #52]	; 0x34
 8003db8:	4618      	mov	r0, r3
 8003dba:	f7fc fa11 	bl	80001e0 <strlen>
 8003dbe:	9009      	str	r0, [sp, #36]	; 0x24
 8003dc0:	f1bb 0f00 	cmp.w	fp, #0
 8003dc4:	d005      	beq.n	8003dd2 <_vfprintf_r+0x32>
 8003dc6:	f8db 3018 	ldr.w	r3, [fp, #24]
 8003dca:	b913      	cbnz	r3, 8003dd2 <_vfprintf_r+0x32>
 8003dcc:	4658      	mov	r0, fp
 8003dce:	f002 f8c1 	bl	8005f54 <__sinit>
 8003dd2:	4b99      	ldr	r3, [pc, #612]	; (8004038 <_vfprintf_r+0x298>)
 8003dd4:	4598      	cmp	r8, r3
 8003dd6:	d137      	bne.n	8003e48 <_vfprintf_r+0xa8>
 8003dd8:	f8db 8004 	ldr.w	r8, [fp, #4]
 8003ddc:	f8d8 3064 	ldr.w	r3, [r8, #100]	; 0x64
 8003de0:	07d8      	lsls	r0, r3, #31
 8003de2:	d407      	bmi.n	8003df4 <_vfprintf_r+0x54>
 8003de4:	f8b8 300c 	ldrh.w	r3, [r8, #12]
 8003de8:	0599      	lsls	r1, r3, #22
 8003dea:	d403      	bmi.n	8003df4 <_vfprintf_r+0x54>
 8003dec:	f8d8 0058 	ldr.w	r0, [r8, #88]	; 0x58
 8003df0:	f002 fbda 	bl	80065a8 <__retarget_lock_acquire_recursive>
 8003df4:	f9b8 300c 	ldrsh.w	r3, [r8, #12]
 8003df8:	049a      	lsls	r2, r3, #18
 8003dfa:	d409      	bmi.n	8003e10 <_vfprintf_r+0x70>
 8003dfc:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8003e00:	f8a8 300c 	strh.w	r3, [r8, #12]
 8003e04:	f8d8 3064 	ldr.w	r3, [r8, #100]	; 0x64
 8003e08:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8003e0c:	f8c8 3064 	str.w	r3, [r8, #100]	; 0x64
 8003e10:	f8b8 300c 	ldrh.w	r3, [r8, #12]
 8003e14:	071e      	lsls	r6, r3, #28
 8003e16:	d502      	bpl.n	8003e1e <_vfprintf_r+0x7e>
 8003e18:	f8d8 3010 	ldr.w	r3, [r8, #16]
 8003e1c:	bb03      	cbnz	r3, 8003e60 <_vfprintf_r+0xc0>
 8003e1e:	4641      	mov	r1, r8
 8003e20:	4658      	mov	r0, fp
 8003e22:	f001 f897 	bl	8004f54 <__swsetup_r>
 8003e26:	b1d8      	cbz	r0, 8003e60 <_vfprintf_r+0xc0>
 8003e28:	f8d8 3064 	ldr.w	r3, [r8, #100]	; 0x64
 8003e2c:	07dd      	lsls	r5, r3, #31
 8003e2e:	d407      	bmi.n	8003e40 <_vfprintf_r+0xa0>
 8003e30:	f8b8 300c 	ldrh.w	r3, [r8, #12]
 8003e34:	059c      	lsls	r4, r3, #22
 8003e36:	d403      	bmi.n	8003e40 <_vfprintf_r+0xa0>
 8003e38:	f8d8 0058 	ldr.w	r0, [r8, #88]	; 0x58
 8003e3c:	f002 fbb5 	bl	80065aa <__retarget_lock_release_recursive>
 8003e40:	f04f 33ff 	mov.w	r3, #4294967295
 8003e44:	930a      	str	r3, [sp, #40]	; 0x28
 8003e46:	e026      	b.n	8003e96 <_vfprintf_r+0xf6>
 8003e48:	4b7c      	ldr	r3, [pc, #496]	; (800403c <_vfprintf_r+0x29c>)
 8003e4a:	4598      	cmp	r8, r3
 8003e4c:	d102      	bne.n	8003e54 <_vfprintf_r+0xb4>
 8003e4e:	f8db 8008 	ldr.w	r8, [fp, #8]
 8003e52:	e7c3      	b.n	8003ddc <_vfprintf_r+0x3c>
 8003e54:	4b7a      	ldr	r3, [pc, #488]	; (8004040 <_vfprintf_r+0x2a0>)
 8003e56:	4598      	cmp	r8, r3
 8003e58:	bf08      	it	eq
 8003e5a:	f8db 800c 	ldreq.w	r8, [fp, #12]
 8003e5e:	e7bd      	b.n	8003ddc <_vfprintf_r+0x3c>
 8003e60:	f8b8 300c 	ldrh.w	r3, [r8, #12]
 8003e64:	f003 021a 	and.w	r2, r3, #26
 8003e68:	2a0a      	cmp	r2, #10
 8003e6a:	d118      	bne.n	8003e9e <_vfprintf_r+0xfe>
 8003e6c:	f9b8 200e 	ldrsh.w	r2, [r8, #14]
 8003e70:	2a00      	cmp	r2, #0
 8003e72:	db14      	blt.n	8003e9e <_vfprintf_r+0xfe>
 8003e74:	f8d8 2064 	ldr.w	r2, [r8, #100]	; 0x64
 8003e78:	07d0      	lsls	r0, r2, #31
 8003e7a:	d405      	bmi.n	8003e88 <_vfprintf_r+0xe8>
 8003e7c:	0599      	lsls	r1, r3, #22
 8003e7e:	d403      	bmi.n	8003e88 <_vfprintf_r+0xe8>
 8003e80:	f8d8 0058 	ldr.w	r0, [r8, #88]	; 0x58
 8003e84:	f002 fb91 	bl	80065aa <__retarget_lock_release_recursive>
 8003e88:	4623      	mov	r3, r4
 8003e8a:	462a      	mov	r2, r5
 8003e8c:	4641      	mov	r1, r8
 8003e8e:	4658      	mov	r0, fp
 8003e90:	f000 ffc2 	bl	8004e18 <__sbprintf>
 8003e94:	900a      	str	r0, [sp, #40]	; 0x28
 8003e96:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003e98:	b03d      	add	sp, #244	; 0xf4
 8003e9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003e9e:	ed9f 7b64 	vldr	d7, [pc, #400]	; 8004030 <_vfprintf_r+0x290>
 8003ea2:	ed8d 7b06 	vstr	d7, [sp, #24]
 8003ea6:	2300      	movs	r3, #0
 8003ea8:	ac2c      	add	r4, sp, #176	; 0xb0
 8003eaa:	941f      	str	r4, [sp, #124]	; 0x7c
 8003eac:	9321      	str	r3, [sp, #132]	; 0x84
 8003eae:	9320      	str	r3, [sp, #128]	; 0x80
 8003eb0:	9505      	str	r5, [sp, #20]
 8003eb2:	9303      	str	r3, [sp, #12]
 8003eb4:	9311      	str	r3, [sp, #68]	; 0x44
 8003eb6:	9310      	str	r3, [sp, #64]	; 0x40
 8003eb8:	930a      	str	r3, [sp, #40]	; 0x28
 8003eba:	9d05      	ldr	r5, [sp, #20]
 8003ebc:	462b      	mov	r3, r5
 8003ebe:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003ec2:	b112      	cbz	r2, 8003eca <_vfprintf_r+0x12a>
 8003ec4:	2a25      	cmp	r2, #37	; 0x25
 8003ec6:	f040 8083 	bne.w	8003fd0 <_vfprintf_r+0x230>
 8003eca:	9b05      	ldr	r3, [sp, #20]
 8003ecc:	1aee      	subs	r6, r5, r3
 8003ece:	d00d      	beq.n	8003eec <_vfprintf_r+0x14c>
 8003ed0:	e884 0048 	stmia.w	r4, {r3, r6}
 8003ed4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003ed6:	4433      	add	r3, r6
 8003ed8:	9321      	str	r3, [sp, #132]	; 0x84
 8003eda:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003edc:	3301      	adds	r3, #1
 8003ede:	2b07      	cmp	r3, #7
 8003ee0:	9320      	str	r3, [sp, #128]	; 0x80
 8003ee2:	dc77      	bgt.n	8003fd4 <_vfprintf_r+0x234>
 8003ee4:	3408      	adds	r4, #8
 8003ee6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003ee8:	4433      	add	r3, r6
 8003eea:	930a      	str	r3, [sp, #40]	; 0x28
 8003eec:	782b      	ldrb	r3, [r5, #0]
 8003eee:	2b00      	cmp	r3, #0
 8003ef0:	f000 8739 	beq.w	8004d66 <_vfprintf_r+0xfc6>
 8003ef4:	2300      	movs	r3, #0
 8003ef6:	1c69      	adds	r1, r5, #1
 8003ef8:	f88d 305f 	strb.w	r3, [sp, #95]	; 0x5f
 8003efc:	461a      	mov	r2, r3
 8003efe:	f04f 3aff 	mov.w	sl, #4294967295
 8003f02:	930b      	str	r3, [sp, #44]	; 0x2c
 8003f04:	461d      	mov	r5, r3
 8003f06:	200a      	movs	r0, #10
 8003f08:	1c4e      	adds	r6, r1, #1
 8003f0a:	7809      	ldrb	r1, [r1, #0]
 8003f0c:	9605      	str	r6, [sp, #20]
 8003f0e:	9102      	str	r1, [sp, #8]
 8003f10:	9902      	ldr	r1, [sp, #8]
 8003f12:	3920      	subs	r1, #32
 8003f14:	2958      	cmp	r1, #88	; 0x58
 8003f16:	f200 841d 	bhi.w	8004754 <_vfprintf_r+0x9b4>
 8003f1a:	e8df f011 	tbh	[pc, r1, lsl #1]
 8003f1e:	00b3      	.short	0x00b3
 8003f20:	041b041b 	.word	0x041b041b
 8003f24:	041b00b8 	.word	0x041b00b8
 8003f28:	041b041b 	.word	0x041b041b
 8003f2c:	041b041b 	.word	0x041b041b
 8003f30:	00bb041b 	.word	0x00bb041b
 8003f34:	041b0065 	.word	0x041b0065
 8003f38:	00c700c4 	.word	0x00c700c4
 8003f3c:	00e4041b 	.word	0x00e4041b
 8003f40:	00e700e7 	.word	0x00e700e7
 8003f44:	00e700e7 	.word	0x00e700e7
 8003f48:	00e700e7 	.word	0x00e700e7
 8003f4c:	00e700e7 	.word	0x00e700e7
 8003f50:	041b00e7 	.word	0x041b00e7
 8003f54:	041b041b 	.word	0x041b041b
 8003f58:	041b041b 	.word	0x041b041b
 8003f5c:	041b041b 	.word	0x041b041b
 8003f60:	041b041b 	.word	0x041b041b
 8003f64:	011b041b 	.word	0x011b041b
 8003f68:	041b0131 	.word	0x041b0131
 8003f6c:	041b0131 	.word	0x041b0131
 8003f70:	041b041b 	.word	0x041b041b
 8003f74:	00fa041b 	.word	0x00fa041b
 8003f78:	041b041b 	.word	0x041b041b
 8003f7c:	041b0346 	.word	0x041b0346
 8003f80:	041b041b 	.word	0x041b041b
 8003f84:	041b041b 	.word	0x041b041b
 8003f88:	041b03ad 	.word	0x041b03ad
 8003f8c:	0093041b 	.word	0x0093041b
 8003f90:	041b041b 	.word	0x041b041b
 8003f94:	041b041b 	.word	0x041b041b
 8003f98:	041b041b 	.word	0x041b041b
 8003f9c:	041b041b 	.word	0x041b041b
 8003fa0:	041b041b 	.word	0x041b041b
 8003fa4:	006b010d 	.word	0x006b010d
 8003fa8:	01310131 	.word	0x01310131
 8003fac:	00fd0131 	.word	0x00fd0131
 8003fb0:	041b006b 	.word	0x041b006b
 8003fb4:	0100041b 	.word	0x0100041b
 8003fb8:	0328041b 	.word	0x0328041b
 8003fbc:	037c0348 	.word	0x037c0348
 8003fc0:	041b0107 	.word	0x041b0107
 8003fc4:	041b038d 	.word	0x041b038d
 8003fc8:	041b03af 	.word	0x041b03af
 8003fcc:	03c7041b 	.word	0x03c7041b
 8003fd0:	461d      	mov	r5, r3
 8003fd2:	e773      	b.n	8003ebc <_vfprintf_r+0x11c>
 8003fd4:	aa1f      	add	r2, sp, #124	; 0x7c
 8003fd6:	4641      	mov	r1, r8
 8003fd8:	4658      	mov	r0, fp
 8003fda:	f003 fb60 	bl	800769e <__sprint_r>
 8003fde:	2800      	cmp	r0, #0
 8003fe0:	f040 8699 	bne.w	8004d16 <_vfprintf_r+0xf76>
 8003fe4:	ac2c      	add	r4, sp, #176	; 0xb0
 8003fe6:	e77e      	b.n	8003ee6 <_vfprintf_r+0x146>
 8003fe8:	2301      	movs	r3, #1
 8003fea:	222b      	movs	r2, #43	; 0x2b
 8003fec:	9905      	ldr	r1, [sp, #20]
 8003fee:	e78b      	b.n	8003f08 <_vfprintf_r+0x168>
 8003ff0:	460f      	mov	r7, r1
 8003ff2:	e7fb      	b.n	8003fec <_vfprintf_r+0x24c>
 8003ff4:	b10b      	cbz	r3, 8003ffa <_vfprintf_r+0x25a>
 8003ff6:	f88d 205f 	strb.w	r2, [sp, #95]	; 0x5f
 8003ffa:	06aa      	lsls	r2, r5, #26
 8003ffc:	f140 80b0 	bpl.w	8004160 <_vfprintf_r+0x3c0>
 8004000:	3707      	adds	r7, #7
 8004002:	f027 0707 	bic.w	r7, r7, #7
 8004006:	f107 0308 	add.w	r3, r7, #8
 800400a:	e9d7 6700 	ldrd	r6, r7, [r7]
 800400e:	9304      	str	r3, [sp, #16]
 8004010:	2e00      	cmp	r6, #0
 8004012:	f177 0300 	sbcs.w	r3, r7, #0
 8004016:	da06      	bge.n	8004026 <_vfprintf_r+0x286>
 8004018:	4276      	negs	r6, r6
 800401a:	f04f 032d 	mov.w	r3, #45	; 0x2d
 800401e:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
 8004022:	f88d 305f 	strb.w	r3, [sp, #95]	; 0x5f
 8004026:	2301      	movs	r3, #1
 8004028:	e2d0      	b.n	80045cc <_vfprintf_r+0x82c>
 800402a:	bf00      	nop
 800402c:	f3af 8000 	nop.w
	...
 8004038:	080084cc 	.word	0x080084cc
 800403c:	080084ec 	.word	0x080084ec
 8004040:	080084ac 	.word	0x080084ac
 8004044:	b10b      	cbz	r3, 800404a <_vfprintf_r+0x2aa>
 8004046:	f88d 205f 	strb.w	r2, [sp, #95]	; 0x5f
 800404a:	4ba2      	ldr	r3, [pc, #648]	; (80042d4 <_vfprintf_r+0x534>)
 800404c:	9311      	str	r3, [sp, #68]	; 0x44
 800404e:	06a9      	lsls	r1, r5, #26
 8004050:	f140 8331 	bpl.w	80046b6 <_vfprintf_r+0x916>
 8004054:	3707      	adds	r7, #7
 8004056:	f027 0707 	bic.w	r7, r7, #7
 800405a:	f107 0308 	add.w	r3, r7, #8
 800405e:	e9d7 6700 	ldrd	r6, r7, [r7]
 8004062:	9304      	str	r3, [sp, #16]
 8004064:	07eb      	lsls	r3, r5, #31
 8004066:	d50b      	bpl.n	8004080 <_vfprintf_r+0x2e0>
 8004068:	ea56 0307 	orrs.w	r3, r6, r7
 800406c:	d008      	beq.n	8004080 <_vfprintf_r+0x2e0>
 800406e:	2330      	movs	r3, #48	; 0x30
 8004070:	f88d 3060 	strb.w	r3, [sp, #96]	; 0x60
 8004074:	f89d 3008 	ldrb.w	r3, [sp, #8]
 8004078:	f88d 3061 	strb.w	r3, [sp, #97]	; 0x61
 800407c:	f045 0502 	orr.w	r5, r5, #2
 8004080:	2302      	movs	r3, #2
 8004082:	e2a0      	b.n	80045c6 <_vfprintf_r+0x826>
 8004084:	2a00      	cmp	r2, #0
 8004086:	d1b1      	bne.n	8003fec <_vfprintf_r+0x24c>
 8004088:	2301      	movs	r3, #1
 800408a:	2220      	movs	r2, #32
 800408c:	e7ae      	b.n	8003fec <_vfprintf_r+0x24c>
 800408e:	f045 0501 	orr.w	r5, r5, #1
 8004092:	e7ab      	b.n	8003fec <_vfprintf_r+0x24c>
 8004094:	683e      	ldr	r6, [r7, #0]
 8004096:	960b      	str	r6, [sp, #44]	; 0x2c
 8004098:	2e00      	cmp	r6, #0
 800409a:	f107 0104 	add.w	r1, r7, #4
 800409e:	daa7      	bge.n	8003ff0 <_vfprintf_r+0x250>
 80040a0:	4276      	negs	r6, r6
 80040a2:	960b      	str	r6, [sp, #44]	; 0x2c
 80040a4:	460f      	mov	r7, r1
 80040a6:	f045 0504 	orr.w	r5, r5, #4
 80040aa:	e79f      	b.n	8003fec <_vfprintf_r+0x24c>
 80040ac:	9905      	ldr	r1, [sp, #20]
 80040ae:	1c4e      	adds	r6, r1, #1
 80040b0:	7809      	ldrb	r1, [r1, #0]
 80040b2:	9102      	str	r1, [sp, #8]
 80040b4:	292a      	cmp	r1, #42	; 0x2a
 80040b6:	d010      	beq.n	80040da <_vfprintf_r+0x33a>
 80040b8:	f04f 0a00 	mov.w	sl, #0
 80040bc:	9605      	str	r6, [sp, #20]
 80040be:	9902      	ldr	r1, [sp, #8]
 80040c0:	3930      	subs	r1, #48	; 0x30
 80040c2:	2909      	cmp	r1, #9
 80040c4:	f63f af24 	bhi.w	8003f10 <_vfprintf_r+0x170>
 80040c8:	fb00 1a0a 	mla	sl, r0, sl, r1
 80040cc:	9905      	ldr	r1, [sp, #20]
 80040ce:	460e      	mov	r6, r1
 80040d0:	f816 1b01 	ldrb.w	r1, [r6], #1
 80040d4:	9102      	str	r1, [sp, #8]
 80040d6:	9605      	str	r6, [sp, #20]
 80040d8:	e7f1      	b.n	80040be <_vfprintf_r+0x31e>
 80040da:	6839      	ldr	r1, [r7, #0]
 80040dc:	9605      	str	r6, [sp, #20]
 80040de:	ea41 7ae1 	orr.w	sl, r1, r1, asr #31
 80040e2:	3704      	adds	r7, #4
 80040e4:	e782      	b.n	8003fec <_vfprintf_r+0x24c>
 80040e6:	f045 0580 	orr.w	r5, r5, #128	; 0x80
 80040ea:	e77f      	b.n	8003fec <_vfprintf_r+0x24c>
 80040ec:	2100      	movs	r1, #0
 80040ee:	910b      	str	r1, [sp, #44]	; 0x2c
 80040f0:	9902      	ldr	r1, [sp, #8]
 80040f2:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80040f4:	3930      	subs	r1, #48	; 0x30
 80040f6:	fb00 1106 	mla	r1, r0, r6, r1
 80040fa:	910b      	str	r1, [sp, #44]	; 0x2c
 80040fc:	9905      	ldr	r1, [sp, #20]
 80040fe:	460e      	mov	r6, r1
 8004100:	f816 1b01 	ldrb.w	r1, [r6], #1
 8004104:	9102      	str	r1, [sp, #8]
 8004106:	9902      	ldr	r1, [sp, #8]
 8004108:	9605      	str	r6, [sp, #20]
 800410a:	3930      	subs	r1, #48	; 0x30
 800410c:	2909      	cmp	r1, #9
 800410e:	d9ef      	bls.n	80040f0 <_vfprintf_r+0x350>
 8004110:	e6fe      	b.n	8003f10 <_vfprintf_r+0x170>
 8004112:	f045 0508 	orr.w	r5, r5, #8
 8004116:	e769      	b.n	8003fec <_vfprintf_r+0x24c>
 8004118:	f045 0540 	orr.w	r5, r5, #64	; 0x40
 800411c:	e766      	b.n	8003fec <_vfprintf_r+0x24c>
 800411e:	9905      	ldr	r1, [sp, #20]
 8004120:	7809      	ldrb	r1, [r1, #0]
 8004122:	296c      	cmp	r1, #108	; 0x6c
 8004124:	d105      	bne.n	8004132 <_vfprintf_r+0x392>
 8004126:	9905      	ldr	r1, [sp, #20]
 8004128:	3101      	adds	r1, #1
 800412a:	9105      	str	r1, [sp, #20]
 800412c:	f045 0520 	orr.w	r5, r5, #32
 8004130:	e75c      	b.n	8003fec <_vfprintf_r+0x24c>
 8004132:	f045 0510 	orr.w	r5, r5, #16
 8004136:	e759      	b.n	8003fec <_vfprintf_r+0x24c>
 8004138:	1d3b      	adds	r3, r7, #4
 800413a:	9304      	str	r3, [sp, #16]
 800413c:	2600      	movs	r6, #0
 800413e:	683b      	ldr	r3, [r7, #0]
 8004140:	f88d 3088 	strb.w	r3, [sp, #136]	; 0x88
 8004144:	f88d 605f 	strb.w	r6, [sp, #95]	; 0x5f
 8004148:	f04f 0a01 	mov.w	sl, #1
 800414c:	9608      	str	r6, [sp, #32]
 800414e:	f10d 0988 	add.w	r9, sp, #136	; 0x88
 8004152:	e11e      	b.n	8004392 <_vfprintf_r+0x5f2>
 8004154:	b10b      	cbz	r3, 800415a <_vfprintf_r+0x3ba>
 8004156:	f88d 205f 	strb.w	r2, [sp, #95]	; 0x5f
 800415a:	f045 0510 	orr.w	r5, r5, #16
 800415e:	e74c      	b.n	8003ffa <_vfprintf_r+0x25a>
 8004160:	f015 0f10 	tst.w	r5, #16
 8004164:	f107 0304 	add.w	r3, r7, #4
 8004168:	d003      	beq.n	8004172 <_vfprintf_r+0x3d2>
 800416a:	683e      	ldr	r6, [r7, #0]
 800416c:	9304      	str	r3, [sp, #16]
 800416e:	17f7      	asrs	r7, r6, #31
 8004170:	e74e      	b.n	8004010 <_vfprintf_r+0x270>
 8004172:	683e      	ldr	r6, [r7, #0]
 8004174:	9304      	str	r3, [sp, #16]
 8004176:	f015 0f40 	tst.w	r5, #64	; 0x40
 800417a:	bf18      	it	ne
 800417c:	b236      	sxthne	r6, r6
 800417e:	e7f6      	b.n	800416e <_vfprintf_r+0x3ce>
 8004180:	b10b      	cbz	r3, 8004186 <_vfprintf_r+0x3e6>
 8004182:	f88d 205f 	strb.w	r2, [sp, #95]	; 0x5f
 8004186:	3707      	adds	r7, #7
 8004188:	f027 0707 	bic.w	r7, r7, #7
 800418c:	f107 0308 	add.w	r3, r7, #8
 8004190:	9304      	str	r3, [sp, #16]
 8004192:	ed97 7b00 	vldr	d7, [r7]
 8004196:	ed8d 7b06 	vstr	d7, [sp, #24]
 800419a:	9b06      	ldr	r3, [sp, #24]
 800419c:	9312      	str	r3, [sp, #72]	; 0x48
 800419e:	9b07      	ldr	r3, [sp, #28]
 80041a0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80041a4:	9313      	str	r3, [sp, #76]	; 0x4c
 80041a6:	f04f 32ff 	mov.w	r2, #4294967295
 80041aa:	4b4b      	ldr	r3, [pc, #300]	; (80042d8 <_vfprintf_r+0x538>)
 80041ac:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
 80041b0:	f7fc fcc0 	bl	8000b34 <__aeabi_dcmpun>
 80041b4:	2800      	cmp	r0, #0
 80041b6:	f040 85e3 	bne.w	8004d80 <_vfprintf_r+0xfe0>
 80041ba:	f04f 32ff 	mov.w	r2, #4294967295
 80041be:	4b46      	ldr	r3, [pc, #280]	; (80042d8 <_vfprintf_r+0x538>)
 80041c0:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
 80041c4:	f7fc fc98 	bl	8000af8 <__aeabi_dcmple>
 80041c8:	2800      	cmp	r0, #0
 80041ca:	f040 85d9 	bne.w	8004d80 <_vfprintf_r+0xfe0>
 80041ce:	2200      	movs	r2, #0
 80041d0:	2300      	movs	r3, #0
 80041d2:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80041d6:	f7fc fc85 	bl	8000ae4 <__aeabi_dcmplt>
 80041da:	b110      	cbz	r0, 80041e2 <_vfprintf_r+0x442>
 80041dc:	232d      	movs	r3, #45	; 0x2d
 80041de:	f88d 305f 	strb.w	r3, [sp, #95]	; 0x5f
 80041e2:	4b3e      	ldr	r3, [pc, #248]	; (80042dc <_vfprintf_r+0x53c>)
 80041e4:	4a3e      	ldr	r2, [pc, #248]	; (80042e0 <_vfprintf_r+0x540>)
 80041e6:	9902      	ldr	r1, [sp, #8]
 80041e8:	f025 0580 	bic.w	r5, r5, #128	; 0x80
 80041ec:	2947      	cmp	r1, #71	; 0x47
 80041ee:	bfcc      	ite	gt
 80041f0:	4691      	movgt	r9, r2
 80041f2:	4699      	movle	r9, r3
 80041f4:	f04f 0a03 	mov.w	sl, #3
 80041f8:	2600      	movs	r6, #0
 80041fa:	9608      	str	r6, [sp, #32]
 80041fc:	e0c9      	b.n	8004392 <_vfprintf_r+0x5f2>
 80041fe:	f1ba 3fff 	cmp.w	sl, #4294967295
 8004202:	d022      	beq.n	800424a <_vfprintf_r+0x4aa>
 8004204:	9b02      	ldr	r3, [sp, #8]
 8004206:	f023 0320 	bic.w	r3, r3, #32
 800420a:	2b47      	cmp	r3, #71	; 0x47
 800420c:	d104      	bne.n	8004218 <_vfprintf_r+0x478>
 800420e:	f1ba 0f00 	cmp.w	sl, #0
 8004212:	bf08      	it	eq
 8004214:	f04f 0a01 	moveq.w	sl, #1
 8004218:	f445 7380 	orr.w	r3, r5, #256	; 0x100
 800421c:	9314      	str	r3, [sp, #80]	; 0x50
 800421e:	9b07      	ldr	r3, [sp, #28]
 8004220:	2b00      	cmp	r3, #0
 8004222:	da15      	bge.n	8004250 <_vfprintf_r+0x4b0>
 8004224:	9b06      	ldr	r3, [sp, #24]
 8004226:	930e      	str	r3, [sp, #56]	; 0x38
 8004228:	9b07      	ldr	r3, [sp, #28]
 800422a:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 800422e:	930f      	str	r3, [sp, #60]	; 0x3c
 8004230:	232d      	movs	r3, #45	; 0x2d
 8004232:	930c      	str	r3, [sp, #48]	; 0x30
 8004234:	9b02      	ldr	r3, [sp, #8]
 8004236:	f023 0720 	bic.w	r7, r3, #32
 800423a:	2f46      	cmp	r7, #70	; 0x46
 800423c:	d00e      	beq.n	800425c <_vfprintf_r+0x4bc>
 800423e:	2f45      	cmp	r7, #69	; 0x45
 8004240:	d146      	bne.n	80042d0 <_vfprintf_r+0x530>
 8004242:	f10a 0601 	add.w	r6, sl, #1
 8004246:	2102      	movs	r1, #2
 8004248:	e00a      	b.n	8004260 <_vfprintf_r+0x4c0>
 800424a:	f04f 0a06 	mov.w	sl, #6
 800424e:	e7e3      	b.n	8004218 <_vfprintf_r+0x478>
 8004250:	ed9d 7b06 	vldr	d7, [sp, #24]
 8004254:	2300      	movs	r3, #0
 8004256:	ed8d 7b0e 	vstr	d7, [sp, #56]	; 0x38
 800425a:	e7ea      	b.n	8004232 <_vfprintf_r+0x492>
 800425c:	4656      	mov	r6, sl
 800425e:	2103      	movs	r1, #3
 8004260:	ab1d      	add	r3, sp, #116	; 0x74
 8004262:	9301      	str	r3, [sp, #4]
 8004264:	ab1a      	add	r3, sp, #104	; 0x68
 8004266:	9300      	str	r3, [sp, #0]
 8004268:	4632      	mov	r2, r6
 800426a:	ab19      	add	r3, sp, #100	; 0x64
 800426c:	ed9d 0b0e 	vldr	d0, [sp, #56]	; 0x38
 8004270:	4658      	mov	r0, fp
 8004272:	f000 ff69 	bl	8005148 <_dtoa_r>
 8004276:	2f47      	cmp	r7, #71	; 0x47
 8004278:	4681      	mov	r9, r0
 800427a:	d102      	bne.n	8004282 <_vfprintf_r+0x4e2>
 800427c:	07eb      	lsls	r3, r5, #31
 800427e:	f140 858c 	bpl.w	8004d9a <_vfprintf_r+0xffa>
 8004282:	eb09 0306 	add.w	r3, r9, r6
 8004286:	2f46      	cmp	r7, #70	; 0x46
 8004288:	9303      	str	r3, [sp, #12]
 800428a:	d111      	bne.n	80042b0 <_vfprintf_r+0x510>
 800428c:	f899 3000 	ldrb.w	r3, [r9]
 8004290:	2b30      	cmp	r3, #48	; 0x30
 8004292:	d109      	bne.n	80042a8 <_vfprintf_r+0x508>
 8004294:	2200      	movs	r2, #0
 8004296:	2300      	movs	r3, #0
 8004298:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 800429c:	f7fc fc18 	bl	8000ad0 <__aeabi_dcmpeq>
 80042a0:	b910      	cbnz	r0, 80042a8 <_vfprintf_r+0x508>
 80042a2:	f1c6 0601 	rsb	r6, r6, #1
 80042a6:	9619      	str	r6, [sp, #100]	; 0x64
 80042a8:	9a03      	ldr	r2, [sp, #12]
 80042aa:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80042ac:	441a      	add	r2, r3
 80042ae:	9203      	str	r2, [sp, #12]
 80042b0:	2200      	movs	r2, #0
 80042b2:	2300      	movs	r3, #0
 80042b4:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 80042b8:	f7fc fc0a 	bl	8000ad0 <__aeabi_dcmpeq>
 80042bc:	b990      	cbnz	r0, 80042e4 <_vfprintf_r+0x544>
 80042be:	2230      	movs	r2, #48	; 0x30
 80042c0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80042c2:	9903      	ldr	r1, [sp, #12]
 80042c4:	4299      	cmp	r1, r3
 80042c6:	d90f      	bls.n	80042e8 <_vfprintf_r+0x548>
 80042c8:	1c59      	adds	r1, r3, #1
 80042ca:	911d      	str	r1, [sp, #116]	; 0x74
 80042cc:	701a      	strb	r2, [r3, #0]
 80042ce:	e7f7      	b.n	80042c0 <_vfprintf_r+0x520>
 80042d0:	4656      	mov	r6, sl
 80042d2:	e7b8      	b.n	8004246 <_vfprintf_r+0x4a6>
 80042d4:	0800843a 	.word	0x0800843a
 80042d8:	7fefffff 	.word	0x7fefffff
 80042dc:	0800842a 	.word	0x0800842a
 80042e0:	0800842e 	.word	0x0800842e
 80042e4:	9b03      	ldr	r3, [sp, #12]
 80042e6:	931d      	str	r3, [sp, #116]	; 0x74
 80042e8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80042ea:	2f47      	cmp	r7, #71	; 0x47
 80042ec:	eba3 0309 	sub.w	r3, r3, r9
 80042f0:	9303      	str	r3, [sp, #12]
 80042f2:	f040 80f8 	bne.w	80044e6 <_vfprintf_r+0x746>
 80042f6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80042f8:	1cdf      	adds	r7, r3, #3
 80042fa:	db02      	blt.n	8004302 <_vfprintf_r+0x562>
 80042fc:	459a      	cmp	sl, r3
 80042fe:	f280 811f 	bge.w	8004540 <_vfprintf_r+0x7a0>
 8004302:	9b02      	ldr	r3, [sp, #8]
 8004304:	3b02      	subs	r3, #2
 8004306:	9302      	str	r3, [sp, #8]
 8004308:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800430a:	f89d 1008 	ldrb.w	r1, [sp, #8]
 800430e:	f88d 106c 	strb.w	r1, [sp, #108]	; 0x6c
 8004312:	1e53      	subs	r3, r2, #1
 8004314:	2b00      	cmp	r3, #0
 8004316:	9319      	str	r3, [sp, #100]	; 0x64
 8004318:	bfb6      	itet	lt
 800431a:	f1c2 0301 	rsblt	r3, r2, #1
 800431e:	222b      	movge	r2, #43	; 0x2b
 8004320:	222d      	movlt	r2, #45	; 0x2d
 8004322:	2b09      	cmp	r3, #9
 8004324:	f88d 206d 	strb.w	r2, [sp, #109]	; 0x6d
 8004328:	f340 80fa 	ble.w	8004520 <_vfprintf_r+0x780>
 800432c:	f10d 027b 	add.w	r2, sp, #123	; 0x7b
 8004330:	260a      	movs	r6, #10
 8004332:	fb93 f0f6 	sdiv	r0, r3, r6
 8004336:	fb06 3310 	mls	r3, r6, r0, r3
 800433a:	3330      	adds	r3, #48	; 0x30
 800433c:	2809      	cmp	r0, #9
 800433e:	f802 3c01 	strb.w	r3, [r2, #-1]
 8004342:	f102 31ff 	add.w	r1, r2, #4294967295
 8004346:	4603      	mov	r3, r0
 8004348:	f300 80e3 	bgt.w	8004512 <_vfprintf_r+0x772>
 800434c:	3330      	adds	r3, #48	; 0x30
 800434e:	f801 3c01 	strb.w	r3, [r1, #-1]
 8004352:	3a02      	subs	r2, #2
 8004354:	f10d 036e 	add.w	r3, sp, #110	; 0x6e
 8004358:	f10d 007b 	add.w	r0, sp, #123	; 0x7b
 800435c:	4282      	cmp	r2, r0
 800435e:	4619      	mov	r1, r3
 8004360:	f0c0 80d9 	bcc.w	8004516 <_vfprintf_r+0x776>
 8004364:	9a03      	ldr	r2, [sp, #12]
 8004366:	ab1b      	add	r3, sp, #108	; 0x6c
 8004368:	1acb      	subs	r3, r1, r3
 800436a:	2a01      	cmp	r2, #1
 800436c:	9310      	str	r3, [sp, #64]	; 0x40
 800436e:	eb03 0a02 	add.w	sl, r3, r2
 8004372:	dc03      	bgt.n	800437c <_vfprintf_r+0x5dc>
 8004374:	f015 0301 	ands.w	r3, r5, #1
 8004378:	9308      	str	r3, [sp, #32]
 800437a:	d003      	beq.n	8004384 <_vfprintf_r+0x5e4>
 800437c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800437e:	449a      	add	sl, r3
 8004380:	2300      	movs	r3, #0
 8004382:	9308      	str	r3, [sp, #32]
 8004384:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8004386:	b113      	cbz	r3, 800438e <_vfprintf_r+0x5ee>
 8004388:	232d      	movs	r3, #45	; 0x2d
 800438a:	f88d 305f 	strb.w	r3, [sp, #95]	; 0x5f
 800438e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8004390:	2600      	movs	r6, #0
 8004392:	4556      	cmp	r6, sl
 8004394:	4633      	mov	r3, r6
 8004396:	bfb8      	it	lt
 8004398:	4653      	movlt	r3, sl
 800439a:	930c      	str	r3, [sp, #48]	; 0x30
 800439c:	f89d 305f 	ldrb.w	r3, [sp, #95]	; 0x5f
 80043a0:	b113      	cbz	r3, 80043a8 <_vfprintf_r+0x608>
 80043a2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80043a4:	3301      	adds	r3, #1
 80043a6:	930c      	str	r3, [sp, #48]	; 0x30
 80043a8:	f015 0302 	ands.w	r3, r5, #2
 80043ac:	9314      	str	r3, [sp, #80]	; 0x50
 80043ae:	bf1e      	ittt	ne
 80043b0:	9b0c      	ldrne	r3, [sp, #48]	; 0x30
 80043b2:	3302      	addne	r3, #2
 80043b4:	930c      	strne	r3, [sp, #48]	; 0x30
 80043b6:	f015 0384 	ands.w	r3, r5, #132	; 0x84
 80043ba:	9315      	str	r3, [sp, #84]	; 0x54
 80043bc:	d114      	bne.n	80043e8 <_vfprintf_r+0x648>
 80043be:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80043c0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80043c2:	1a9f      	subs	r7, r3, r2
 80043c4:	2f00      	cmp	r7, #0
 80043c6:	dd0f      	ble.n	80043e8 <_vfprintf_r+0x648>
 80043c8:	4ba8      	ldr	r3, [pc, #672]	; (800466c <_vfprintf_r+0x8cc>)
 80043ca:	6023      	str	r3, [r4, #0]
 80043cc:	2f10      	cmp	r7, #16
 80043ce:	f300 81d3 	bgt.w	8004778 <_vfprintf_r+0x9d8>
 80043d2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80043d4:	6067      	str	r7, [r4, #4]
 80043d6:	441f      	add	r7, r3
 80043d8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80043da:	9721      	str	r7, [sp, #132]	; 0x84
 80043dc:	3301      	adds	r3, #1
 80043de:	2b07      	cmp	r3, #7
 80043e0:	9320      	str	r3, [sp, #128]	; 0x80
 80043e2:	f300 81e0 	bgt.w	80047a6 <_vfprintf_r+0xa06>
 80043e6:	3408      	adds	r4, #8
 80043e8:	f89d 305f 	ldrb.w	r3, [sp, #95]	; 0x5f
 80043ec:	b173      	cbz	r3, 800440c <_vfprintf_r+0x66c>
 80043ee:	f10d 035f 	add.w	r3, sp, #95	; 0x5f
 80043f2:	6023      	str	r3, [r4, #0]
 80043f4:	2301      	movs	r3, #1
 80043f6:	6063      	str	r3, [r4, #4]
 80043f8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80043fa:	3301      	adds	r3, #1
 80043fc:	9321      	str	r3, [sp, #132]	; 0x84
 80043fe:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8004400:	3301      	adds	r3, #1
 8004402:	2b07      	cmp	r3, #7
 8004404:	9320      	str	r3, [sp, #128]	; 0x80
 8004406:	f300 81d8 	bgt.w	80047ba <_vfprintf_r+0xa1a>
 800440a:	3408      	adds	r4, #8
 800440c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800440e:	b16b      	cbz	r3, 800442c <_vfprintf_r+0x68c>
 8004410:	ab18      	add	r3, sp, #96	; 0x60
 8004412:	6023      	str	r3, [r4, #0]
 8004414:	2302      	movs	r3, #2
 8004416:	6063      	str	r3, [r4, #4]
 8004418:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800441a:	3302      	adds	r3, #2
 800441c:	9321      	str	r3, [sp, #132]	; 0x84
 800441e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8004420:	3301      	adds	r3, #1
 8004422:	2b07      	cmp	r3, #7
 8004424:	9320      	str	r3, [sp, #128]	; 0x80
 8004426:	f300 81d2 	bgt.w	80047ce <_vfprintf_r+0xa2e>
 800442a:	3408      	adds	r4, #8
 800442c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800442e:	2b80      	cmp	r3, #128	; 0x80
 8004430:	d114      	bne.n	800445c <_vfprintf_r+0x6bc>
 8004432:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004434:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8004436:	1a9f      	subs	r7, r3, r2
 8004438:	2f00      	cmp	r7, #0
 800443a:	dd0f      	ble.n	800445c <_vfprintf_r+0x6bc>
 800443c:	4b8c      	ldr	r3, [pc, #560]	; (8004670 <_vfprintf_r+0x8d0>)
 800443e:	6023      	str	r3, [r4, #0]
 8004440:	2f10      	cmp	r7, #16
 8004442:	f300 81ce 	bgt.w	80047e2 <_vfprintf_r+0xa42>
 8004446:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8004448:	6067      	str	r7, [r4, #4]
 800444a:	441f      	add	r7, r3
 800444c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800444e:	9721      	str	r7, [sp, #132]	; 0x84
 8004450:	3301      	adds	r3, #1
 8004452:	2b07      	cmp	r3, #7
 8004454:	9320      	str	r3, [sp, #128]	; 0x80
 8004456:	f300 81dd 	bgt.w	8004814 <_vfprintf_r+0xa74>
 800445a:	3408      	adds	r4, #8
 800445c:	eba6 060a 	sub.w	r6, r6, sl
 8004460:	2e00      	cmp	r6, #0
 8004462:	dd0f      	ble.n	8004484 <_vfprintf_r+0x6e4>
 8004464:	4f82      	ldr	r7, [pc, #520]	; (8004670 <_vfprintf_r+0x8d0>)
 8004466:	6027      	str	r7, [r4, #0]
 8004468:	2e10      	cmp	r6, #16
 800446a:	f300 81dd 	bgt.w	8004828 <_vfprintf_r+0xa88>
 800446e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8004470:	9821      	ldr	r0, [sp, #132]	; 0x84
 8004472:	6066      	str	r6, [r4, #4]
 8004474:	3301      	adds	r3, #1
 8004476:	4406      	add	r6, r0
 8004478:	2b07      	cmp	r3, #7
 800447a:	9621      	str	r6, [sp, #132]	; 0x84
 800447c:	9320      	str	r3, [sp, #128]	; 0x80
 800447e:	f300 81ea 	bgt.w	8004856 <_vfprintf_r+0xab6>
 8004482:	3408      	adds	r4, #8
 8004484:	05e9      	lsls	r1, r5, #23
 8004486:	f100 81f0 	bmi.w	800486a <_vfprintf_r+0xaca>
 800448a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800448c:	e884 0600 	stmia.w	r4, {r9, sl}
 8004490:	4453      	add	r3, sl
 8004492:	9321      	str	r3, [sp, #132]	; 0x84
 8004494:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8004496:	3301      	adds	r3, #1
 8004498:	2b07      	cmp	r3, #7
 800449a:	9320      	str	r3, [sp, #128]	; 0x80
 800449c:	f340 841b 	ble.w	8004cd6 <_vfprintf_r+0xf36>
 80044a0:	aa1f      	add	r2, sp, #124	; 0x7c
 80044a2:	4641      	mov	r1, r8
 80044a4:	4658      	mov	r0, fp
 80044a6:	f003 f8fa 	bl	800769e <__sprint_r>
 80044aa:	2800      	cmp	r0, #0
 80044ac:	f040 8433 	bne.w	8004d16 <_vfprintf_r+0xf76>
 80044b0:	ac2c      	add	r4, sp, #176	; 0xb0
 80044b2:	0768      	lsls	r0, r5, #29
 80044b4:	f100 8412 	bmi.w	8004cdc <_vfprintf_r+0xf3c>
 80044b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80044ba:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80044bc:	990c      	ldr	r1, [sp, #48]	; 0x30
 80044be:	428a      	cmp	r2, r1
 80044c0:	bfac      	ite	ge
 80044c2:	189b      	addge	r3, r3, r2
 80044c4:	185b      	addlt	r3, r3, r1
 80044c6:	930a      	str	r3, [sp, #40]	; 0x28
 80044c8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80044ca:	b13b      	cbz	r3, 80044dc <_vfprintf_r+0x73c>
 80044cc:	aa1f      	add	r2, sp, #124	; 0x7c
 80044ce:	4641      	mov	r1, r8
 80044d0:	4658      	mov	r0, fp
 80044d2:	f003 f8e4 	bl	800769e <__sprint_r>
 80044d6:	2800      	cmp	r0, #0
 80044d8:	f040 841d 	bne.w	8004d16 <_vfprintf_r+0xf76>
 80044dc:	2300      	movs	r3, #0
 80044de:	9320      	str	r3, [sp, #128]	; 0x80
 80044e0:	9f04      	ldr	r7, [sp, #16]
 80044e2:	ac2c      	add	r4, sp, #176	; 0xb0
 80044e4:	e4e9      	b.n	8003eba <_vfprintf_r+0x11a>
 80044e6:	9b02      	ldr	r3, [sp, #8]
 80044e8:	2b65      	cmp	r3, #101	; 0x65
 80044ea:	f77f af0d 	ble.w	8004308 <_vfprintf_r+0x568>
 80044ee:	9b02      	ldr	r3, [sp, #8]
 80044f0:	2b66      	cmp	r3, #102	; 0x66
 80044f2:	d125      	bne.n	8004540 <_vfprintf_r+0x7a0>
 80044f4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80044f6:	2b00      	cmp	r3, #0
 80044f8:	dd1a      	ble.n	8004530 <_vfprintf_r+0x790>
 80044fa:	f1ba 0f00 	cmp.w	sl, #0
 80044fe:	d101      	bne.n	8004504 <_vfprintf_r+0x764>
 8004500:	07ee      	lsls	r6, r5, #31
 8004502:	d502      	bpl.n	800450a <_vfprintf_r+0x76a>
 8004504:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004506:	4413      	add	r3, r2
 8004508:	4453      	add	r3, sl
 800450a:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800450c:	9208      	str	r2, [sp, #32]
 800450e:	469a      	mov	sl, r3
 8004510:	e738      	b.n	8004384 <_vfprintf_r+0x5e4>
 8004512:	460a      	mov	r2, r1
 8004514:	e70d      	b.n	8004332 <_vfprintf_r+0x592>
 8004516:	f812 1b01 	ldrb.w	r1, [r2], #1
 800451a:	f803 1b01 	strb.w	r1, [r3], #1
 800451e:	e71d      	b.n	800435c <_vfprintf_r+0x5bc>
 8004520:	2230      	movs	r2, #48	; 0x30
 8004522:	4413      	add	r3, r2
 8004524:	f88d 206e 	strb.w	r2, [sp, #110]	; 0x6e
 8004528:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 800452c:	a91c      	add	r1, sp, #112	; 0x70
 800452e:	e719      	b.n	8004364 <_vfprintf_r+0x5c4>
 8004530:	f1ba 0f00 	cmp.w	sl, #0
 8004534:	d101      	bne.n	800453a <_vfprintf_r+0x79a>
 8004536:	07ed      	lsls	r5, r5, #31
 8004538:	d515      	bpl.n	8004566 <_vfprintf_r+0x7c6>
 800453a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800453c:	3301      	adds	r3, #1
 800453e:	e7e3      	b.n	8004508 <_vfprintf_r+0x768>
 8004540:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8004542:	9b03      	ldr	r3, [sp, #12]
 8004544:	429a      	cmp	r2, r3
 8004546:	db06      	blt.n	8004556 <_vfprintf_r+0x7b6>
 8004548:	07e8      	lsls	r0, r5, #31
 800454a:	d50e      	bpl.n	800456a <_vfprintf_r+0x7ca>
 800454c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800454e:	4413      	add	r3, r2
 8004550:	2267      	movs	r2, #103	; 0x67
 8004552:	9202      	str	r2, [sp, #8]
 8004554:	e7d9      	b.n	800450a <_vfprintf_r+0x76a>
 8004556:	9b03      	ldr	r3, [sp, #12]
 8004558:	9909      	ldr	r1, [sp, #36]	; 0x24
 800455a:	2a00      	cmp	r2, #0
 800455c:	440b      	add	r3, r1
 800455e:	dcf7      	bgt.n	8004550 <_vfprintf_r+0x7b0>
 8004560:	f1c2 0201 	rsb	r2, r2, #1
 8004564:	e7f3      	b.n	800454e <_vfprintf_r+0x7ae>
 8004566:	2301      	movs	r3, #1
 8004568:	e7cf      	b.n	800450a <_vfprintf_r+0x76a>
 800456a:	4613      	mov	r3, r2
 800456c:	e7f0      	b.n	8004550 <_vfprintf_r+0x7b0>
 800456e:	b10b      	cbz	r3, 8004574 <_vfprintf_r+0x7d4>
 8004570:	f88d 205f 	strb.w	r2, [sp, #95]	; 0x5f
 8004574:	f015 0f20 	tst.w	r5, #32
 8004578:	f107 0304 	add.w	r3, r7, #4
 800457c:	d008      	beq.n	8004590 <_vfprintf_r+0x7f0>
 800457e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004580:	683a      	ldr	r2, [r7, #0]
 8004582:	17ce      	asrs	r6, r1, #31
 8004584:	4608      	mov	r0, r1
 8004586:	4631      	mov	r1, r6
 8004588:	e9c2 0100 	strd	r0, r1, [r2]
 800458c:	461f      	mov	r7, r3
 800458e:	e494      	b.n	8003eba <_vfprintf_r+0x11a>
 8004590:	06e9      	lsls	r1, r5, #27
 8004592:	d503      	bpl.n	800459c <_vfprintf_r+0x7fc>
 8004594:	683a      	ldr	r2, [r7, #0]
 8004596:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004598:	6011      	str	r1, [r2, #0]
 800459a:	e7f7      	b.n	800458c <_vfprintf_r+0x7ec>
 800459c:	066a      	lsls	r2, r5, #25
 800459e:	d5f9      	bpl.n	8004594 <_vfprintf_r+0x7f4>
 80045a0:	683a      	ldr	r2, [r7, #0]
 80045a2:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 80045a6:	8011      	strh	r1, [r2, #0]
 80045a8:	e7f0      	b.n	800458c <_vfprintf_r+0x7ec>
 80045aa:	f045 0510 	orr.w	r5, r5, #16
 80045ae:	f015 0320 	ands.w	r3, r5, #32
 80045b2:	d022      	beq.n	80045fa <_vfprintf_r+0x85a>
 80045b4:	3707      	adds	r7, #7
 80045b6:	f027 0707 	bic.w	r7, r7, #7
 80045ba:	f107 0308 	add.w	r3, r7, #8
 80045be:	e9d7 6700 	ldrd	r6, r7, [r7]
 80045c2:	9304      	str	r3, [sp, #16]
 80045c4:	2300      	movs	r3, #0
 80045c6:	2200      	movs	r2, #0
 80045c8:	f88d 205f 	strb.w	r2, [sp, #95]	; 0x5f
 80045cc:	f1ba 3fff 	cmp.w	sl, #4294967295
 80045d0:	f000 83e8 	beq.w	8004da4 <_vfprintf_r+0x1004>
 80045d4:	f025 0280 	bic.w	r2, r5, #128	; 0x80
 80045d8:	9208      	str	r2, [sp, #32]
 80045da:	ea56 0207 	orrs.w	r2, r6, r7
 80045de:	f040 83e6 	bne.w	8004dae <_vfprintf_r+0x100e>
 80045e2:	f1ba 0f00 	cmp.w	sl, #0
 80045e6:	f000 80a9 	beq.w	800473c <_vfprintf_r+0x99c>
 80045ea:	2b01      	cmp	r3, #1
 80045ec:	d075      	beq.n	80046da <_vfprintf_r+0x93a>
 80045ee:	2b02      	cmp	r3, #2
 80045f0:	f000 8090 	beq.w	8004714 <_vfprintf_r+0x974>
 80045f4:	2600      	movs	r6, #0
 80045f6:	2700      	movs	r7, #0
 80045f8:	e3df      	b.n	8004dba <_vfprintf_r+0x101a>
 80045fa:	1d3a      	adds	r2, r7, #4
 80045fc:	f015 0110 	ands.w	r1, r5, #16
 8004600:	9204      	str	r2, [sp, #16]
 8004602:	d002      	beq.n	800460a <_vfprintf_r+0x86a>
 8004604:	683e      	ldr	r6, [r7, #0]
 8004606:	2700      	movs	r7, #0
 8004608:	e7dd      	b.n	80045c6 <_vfprintf_r+0x826>
 800460a:	f015 0340 	ands.w	r3, r5, #64	; 0x40
 800460e:	d0f9      	beq.n	8004604 <_vfprintf_r+0x864>
 8004610:	883e      	ldrh	r6, [r7, #0]
 8004612:	2700      	movs	r7, #0
 8004614:	e7d6      	b.n	80045c4 <_vfprintf_r+0x824>
 8004616:	1d3b      	adds	r3, r7, #4
 8004618:	9304      	str	r3, [sp, #16]
 800461a:	2330      	movs	r3, #48	; 0x30
 800461c:	2278      	movs	r2, #120	; 0x78
 800461e:	f88d 3060 	strb.w	r3, [sp, #96]	; 0x60
 8004622:	4b14      	ldr	r3, [pc, #80]	; (8004674 <_vfprintf_r+0x8d4>)
 8004624:	683e      	ldr	r6, [r7, #0]
 8004626:	9311      	str	r3, [sp, #68]	; 0x44
 8004628:	2700      	movs	r7, #0
 800462a:	f045 0502 	orr.w	r5, r5, #2
 800462e:	f88d 2061 	strb.w	r2, [sp, #97]	; 0x61
 8004632:	2302      	movs	r3, #2
 8004634:	9202      	str	r2, [sp, #8]
 8004636:	e7c6      	b.n	80045c6 <_vfprintf_r+0x826>
 8004638:	1d3b      	adds	r3, r7, #4
 800463a:	2600      	movs	r6, #0
 800463c:	f1ba 3fff 	cmp.w	sl, #4294967295
 8004640:	9304      	str	r3, [sp, #16]
 8004642:	f8d7 9000 	ldr.w	r9, [r7]
 8004646:	f88d 605f 	strb.w	r6, [sp, #95]	; 0x5f
 800464a:	d00a      	beq.n	8004662 <_vfprintf_r+0x8c2>
 800464c:	4652      	mov	r2, sl
 800464e:	4631      	mov	r1, r6
 8004650:	4648      	mov	r0, r9
 8004652:	f7fb fdcd 	bl	80001f0 <memchr>
 8004656:	2800      	cmp	r0, #0
 8004658:	f000 808c 	beq.w	8004774 <_vfprintf_r+0x9d4>
 800465c:	eba0 0a09 	sub.w	sl, r0, r9
 8004660:	e5cb      	b.n	80041fa <_vfprintf_r+0x45a>
 8004662:	4648      	mov	r0, r9
 8004664:	f7fb fdbc 	bl	80001e0 <strlen>
 8004668:	4682      	mov	sl, r0
 800466a:	e5c6      	b.n	80041fa <_vfprintf_r+0x45a>
 800466c:	0800847e 	.word	0x0800847e
 8004670:	0800848e 	.word	0x0800848e
 8004674:	0800844b 	.word	0x0800844b
 8004678:	f045 0510 	orr.w	r5, r5, #16
 800467c:	06ae      	lsls	r6, r5, #26
 800467e:	d509      	bpl.n	8004694 <_vfprintf_r+0x8f4>
 8004680:	3707      	adds	r7, #7
 8004682:	f027 0707 	bic.w	r7, r7, #7
 8004686:	f107 0308 	add.w	r3, r7, #8
 800468a:	e9d7 6700 	ldrd	r6, r7, [r7]
 800468e:	9304      	str	r3, [sp, #16]
 8004690:	2301      	movs	r3, #1
 8004692:	e798      	b.n	80045c6 <_vfprintf_r+0x826>
 8004694:	1d3b      	adds	r3, r7, #4
 8004696:	f015 0f10 	tst.w	r5, #16
 800469a:	9304      	str	r3, [sp, #16]
 800469c:	d001      	beq.n	80046a2 <_vfprintf_r+0x902>
 800469e:	683e      	ldr	r6, [r7, #0]
 80046a0:	e002      	b.n	80046a8 <_vfprintf_r+0x908>
 80046a2:	0668      	lsls	r0, r5, #25
 80046a4:	d5fb      	bpl.n	800469e <_vfprintf_r+0x8fe>
 80046a6:	883e      	ldrh	r6, [r7, #0]
 80046a8:	2700      	movs	r7, #0
 80046aa:	e7f1      	b.n	8004690 <_vfprintf_r+0x8f0>
 80046ac:	b10b      	cbz	r3, 80046b2 <_vfprintf_r+0x912>
 80046ae:	f88d 205f 	strb.w	r2, [sp, #95]	; 0x5f
 80046b2:	4ba2      	ldr	r3, [pc, #648]	; (800493c <_vfprintf_r+0xb9c>)
 80046b4:	e4ca      	b.n	800404c <_vfprintf_r+0x2ac>
 80046b6:	1d3b      	adds	r3, r7, #4
 80046b8:	f015 0f10 	tst.w	r5, #16
 80046bc:	9304      	str	r3, [sp, #16]
 80046be:	d001      	beq.n	80046c4 <_vfprintf_r+0x924>
 80046c0:	683e      	ldr	r6, [r7, #0]
 80046c2:	e002      	b.n	80046ca <_vfprintf_r+0x92a>
 80046c4:	066a      	lsls	r2, r5, #25
 80046c6:	d5fb      	bpl.n	80046c0 <_vfprintf_r+0x920>
 80046c8:	883e      	ldrh	r6, [r7, #0]
 80046ca:	2700      	movs	r7, #0
 80046cc:	e4ca      	b.n	8004064 <_vfprintf_r+0x2c4>
 80046ce:	464b      	mov	r3, r9
 80046d0:	e374      	b.n	8004dbc <_vfprintf_r+0x101c>
 80046d2:	2f00      	cmp	r7, #0
 80046d4:	bf08      	it	eq
 80046d6:	2e0a      	cmpeq	r6, #10
 80046d8:	d205      	bcs.n	80046e6 <_vfprintf_r+0x946>
 80046da:	f10d 09f0 	add.w	r9, sp, #240	; 0xf0
 80046de:	3630      	adds	r6, #48	; 0x30
 80046e0:	f809 6d41 	strb.w	r6, [r9, #-65]!
 80046e4:	e385      	b.n	8004df2 <_vfprintf_r+0x1052>
 80046e6:	f10d 09b0 	add.w	r9, sp, #176	; 0xb0
 80046ea:	4630      	mov	r0, r6
 80046ec:	4639      	mov	r1, r7
 80046ee:	220a      	movs	r2, #10
 80046f0:	2300      	movs	r3, #0
 80046f2:	f7fc fa5d 	bl	8000bb0 <__aeabi_uldivmod>
 80046f6:	3230      	adds	r2, #48	; 0x30
 80046f8:	f809 2d01 	strb.w	r2, [r9, #-1]!
 80046fc:	2300      	movs	r3, #0
 80046fe:	4630      	mov	r0, r6
 8004700:	4639      	mov	r1, r7
 8004702:	220a      	movs	r2, #10
 8004704:	f7fc fa54 	bl	8000bb0 <__aeabi_uldivmod>
 8004708:	4606      	mov	r6, r0
 800470a:	460f      	mov	r7, r1
 800470c:	ea56 0307 	orrs.w	r3, r6, r7
 8004710:	d1eb      	bne.n	80046ea <_vfprintf_r+0x94a>
 8004712:	e36e      	b.n	8004df2 <_vfprintf_r+0x1052>
 8004714:	2600      	movs	r6, #0
 8004716:	2700      	movs	r7, #0
 8004718:	f10d 09b0 	add.w	r9, sp, #176	; 0xb0
 800471c:	f006 030f 	and.w	r3, r6, #15
 8004720:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8004722:	5cd3      	ldrb	r3, [r2, r3]
 8004724:	f809 3d01 	strb.w	r3, [r9, #-1]!
 8004728:	0933      	lsrs	r3, r6, #4
 800472a:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
 800472e:	093a      	lsrs	r2, r7, #4
 8004730:	461e      	mov	r6, r3
 8004732:	4617      	mov	r7, r2
 8004734:	ea56 0307 	orrs.w	r3, r6, r7
 8004738:	d1f0      	bne.n	800471c <_vfprintf_r+0x97c>
 800473a:	e35a      	b.n	8004df2 <_vfprintf_r+0x1052>
 800473c:	b93b      	cbnz	r3, 800474e <_vfprintf_r+0x9ae>
 800473e:	07e8      	lsls	r0, r5, #31
 8004740:	d505      	bpl.n	800474e <_vfprintf_r+0x9ae>
 8004742:	f10d 09f0 	add.w	r9, sp, #240	; 0xf0
 8004746:	2330      	movs	r3, #48	; 0x30
 8004748:	f809 3d41 	strb.w	r3, [r9, #-65]!
 800474c:	e351      	b.n	8004df2 <_vfprintf_r+0x1052>
 800474e:	f10d 09b0 	add.w	r9, sp, #176	; 0xb0
 8004752:	e34e      	b.n	8004df2 <_vfprintf_r+0x1052>
 8004754:	b10b      	cbz	r3, 800475a <_vfprintf_r+0x9ba>
 8004756:	f88d 205f 	strb.w	r2, [sp, #95]	; 0x5f
 800475a:	9b02      	ldr	r3, [sp, #8]
 800475c:	2b00      	cmp	r3, #0
 800475e:	f000 8302 	beq.w	8004d66 <_vfprintf_r+0xfc6>
 8004762:	f89d 3008 	ldrb.w	r3, [sp, #8]
 8004766:	f88d 3088 	strb.w	r3, [sp, #136]	; 0x88
 800476a:	2600      	movs	r6, #0
 800476c:	f88d 605f 	strb.w	r6, [sp, #95]	; 0x5f
 8004770:	9704      	str	r7, [sp, #16]
 8004772:	e4e9      	b.n	8004148 <_vfprintf_r+0x3a8>
 8004774:	4606      	mov	r6, r0
 8004776:	e540      	b.n	80041fa <_vfprintf_r+0x45a>
 8004778:	2310      	movs	r3, #16
 800477a:	6063      	str	r3, [r4, #4]
 800477c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800477e:	3310      	adds	r3, #16
 8004780:	9321      	str	r3, [sp, #132]	; 0x84
 8004782:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8004784:	3301      	adds	r3, #1
 8004786:	2b07      	cmp	r3, #7
 8004788:	9320      	str	r3, [sp, #128]	; 0x80
 800478a:	dc02      	bgt.n	8004792 <_vfprintf_r+0x9f2>
 800478c:	3408      	adds	r4, #8
 800478e:	3f10      	subs	r7, #16
 8004790:	e61a      	b.n	80043c8 <_vfprintf_r+0x628>
 8004792:	aa1f      	add	r2, sp, #124	; 0x7c
 8004794:	4641      	mov	r1, r8
 8004796:	4658      	mov	r0, fp
 8004798:	f002 ff81 	bl	800769e <__sprint_r>
 800479c:	2800      	cmp	r0, #0
 800479e:	f040 82ba 	bne.w	8004d16 <_vfprintf_r+0xf76>
 80047a2:	ac2c      	add	r4, sp, #176	; 0xb0
 80047a4:	e7f3      	b.n	800478e <_vfprintf_r+0x9ee>
 80047a6:	aa1f      	add	r2, sp, #124	; 0x7c
 80047a8:	4641      	mov	r1, r8
 80047aa:	4658      	mov	r0, fp
 80047ac:	f002 ff77 	bl	800769e <__sprint_r>
 80047b0:	2800      	cmp	r0, #0
 80047b2:	f040 82b0 	bne.w	8004d16 <_vfprintf_r+0xf76>
 80047b6:	ac2c      	add	r4, sp, #176	; 0xb0
 80047b8:	e616      	b.n	80043e8 <_vfprintf_r+0x648>
 80047ba:	aa1f      	add	r2, sp, #124	; 0x7c
 80047bc:	4641      	mov	r1, r8
 80047be:	4658      	mov	r0, fp
 80047c0:	f002 ff6d 	bl	800769e <__sprint_r>
 80047c4:	2800      	cmp	r0, #0
 80047c6:	f040 82a6 	bne.w	8004d16 <_vfprintf_r+0xf76>
 80047ca:	ac2c      	add	r4, sp, #176	; 0xb0
 80047cc:	e61e      	b.n	800440c <_vfprintf_r+0x66c>
 80047ce:	aa1f      	add	r2, sp, #124	; 0x7c
 80047d0:	4641      	mov	r1, r8
 80047d2:	4658      	mov	r0, fp
 80047d4:	f002 ff63 	bl	800769e <__sprint_r>
 80047d8:	2800      	cmp	r0, #0
 80047da:	f040 829c 	bne.w	8004d16 <_vfprintf_r+0xf76>
 80047de:	ac2c      	add	r4, sp, #176	; 0xb0
 80047e0:	e624      	b.n	800442c <_vfprintf_r+0x68c>
 80047e2:	2210      	movs	r2, #16
 80047e4:	6062      	str	r2, [r4, #4]
 80047e6:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80047e8:	3210      	adds	r2, #16
 80047ea:	9221      	str	r2, [sp, #132]	; 0x84
 80047ec:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80047ee:	3201      	adds	r2, #1
 80047f0:	2a07      	cmp	r2, #7
 80047f2:	9220      	str	r2, [sp, #128]	; 0x80
 80047f4:	dc02      	bgt.n	80047fc <_vfprintf_r+0xa5c>
 80047f6:	3408      	adds	r4, #8
 80047f8:	3f10      	subs	r7, #16
 80047fa:	e620      	b.n	800443e <_vfprintf_r+0x69e>
 80047fc:	aa1f      	add	r2, sp, #124	; 0x7c
 80047fe:	4641      	mov	r1, r8
 8004800:	4658      	mov	r0, fp
 8004802:	9314      	str	r3, [sp, #80]	; 0x50
 8004804:	f002 ff4b 	bl	800769e <__sprint_r>
 8004808:	2800      	cmp	r0, #0
 800480a:	f040 8284 	bne.w	8004d16 <_vfprintf_r+0xf76>
 800480e:	ac2c      	add	r4, sp, #176	; 0xb0
 8004810:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8004812:	e7f1      	b.n	80047f8 <_vfprintf_r+0xa58>
 8004814:	aa1f      	add	r2, sp, #124	; 0x7c
 8004816:	4641      	mov	r1, r8
 8004818:	4658      	mov	r0, fp
 800481a:	f002 ff40 	bl	800769e <__sprint_r>
 800481e:	2800      	cmp	r0, #0
 8004820:	f040 8279 	bne.w	8004d16 <_vfprintf_r+0xf76>
 8004824:	ac2c      	add	r4, sp, #176	; 0xb0
 8004826:	e619      	b.n	800445c <_vfprintf_r+0x6bc>
 8004828:	2310      	movs	r3, #16
 800482a:	6063      	str	r3, [r4, #4]
 800482c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800482e:	3310      	adds	r3, #16
 8004830:	9321      	str	r3, [sp, #132]	; 0x84
 8004832:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8004834:	3301      	adds	r3, #1
 8004836:	2b07      	cmp	r3, #7
 8004838:	9320      	str	r3, [sp, #128]	; 0x80
 800483a:	dc02      	bgt.n	8004842 <_vfprintf_r+0xaa2>
 800483c:	3408      	adds	r4, #8
 800483e:	3e10      	subs	r6, #16
 8004840:	e611      	b.n	8004466 <_vfprintf_r+0x6c6>
 8004842:	aa1f      	add	r2, sp, #124	; 0x7c
 8004844:	4641      	mov	r1, r8
 8004846:	4658      	mov	r0, fp
 8004848:	f002 ff29 	bl	800769e <__sprint_r>
 800484c:	2800      	cmp	r0, #0
 800484e:	f040 8262 	bne.w	8004d16 <_vfprintf_r+0xf76>
 8004852:	ac2c      	add	r4, sp, #176	; 0xb0
 8004854:	e7f3      	b.n	800483e <_vfprintf_r+0xa9e>
 8004856:	aa1f      	add	r2, sp, #124	; 0x7c
 8004858:	4641      	mov	r1, r8
 800485a:	4658      	mov	r0, fp
 800485c:	f002 ff1f 	bl	800769e <__sprint_r>
 8004860:	2800      	cmp	r0, #0
 8004862:	f040 8258 	bne.w	8004d16 <_vfprintf_r+0xf76>
 8004866:	ac2c      	add	r4, sp, #176	; 0xb0
 8004868:	e60c      	b.n	8004484 <_vfprintf_r+0x6e4>
 800486a:	9b02      	ldr	r3, [sp, #8]
 800486c:	2b65      	cmp	r3, #101	; 0x65
 800486e:	f340 81ad 	ble.w	8004bcc <_vfprintf_r+0xe2c>
 8004872:	2200      	movs	r2, #0
 8004874:	2300      	movs	r3, #0
 8004876:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800487a:	f7fc f929 	bl	8000ad0 <__aeabi_dcmpeq>
 800487e:	2800      	cmp	r0, #0
 8004880:	d062      	beq.n	8004948 <_vfprintf_r+0xba8>
 8004882:	4b2f      	ldr	r3, [pc, #188]	; (8004940 <_vfprintf_r+0xba0>)
 8004884:	6023      	str	r3, [r4, #0]
 8004886:	2301      	movs	r3, #1
 8004888:	6063      	str	r3, [r4, #4]
 800488a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800488c:	3301      	adds	r3, #1
 800488e:	9321      	str	r3, [sp, #132]	; 0x84
 8004890:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8004892:	3301      	adds	r3, #1
 8004894:	2b07      	cmp	r3, #7
 8004896:	9320      	str	r3, [sp, #128]	; 0x80
 8004898:	dc25      	bgt.n	80048e6 <_vfprintf_r+0xb46>
 800489a:	3408      	adds	r4, #8
 800489c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800489e:	9a03      	ldr	r2, [sp, #12]
 80048a0:	4293      	cmp	r3, r2
 80048a2:	db02      	blt.n	80048aa <_vfprintf_r+0xb0a>
 80048a4:	07ea      	lsls	r2, r5, #31
 80048a6:	f57f ae04 	bpl.w	80044b2 <_vfprintf_r+0x712>
 80048aa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80048ac:	6023      	str	r3, [r4, #0]
 80048ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80048b0:	6063      	str	r3, [r4, #4]
 80048b2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80048b4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80048b6:	4413      	add	r3, r2
 80048b8:	9321      	str	r3, [sp, #132]	; 0x84
 80048ba:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80048bc:	3301      	adds	r3, #1
 80048be:	2b07      	cmp	r3, #7
 80048c0:	9320      	str	r3, [sp, #128]	; 0x80
 80048c2:	dc1a      	bgt.n	80048fa <_vfprintf_r+0xb5a>
 80048c4:	3408      	adds	r4, #8
 80048c6:	9b03      	ldr	r3, [sp, #12]
 80048c8:	1e5e      	subs	r6, r3, #1
 80048ca:	2e00      	cmp	r6, #0
 80048cc:	f77f adf1 	ble.w	80044b2 <_vfprintf_r+0x712>
 80048d0:	4f1c      	ldr	r7, [pc, #112]	; (8004944 <_vfprintf_r+0xba4>)
 80048d2:	f04f 0910 	mov.w	r9, #16
 80048d6:	2e10      	cmp	r6, #16
 80048d8:	6027      	str	r7, [r4, #0]
 80048da:	dc18      	bgt.n	800490e <_vfprintf_r+0xb6e>
 80048dc:	6066      	str	r6, [r4, #4]
 80048de:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80048e0:	441e      	add	r6, r3
 80048e2:	9621      	str	r6, [sp, #132]	; 0x84
 80048e4:	e5d6      	b.n	8004494 <_vfprintf_r+0x6f4>
 80048e6:	aa1f      	add	r2, sp, #124	; 0x7c
 80048e8:	4641      	mov	r1, r8
 80048ea:	4658      	mov	r0, fp
 80048ec:	f002 fed7 	bl	800769e <__sprint_r>
 80048f0:	2800      	cmp	r0, #0
 80048f2:	f040 8210 	bne.w	8004d16 <_vfprintf_r+0xf76>
 80048f6:	ac2c      	add	r4, sp, #176	; 0xb0
 80048f8:	e7d0      	b.n	800489c <_vfprintf_r+0xafc>
 80048fa:	aa1f      	add	r2, sp, #124	; 0x7c
 80048fc:	4641      	mov	r1, r8
 80048fe:	4658      	mov	r0, fp
 8004900:	f002 fecd 	bl	800769e <__sprint_r>
 8004904:	2800      	cmp	r0, #0
 8004906:	f040 8206 	bne.w	8004d16 <_vfprintf_r+0xf76>
 800490a:	ac2c      	add	r4, sp, #176	; 0xb0
 800490c:	e7db      	b.n	80048c6 <_vfprintf_r+0xb26>
 800490e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8004910:	f8c4 9004 	str.w	r9, [r4, #4]
 8004914:	3310      	adds	r3, #16
 8004916:	9321      	str	r3, [sp, #132]	; 0x84
 8004918:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800491a:	3301      	adds	r3, #1
 800491c:	2b07      	cmp	r3, #7
 800491e:	9320      	str	r3, [sp, #128]	; 0x80
 8004920:	dc02      	bgt.n	8004928 <_vfprintf_r+0xb88>
 8004922:	3408      	adds	r4, #8
 8004924:	3e10      	subs	r6, #16
 8004926:	e7d6      	b.n	80048d6 <_vfprintf_r+0xb36>
 8004928:	aa1f      	add	r2, sp, #124	; 0x7c
 800492a:	4641      	mov	r1, r8
 800492c:	4658      	mov	r0, fp
 800492e:	f002 feb6 	bl	800769e <__sprint_r>
 8004932:	2800      	cmp	r0, #0
 8004934:	f040 81ef 	bne.w	8004d16 <_vfprintf_r+0xf76>
 8004938:	ac2c      	add	r4, sp, #176	; 0xb0
 800493a:	e7f3      	b.n	8004924 <_vfprintf_r+0xb84>
 800493c:	0800844b 	.word	0x0800844b
 8004940:	0800845c 	.word	0x0800845c
 8004944:	0800848e 	.word	0x0800848e
 8004948:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800494a:	2b00      	cmp	r3, #0
 800494c:	dc7a      	bgt.n	8004a44 <_vfprintf_r+0xca4>
 800494e:	4b9d      	ldr	r3, [pc, #628]	; (8004bc4 <_vfprintf_r+0xe24>)
 8004950:	6023      	str	r3, [r4, #0]
 8004952:	2301      	movs	r3, #1
 8004954:	6063      	str	r3, [r4, #4]
 8004956:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8004958:	3301      	adds	r3, #1
 800495a:	9321      	str	r3, [sp, #132]	; 0x84
 800495c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800495e:	3301      	adds	r3, #1
 8004960:	2b07      	cmp	r3, #7
 8004962:	9320      	str	r3, [sp, #128]	; 0x80
 8004964:	dc44      	bgt.n	80049f0 <_vfprintf_r+0xc50>
 8004966:	3408      	adds	r4, #8
 8004968:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800496a:	b923      	cbnz	r3, 8004976 <_vfprintf_r+0xbd6>
 800496c:	9b03      	ldr	r3, [sp, #12]
 800496e:	b913      	cbnz	r3, 8004976 <_vfprintf_r+0xbd6>
 8004970:	07eb      	lsls	r3, r5, #31
 8004972:	f57f ad9e 	bpl.w	80044b2 <_vfprintf_r+0x712>
 8004976:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004978:	6023      	str	r3, [r4, #0]
 800497a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800497c:	6063      	str	r3, [r4, #4]
 800497e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004980:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8004982:	4413      	add	r3, r2
 8004984:	9321      	str	r3, [sp, #132]	; 0x84
 8004986:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8004988:	3301      	adds	r3, #1
 800498a:	2b07      	cmp	r3, #7
 800498c:	9320      	str	r3, [sp, #128]	; 0x80
 800498e:	dc39      	bgt.n	8004a04 <_vfprintf_r+0xc64>
 8004990:	f104 0308 	add.w	r3, r4, #8
 8004994:	9e19      	ldr	r6, [sp, #100]	; 0x64
 8004996:	2e00      	cmp	r6, #0
 8004998:	da19      	bge.n	80049ce <_vfprintf_r+0xc2e>
 800499a:	4f8b      	ldr	r7, [pc, #556]	; (8004bc8 <_vfprintf_r+0xe28>)
 800499c:	4276      	negs	r6, r6
 800499e:	2410      	movs	r4, #16
 80049a0:	2e10      	cmp	r6, #16
 80049a2:	601f      	str	r7, [r3, #0]
 80049a4:	dc38      	bgt.n	8004a18 <_vfprintf_r+0xc78>
 80049a6:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80049a8:	605e      	str	r6, [r3, #4]
 80049aa:	4416      	add	r6, r2
 80049ac:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80049ae:	9621      	str	r6, [sp, #132]	; 0x84
 80049b0:	3201      	adds	r2, #1
 80049b2:	2a07      	cmp	r2, #7
 80049b4:	f103 0308 	add.w	r3, r3, #8
 80049b8:	9220      	str	r2, [sp, #128]	; 0x80
 80049ba:	dd08      	ble.n	80049ce <_vfprintf_r+0xc2e>
 80049bc:	aa1f      	add	r2, sp, #124	; 0x7c
 80049be:	4641      	mov	r1, r8
 80049c0:	4658      	mov	r0, fp
 80049c2:	f002 fe6c 	bl	800769e <__sprint_r>
 80049c6:	2800      	cmp	r0, #0
 80049c8:	f040 81a5 	bne.w	8004d16 <_vfprintf_r+0xf76>
 80049cc:	ab2c      	add	r3, sp, #176	; 0xb0
 80049ce:	9a03      	ldr	r2, [sp, #12]
 80049d0:	605a      	str	r2, [r3, #4]
 80049d2:	9903      	ldr	r1, [sp, #12]
 80049d4:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80049d6:	f8c3 9000 	str.w	r9, [r3]
 80049da:	440a      	add	r2, r1
 80049dc:	9221      	str	r2, [sp, #132]	; 0x84
 80049de:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80049e0:	3201      	adds	r2, #1
 80049e2:	2a07      	cmp	r2, #7
 80049e4:	9220      	str	r2, [sp, #128]	; 0x80
 80049e6:	f73f ad5b 	bgt.w	80044a0 <_vfprintf_r+0x700>
 80049ea:	f103 0408 	add.w	r4, r3, #8
 80049ee:	e560      	b.n	80044b2 <_vfprintf_r+0x712>
 80049f0:	aa1f      	add	r2, sp, #124	; 0x7c
 80049f2:	4641      	mov	r1, r8
 80049f4:	4658      	mov	r0, fp
 80049f6:	f002 fe52 	bl	800769e <__sprint_r>
 80049fa:	2800      	cmp	r0, #0
 80049fc:	f040 818b 	bne.w	8004d16 <_vfprintf_r+0xf76>
 8004a00:	ac2c      	add	r4, sp, #176	; 0xb0
 8004a02:	e7b1      	b.n	8004968 <_vfprintf_r+0xbc8>
 8004a04:	aa1f      	add	r2, sp, #124	; 0x7c
 8004a06:	4641      	mov	r1, r8
 8004a08:	4658      	mov	r0, fp
 8004a0a:	f002 fe48 	bl	800769e <__sprint_r>
 8004a0e:	2800      	cmp	r0, #0
 8004a10:	f040 8181 	bne.w	8004d16 <_vfprintf_r+0xf76>
 8004a14:	ab2c      	add	r3, sp, #176	; 0xb0
 8004a16:	e7bd      	b.n	8004994 <_vfprintf_r+0xbf4>
 8004a18:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8004a1a:	605c      	str	r4, [r3, #4]
 8004a1c:	3210      	adds	r2, #16
 8004a1e:	9221      	str	r2, [sp, #132]	; 0x84
 8004a20:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8004a22:	3201      	adds	r2, #1
 8004a24:	2a07      	cmp	r2, #7
 8004a26:	9220      	str	r2, [sp, #128]	; 0x80
 8004a28:	dc02      	bgt.n	8004a30 <_vfprintf_r+0xc90>
 8004a2a:	3308      	adds	r3, #8
 8004a2c:	3e10      	subs	r6, #16
 8004a2e:	e7b7      	b.n	80049a0 <_vfprintf_r+0xc00>
 8004a30:	aa1f      	add	r2, sp, #124	; 0x7c
 8004a32:	4641      	mov	r1, r8
 8004a34:	4658      	mov	r0, fp
 8004a36:	f002 fe32 	bl	800769e <__sprint_r>
 8004a3a:	2800      	cmp	r0, #0
 8004a3c:	f040 816b 	bne.w	8004d16 <_vfprintf_r+0xf76>
 8004a40:	ab2c      	add	r3, sp, #176	; 0xb0
 8004a42:	e7f3      	b.n	8004a2c <_vfprintf_r+0xc8c>
 8004a44:	9b08      	ldr	r3, [sp, #32]
 8004a46:	9a03      	ldr	r2, [sp, #12]
 8004a48:	4293      	cmp	r3, r2
 8004a4a:	bfa8      	it	ge
 8004a4c:	4613      	movge	r3, r2
 8004a4e:	2b00      	cmp	r3, #0
 8004a50:	461e      	mov	r6, r3
 8004a52:	dd0b      	ble.n	8004a6c <_vfprintf_r+0xccc>
 8004a54:	6063      	str	r3, [r4, #4]
 8004a56:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8004a58:	f8c4 9000 	str.w	r9, [r4]
 8004a5c:	4433      	add	r3, r6
 8004a5e:	9321      	str	r3, [sp, #132]	; 0x84
 8004a60:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8004a62:	3301      	adds	r3, #1
 8004a64:	2b07      	cmp	r3, #7
 8004a66:	9320      	str	r3, [sp, #128]	; 0x80
 8004a68:	dc62      	bgt.n	8004b30 <_vfprintf_r+0xd90>
 8004a6a:	3408      	adds	r4, #8
 8004a6c:	9b08      	ldr	r3, [sp, #32]
 8004a6e:	2e00      	cmp	r6, #0
 8004a70:	bfa8      	it	ge
 8004a72:	1b9b      	subge	r3, r3, r6
 8004a74:	2b00      	cmp	r3, #0
 8004a76:	461e      	mov	r6, r3
 8004a78:	dd0f      	ble.n	8004a9a <_vfprintf_r+0xcfa>
 8004a7a:	4f53      	ldr	r7, [pc, #332]	; (8004bc8 <_vfprintf_r+0xe28>)
 8004a7c:	f04f 0a10 	mov.w	sl, #16
 8004a80:	2e10      	cmp	r6, #16
 8004a82:	6027      	str	r7, [r4, #0]
 8004a84:	dc5e      	bgt.n	8004b44 <_vfprintf_r+0xda4>
 8004a86:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8004a88:	6066      	str	r6, [r4, #4]
 8004a8a:	441e      	add	r6, r3
 8004a8c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8004a8e:	9621      	str	r6, [sp, #132]	; 0x84
 8004a90:	3301      	adds	r3, #1
 8004a92:	2b07      	cmp	r3, #7
 8004a94:	9320      	str	r3, [sp, #128]	; 0x80
 8004a96:	dc6c      	bgt.n	8004b72 <_vfprintf_r+0xdd2>
 8004a98:	3408      	adds	r4, #8
 8004a9a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8004a9c:	9a03      	ldr	r2, [sp, #12]
 8004a9e:	4293      	cmp	r3, r2
 8004aa0:	db01      	blt.n	8004aa6 <_vfprintf_r+0xd06>
 8004aa2:	07ef      	lsls	r7, r5, #31
 8004aa4:	d50d      	bpl.n	8004ac2 <_vfprintf_r+0xd22>
 8004aa6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004aa8:	6023      	str	r3, [r4, #0]
 8004aaa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004aac:	6063      	str	r3, [r4, #4]
 8004aae:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004ab0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8004ab2:	4413      	add	r3, r2
 8004ab4:	9321      	str	r3, [sp, #132]	; 0x84
 8004ab6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8004ab8:	3301      	adds	r3, #1
 8004aba:	2b07      	cmp	r3, #7
 8004abc:	9320      	str	r3, [sp, #128]	; 0x80
 8004abe:	dc62      	bgt.n	8004b86 <_vfprintf_r+0xde6>
 8004ac0:	3408      	adds	r4, #8
 8004ac2:	9b03      	ldr	r3, [sp, #12]
 8004ac4:	9a08      	ldr	r2, [sp, #32]
 8004ac6:	1a9e      	subs	r6, r3, r2
 8004ac8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8004aca:	9a03      	ldr	r2, [sp, #12]
 8004acc:	1ad3      	subs	r3, r2, r3
 8004ace:	429e      	cmp	r6, r3
 8004ad0:	bfa8      	it	ge
 8004ad2:	461e      	movge	r6, r3
 8004ad4:	2e00      	cmp	r6, #0
 8004ad6:	dd0c      	ble.n	8004af2 <_vfprintf_r+0xd52>
 8004ad8:	9b08      	ldr	r3, [sp, #32]
 8004ada:	444b      	add	r3, r9
 8004adc:	e884 0048 	stmia.w	r4, {r3, r6}
 8004ae0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8004ae2:	4433      	add	r3, r6
 8004ae4:	9321      	str	r3, [sp, #132]	; 0x84
 8004ae6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8004ae8:	3301      	adds	r3, #1
 8004aea:	2b07      	cmp	r3, #7
 8004aec:	9320      	str	r3, [sp, #128]	; 0x80
 8004aee:	dc54      	bgt.n	8004b9a <_vfprintf_r+0xdfa>
 8004af0:	3408      	adds	r4, #8
 8004af2:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8004af4:	9a03      	ldr	r2, [sp, #12]
 8004af6:	2e00      	cmp	r6, #0
 8004af8:	eba2 0303 	sub.w	r3, r2, r3
 8004afc:	bfac      	ite	ge
 8004afe:	1b9e      	subge	r6, r3, r6
 8004b00:	461e      	movlt	r6, r3
 8004b02:	2e00      	cmp	r6, #0
 8004b04:	f77f acd5 	ble.w	80044b2 <_vfprintf_r+0x712>
 8004b08:	4f2f      	ldr	r7, [pc, #188]	; (8004bc8 <_vfprintf_r+0xe28>)
 8004b0a:	f04f 0910 	mov.w	r9, #16
 8004b0e:	2e10      	cmp	r6, #16
 8004b10:	6027      	str	r7, [r4, #0]
 8004b12:	f77f aee3 	ble.w	80048dc <_vfprintf_r+0xb3c>
 8004b16:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8004b18:	f8c4 9004 	str.w	r9, [r4, #4]
 8004b1c:	3310      	adds	r3, #16
 8004b1e:	9321      	str	r3, [sp, #132]	; 0x84
 8004b20:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8004b22:	3301      	adds	r3, #1
 8004b24:	2b07      	cmp	r3, #7
 8004b26:	9320      	str	r3, [sp, #128]	; 0x80
 8004b28:	dc41      	bgt.n	8004bae <_vfprintf_r+0xe0e>
 8004b2a:	3408      	adds	r4, #8
 8004b2c:	3e10      	subs	r6, #16
 8004b2e:	e7ee      	b.n	8004b0e <_vfprintf_r+0xd6e>
 8004b30:	aa1f      	add	r2, sp, #124	; 0x7c
 8004b32:	4641      	mov	r1, r8
 8004b34:	4658      	mov	r0, fp
 8004b36:	f002 fdb2 	bl	800769e <__sprint_r>
 8004b3a:	2800      	cmp	r0, #0
 8004b3c:	f040 80eb 	bne.w	8004d16 <_vfprintf_r+0xf76>
 8004b40:	ac2c      	add	r4, sp, #176	; 0xb0
 8004b42:	e793      	b.n	8004a6c <_vfprintf_r+0xccc>
 8004b44:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8004b46:	f8c4 a004 	str.w	sl, [r4, #4]
 8004b4a:	3310      	adds	r3, #16
 8004b4c:	9321      	str	r3, [sp, #132]	; 0x84
 8004b4e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8004b50:	3301      	adds	r3, #1
 8004b52:	2b07      	cmp	r3, #7
 8004b54:	9320      	str	r3, [sp, #128]	; 0x80
 8004b56:	dc02      	bgt.n	8004b5e <_vfprintf_r+0xdbe>
 8004b58:	3408      	adds	r4, #8
 8004b5a:	3e10      	subs	r6, #16
 8004b5c:	e790      	b.n	8004a80 <_vfprintf_r+0xce0>
 8004b5e:	aa1f      	add	r2, sp, #124	; 0x7c
 8004b60:	4641      	mov	r1, r8
 8004b62:	4658      	mov	r0, fp
 8004b64:	f002 fd9b 	bl	800769e <__sprint_r>
 8004b68:	2800      	cmp	r0, #0
 8004b6a:	f040 80d4 	bne.w	8004d16 <_vfprintf_r+0xf76>
 8004b6e:	ac2c      	add	r4, sp, #176	; 0xb0
 8004b70:	e7f3      	b.n	8004b5a <_vfprintf_r+0xdba>
 8004b72:	aa1f      	add	r2, sp, #124	; 0x7c
 8004b74:	4641      	mov	r1, r8
 8004b76:	4658      	mov	r0, fp
 8004b78:	f002 fd91 	bl	800769e <__sprint_r>
 8004b7c:	2800      	cmp	r0, #0
 8004b7e:	f040 80ca 	bne.w	8004d16 <_vfprintf_r+0xf76>
 8004b82:	ac2c      	add	r4, sp, #176	; 0xb0
 8004b84:	e789      	b.n	8004a9a <_vfprintf_r+0xcfa>
 8004b86:	aa1f      	add	r2, sp, #124	; 0x7c
 8004b88:	4641      	mov	r1, r8
 8004b8a:	4658      	mov	r0, fp
 8004b8c:	f002 fd87 	bl	800769e <__sprint_r>
 8004b90:	2800      	cmp	r0, #0
 8004b92:	f040 80c0 	bne.w	8004d16 <_vfprintf_r+0xf76>
 8004b96:	ac2c      	add	r4, sp, #176	; 0xb0
 8004b98:	e793      	b.n	8004ac2 <_vfprintf_r+0xd22>
 8004b9a:	aa1f      	add	r2, sp, #124	; 0x7c
 8004b9c:	4641      	mov	r1, r8
 8004b9e:	4658      	mov	r0, fp
 8004ba0:	f002 fd7d 	bl	800769e <__sprint_r>
 8004ba4:	2800      	cmp	r0, #0
 8004ba6:	f040 80b6 	bne.w	8004d16 <_vfprintf_r+0xf76>
 8004baa:	ac2c      	add	r4, sp, #176	; 0xb0
 8004bac:	e7a1      	b.n	8004af2 <_vfprintf_r+0xd52>
 8004bae:	aa1f      	add	r2, sp, #124	; 0x7c
 8004bb0:	4641      	mov	r1, r8
 8004bb2:	4658      	mov	r0, fp
 8004bb4:	f002 fd73 	bl	800769e <__sprint_r>
 8004bb8:	2800      	cmp	r0, #0
 8004bba:	f040 80ac 	bne.w	8004d16 <_vfprintf_r+0xf76>
 8004bbe:	ac2c      	add	r4, sp, #176	; 0xb0
 8004bc0:	e7b4      	b.n	8004b2c <_vfprintf_r+0xd8c>
 8004bc2:	bf00      	nop
 8004bc4:	0800845c 	.word	0x0800845c
 8004bc8:	0800848e 	.word	0x0800848e
 8004bcc:	9b03      	ldr	r3, [sp, #12]
 8004bce:	2b01      	cmp	r3, #1
 8004bd0:	dc01      	bgt.n	8004bd6 <_vfprintf_r+0xe36>
 8004bd2:	07ee      	lsls	r6, r5, #31
 8004bd4:	d576      	bpl.n	8004cc4 <_vfprintf_r+0xf24>
 8004bd6:	2301      	movs	r3, #1
 8004bd8:	6063      	str	r3, [r4, #4]
 8004bda:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8004bdc:	f8c4 9000 	str.w	r9, [r4]
 8004be0:	3301      	adds	r3, #1
 8004be2:	9321      	str	r3, [sp, #132]	; 0x84
 8004be4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8004be6:	3301      	adds	r3, #1
 8004be8:	2b07      	cmp	r3, #7
 8004bea:	9320      	str	r3, [sp, #128]	; 0x80
 8004bec:	dc36      	bgt.n	8004c5c <_vfprintf_r+0xebc>
 8004bee:	3408      	adds	r4, #8
 8004bf0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004bf2:	6023      	str	r3, [r4, #0]
 8004bf4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004bf6:	6063      	str	r3, [r4, #4]
 8004bf8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004bfa:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8004bfc:	4413      	add	r3, r2
 8004bfe:	9321      	str	r3, [sp, #132]	; 0x84
 8004c00:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8004c02:	3301      	adds	r3, #1
 8004c04:	2b07      	cmp	r3, #7
 8004c06:	9320      	str	r3, [sp, #128]	; 0x80
 8004c08:	dc31      	bgt.n	8004c6e <_vfprintf_r+0xece>
 8004c0a:	3408      	adds	r4, #8
 8004c0c:	2300      	movs	r3, #0
 8004c0e:	2200      	movs	r2, #0
 8004c10:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8004c14:	f7fb ff5c 	bl	8000ad0 <__aeabi_dcmpeq>
 8004c18:	9b03      	ldr	r3, [sp, #12]
 8004c1a:	1e5e      	subs	r6, r3, #1
 8004c1c:	2800      	cmp	r0, #0
 8004c1e:	d12f      	bne.n	8004c80 <_vfprintf_r+0xee0>
 8004c20:	f109 0301 	add.w	r3, r9, #1
 8004c24:	e884 0048 	stmia.w	r4, {r3, r6}
 8004c28:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8004c2a:	9a03      	ldr	r2, [sp, #12]
 8004c2c:	3b01      	subs	r3, #1
 8004c2e:	4413      	add	r3, r2
 8004c30:	9321      	str	r3, [sp, #132]	; 0x84
 8004c32:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8004c34:	3301      	adds	r3, #1
 8004c36:	2b07      	cmp	r3, #7
 8004c38:	9320      	str	r3, [sp, #128]	; 0x80
 8004c3a:	dd4a      	ble.n	8004cd2 <_vfprintf_r+0xf32>
 8004c3c:	aa1f      	add	r2, sp, #124	; 0x7c
 8004c3e:	4641      	mov	r1, r8
 8004c40:	4658      	mov	r0, fp
 8004c42:	f002 fd2c 	bl	800769e <__sprint_r>
 8004c46:	2800      	cmp	r0, #0
 8004c48:	d165      	bne.n	8004d16 <_vfprintf_r+0xf76>
 8004c4a:	ac2c      	add	r4, sp, #176	; 0xb0
 8004c4c:	ab1b      	add	r3, sp, #108	; 0x6c
 8004c4e:	6023      	str	r3, [r4, #0]
 8004c50:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8004c52:	6063      	str	r3, [r4, #4]
 8004c54:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8004c56:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8004c58:	4413      	add	r3, r2
 8004c5a:	e41a      	b.n	8004492 <_vfprintf_r+0x6f2>
 8004c5c:	aa1f      	add	r2, sp, #124	; 0x7c
 8004c5e:	4641      	mov	r1, r8
 8004c60:	4658      	mov	r0, fp
 8004c62:	f002 fd1c 	bl	800769e <__sprint_r>
 8004c66:	2800      	cmp	r0, #0
 8004c68:	d155      	bne.n	8004d16 <_vfprintf_r+0xf76>
 8004c6a:	ac2c      	add	r4, sp, #176	; 0xb0
 8004c6c:	e7c0      	b.n	8004bf0 <_vfprintf_r+0xe50>
 8004c6e:	aa1f      	add	r2, sp, #124	; 0x7c
 8004c70:	4641      	mov	r1, r8
 8004c72:	4658      	mov	r0, fp
 8004c74:	f002 fd13 	bl	800769e <__sprint_r>
 8004c78:	2800      	cmp	r0, #0
 8004c7a:	d14c      	bne.n	8004d16 <_vfprintf_r+0xf76>
 8004c7c:	ac2c      	add	r4, sp, #176	; 0xb0
 8004c7e:	e7c5      	b.n	8004c0c <_vfprintf_r+0xe6c>
 8004c80:	2e00      	cmp	r6, #0
 8004c82:	dde3      	ble.n	8004c4c <_vfprintf_r+0xeac>
 8004c84:	4f60      	ldr	r7, [pc, #384]	; (8004e08 <_vfprintf_r+0x1068>)
 8004c86:	f04f 0910 	mov.w	r9, #16
 8004c8a:	2e10      	cmp	r6, #16
 8004c8c:	6027      	str	r7, [r4, #0]
 8004c8e:	dc04      	bgt.n	8004c9a <_vfprintf_r+0xefa>
 8004c90:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8004c92:	6066      	str	r6, [r4, #4]
 8004c94:	441e      	add	r6, r3
 8004c96:	9621      	str	r6, [sp, #132]	; 0x84
 8004c98:	e7cb      	b.n	8004c32 <_vfprintf_r+0xe92>
 8004c9a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8004c9c:	f8c4 9004 	str.w	r9, [r4, #4]
 8004ca0:	3310      	adds	r3, #16
 8004ca2:	9321      	str	r3, [sp, #132]	; 0x84
 8004ca4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8004ca6:	3301      	adds	r3, #1
 8004ca8:	2b07      	cmp	r3, #7
 8004caa:	9320      	str	r3, [sp, #128]	; 0x80
 8004cac:	dc02      	bgt.n	8004cb4 <_vfprintf_r+0xf14>
 8004cae:	3408      	adds	r4, #8
 8004cb0:	3e10      	subs	r6, #16
 8004cb2:	e7ea      	b.n	8004c8a <_vfprintf_r+0xeea>
 8004cb4:	aa1f      	add	r2, sp, #124	; 0x7c
 8004cb6:	4641      	mov	r1, r8
 8004cb8:	4658      	mov	r0, fp
 8004cba:	f002 fcf0 	bl	800769e <__sprint_r>
 8004cbe:	bb50      	cbnz	r0, 8004d16 <_vfprintf_r+0xf76>
 8004cc0:	ac2c      	add	r4, sp, #176	; 0xb0
 8004cc2:	e7f5      	b.n	8004cb0 <_vfprintf_r+0xf10>
 8004cc4:	2301      	movs	r3, #1
 8004cc6:	6063      	str	r3, [r4, #4]
 8004cc8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8004cca:	f8c4 9000 	str.w	r9, [r4]
 8004cce:	3301      	adds	r3, #1
 8004cd0:	e7ae      	b.n	8004c30 <_vfprintf_r+0xe90>
 8004cd2:	3408      	adds	r4, #8
 8004cd4:	e7ba      	b.n	8004c4c <_vfprintf_r+0xeac>
 8004cd6:	3408      	adds	r4, #8
 8004cd8:	f7ff bbeb 	b.w	80044b2 <_vfprintf_r+0x712>
 8004cdc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004cde:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8004ce0:	1a9d      	subs	r5, r3, r2
 8004ce2:	2d00      	cmp	r5, #0
 8004ce4:	f77f abe8 	ble.w	80044b8 <_vfprintf_r+0x718>
 8004ce8:	2610      	movs	r6, #16
 8004cea:	4b48      	ldr	r3, [pc, #288]	; (8004e0c <_vfprintf_r+0x106c>)
 8004cec:	6023      	str	r3, [r4, #0]
 8004cee:	2d10      	cmp	r5, #16
 8004cf0:	dc24      	bgt.n	8004d3c <_vfprintf_r+0xf9c>
 8004cf2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8004cf4:	6065      	str	r5, [r4, #4]
 8004cf6:	441d      	add	r5, r3
 8004cf8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8004cfa:	9521      	str	r5, [sp, #132]	; 0x84
 8004cfc:	3301      	adds	r3, #1
 8004cfe:	2b07      	cmp	r3, #7
 8004d00:	9320      	str	r3, [sp, #128]	; 0x80
 8004d02:	f77f abd9 	ble.w	80044b8 <_vfprintf_r+0x718>
 8004d06:	aa1f      	add	r2, sp, #124	; 0x7c
 8004d08:	4641      	mov	r1, r8
 8004d0a:	4658      	mov	r0, fp
 8004d0c:	f002 fcc7 	bl	800769e <__sprint_r>
 8004d10:	2800      	cmp	r0, #0
 8004d12:	f43f abd1 	beq.w	80044b8 <_vfprintf_r+0x718>
 8004d16:	f8d8 3064 	ldr.w	r3, [r8, #100]	; 0x64
 8004d1a:	07d9      	lsls	r1, r3, #31
 8004d1c:	d407      	bmi.n	8004d2e <_vfprintf_r+0xf8e>
 8004d1e:	f8b8 300c 	ldrh.w	r3, [r8, #12]
 8004d22:	059a      	lsls	r2, r3, #22
 8004d24:	d403      	bmi.n	8004d2e <_vfprintf_r+0xf8e>
 8004d26:	f8d8 0058 	ldr.w	r0, [r8, #88]	; 0x58
 8004d2a:	f001 fc3e 	bl	80065aa <__retarget_lock_release_recursive>
 8004d2e:	f8b8 300c 	ldrh.w	r3, [r8, #12]
 8004d32:	065b      	lsls	r3, r3, #25
 8004d34:	f57f a8af 	bpl.w	8003e96 <_vfprintf_r+0xf6>
 8004d38:	f7ff b882 	b.w	8003e40 <_vfprintf_r+0xa0>
 8004d3c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8004d3e:	6066      	str	r6, [r4, #4]
 8004d40:	3310      	adds	r3, #16
 8004d42:	9321      	str	r3, [sp, #132]	; 0x84
 8004d44:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8004d46:	3301      	adds	r3, #1
 8004d48:	2b07      	cmp	r3, #7
 8004d4a:	9320      	str	r3, [sp, #128]	; 0x80
 8004d4c:	dc02      	bgt.n	8004d54 <_vfprintf_r+0xfb4>
 8004d4e:	3408      	adds	r4, #8
 8004d50:	3d10      	subs	r5, #16
 8004d52:	e7ca      	b.n	8004cea <_vfprintf_r+0xf4a>
 8004d54:	aa1f      	add	r2, sp, #124	; 0x7c
 8004d56:	4641      	mov	r1, r8
 8004d58:	4658      	mov	r0, fp
 8004d5a:	f002 fca0 	bl	800769e <__sprint_r>
 8004d5e:	2800      	cmp	r0, #0
 8004d60:	d1d9      	bne.n	8004d16 <_vfprintf_r+0xf76>
 8004d62:	ac2c      	add	r4, sp, #176	; 0xb0
 8004d64:	e7f4      	b.n	8004d50 <_vfprintf_r+0xfb0>
 8004d66:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8004d68:	b913      	cbnz	r3, 8004d70 <_vfprintf_r+0xfd0>
 8004d6a:	2300      	movs	r3, #0
 8004d6c:	9320      	str	r3, [sp, #128]	; 0x80
 8004d6e:	e7d2      	b.n	8004d16 <_vfprintf_r+0xf76>
 8004d70:	aa1f      	add	r2, sp, #124	; 0x7c
 8004d72:	4641      	mov	r1, r8
 8004d74:	4658      	mov	r0, fp
 8004d76:	f002 fc92 	bl	800769e <__sprint_r>
 8004d7a:	2800      	cmp	r0, #0
 8004d7c:	d0f5      	beq.n	8004d6a <_vfprintf_r+0xfca>
 8004d7e:	e7ca      	b.n	8004d16 <_vfprintf_r+0xf76>
 8004d80:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8004d84:	4610      	mov	r0, r2
 8004d86:	4619      	mov	r1, r3
 8004d88:	f7fb fed4 	bl	8000b34 <__aeabi_dcmpun>
 8004d8c:	2800      	cmp	r0, #0
 8004d8e:	f43f aa36 	beq.w	80041fe <_vfprintf_r+0x45e>
 8004d92:	4b1f      	ldr	r3, [pc, #124]	; (8004e10 <_vfprintf_r+0x1070>)
 8004d94:	4a1f      	ldr	r2, [pc, #124]	; (8004e14 <_vfprintf_r+0x1074>)
 8004d96:	f7ff ba26 	b.w	80041e6 <_vfprintf_r+0x446>
 8004d9a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8004d9c:	1a1b      	subs	r3, r3, r0
 8004d9e:	9303      	str	r3, [sp, #12]
 8004da0:	f7ff baa9 	b.w	80042f6 <_vfprintf_r+0x556>
 8004da4:	ea56 0207 	orrs.w	r2, r6, r7
 8004da8:	9508      	str	r5, [sp, #32]
 8004daa:	f43f ac1e 	beq.w	80045ea <_vfprintf_r+0x84a>
 8004dae:	2b01      	cmp	r3, #1
 8004db0:	f43f ac8f 	beq.w	80046d2 <_vfprintf_r+0x932>
 8004db4:	2b02      	cmp	r3, #2
 8004db6:	f43f acaf 	beq.w	8004718 <_vfprintf_r+0x978>
 8004dba:	ab2c      	add	r3, sp, #176	; 0xb0
 8004dbc:	08f1      	lsrs	r1, r6, #3
 8004dbe:	ea41 7147 	orr.w	r1, r1, r7, lsl #29
 8004dc2:	08f8      	lsrs	r0, r7, #3
 8004dc4:	f006 0207 	and.w	r2, r6, #7
 8004dc8:	4607      	mov	r7, r0
 8004dca:	460e      	mov	r6, r1
 8004dcc:	3230      	adds	r2, #48	; 0x30
 8004dce:	ea56 0107 	orrs.w	r1, r6, r7
 8004dd2:	f103 39ff 	add.w	r9, r3, #4294967295
 8004dd6:	f803 2c01 	strb.w	r2, [r3, #-1]
 8004dda:	f47f ac78 	bne.w	80046ce <_vfprintf_r+0x92e>
 8004dde:	9908      	ldr	r1, [sp, #32]
 8004de0:	07cd      	lsls	r5, r1, #31
 8004de2:	d506      	bpl.n	8004df2 <_vfprintf_r+0x1052>
 8004de4:	2a30      	cmp	r2, #48	; 0x30
 8004de6:	d004      	beq.n	8004df2 <_vfprintf_r+0x1052>
 8004de8:	2230      	movs	r2, #48	; 0x30
 8004dea:	f809 2c01 	strb.w	r2, [r9, #-1]
 8004dee:	f1a3 0902 	sub.w	r9, r3, #2
 8004df2:	4656      	mov	r6, sl
 8004df4:	2300      	movs	r3, #0
 8004df6:	f10d 0ab0 	add.w	sl, sp, #176	; 0xb0
 8004dfa:	9d08      	ldr	r5, [sp, #32]
 8004dfc:	9308      	str	r3, [sp, #32]
 8004dfe:	ebaa 0a09 	sub.w	sl, sl, r9
 8004e02:	f7ff bac6 	b.w	8004392 <_vfprintf_r+0x5f2>
 8004e06:	bf00      	nop
 8004e08:	0800848e 	.word	0x0800848e
 8004e0c:	0800847e 	.word	0x0800847e
 8004e10:	08008432 	.word	0x08008432
 8004e14:	08008436 	.word	0x08008436

08004e18 <__sbprintf>:
 8004e18:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004e1a:	460c      	mov	r4, r1
 8004e1c:	f2ad 4d6c 	subw	sp, sp, #1132	; 0x46c
 8004e20:	461f      	mov	r7, r3
 8004e22:	8989      	ldrh	r1, [r1, #12]
 8004e24:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8004e26:	9319      	str	r3, [sp, #100]	; 0x64
 8004e28:	89e3      	ldrh	r3, [r4, #14]
 8004e2a:	f8ad 300e 	strh.w	r3, [sp, #14]
 8004e2e:	f021 0102 	bic.w	r1, r1, #2
 8004e32:	6a23      	ldr	r3, [r4, #32]
 8004e34:	f8ad 100c 	strh.w	r1, [sp, #12]
 8004e38:	9308      	str	r3, [sp, #32]
 8004e3a:	a91a      	add	r1, sp, #104	; 0x68
 8004e3c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8004e3e:	930a      	str	r3, [sp, #40]	; 0x28
 8004e40:	4615      	mov	r5, r2
 8004e42:	2300      	movs	r3, #0
 8004e44:	4606      	mov	r6, r0
 8004e46:	9100      	str	r1, [sp, #0]
 8004e48:	9104      	str	r1, [sp, #16]
 8004e4a:	a816      	add	r0, sp, #88	; 0x58
 8004e4c:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8004e50:	9102      	str	r1, [sp, #8]
 8004e52:	9105      	str	r1, [sp, #20]
 8004e54:	9306      	str	r3, [sp, #24]
 8004e56:	f001 fba5 	bl	80065a4 <__retarget_lock_init_recursive>
 8004e5a:	462a      	mov	r2, r5
 8004e5c:	463b      	mov	r3, r7
 8004e5e:	4669      	mov	r1, sp
 8004e60:	4630      	mov	r0, r6
 8004e62:	f7fe ff9d 	bl	8003da0 <_vfprintf_r>
 8004e66:	1e05      	subs	r5, r0, #0
 8004e68:	db07      	blt.n	8004e7a <__sbprintf+0x62>
 8004e6a:	4669      	mov	r1, sp
 8004e6c:	4630      	mov	r0, r6
 8004e6e:	f000 ffcb 	bl	8005e08 <_fflush_r>
 8004e72:	2800      	cmp	r0, #0
 8004e74:	bf18      	it	ne
 8004e76:	f04f 35ff 	movne.w	r5, #4294967295
 8004e7a:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8004e7e:	9816      	ldr	r0, [sp, #88]	; 0x58
 8004e80:	065b      	lsls	r3, r3, #25
 8004e82:	bf42      	ittt	mi
 8004e84:	89a3      	ldrhmi	r3, [r4, #12]
 8004e86:	f043 0340 	orrmi.w	r3, r3, #64	; 0x40
 8004e8a:	81a3      	strhmi	r3, [r4, #12]
 8004e8c:	f001 fb8b 	bl	80065a6 <__retarget_lock_close_recursive>
 8004e90:	4628      	mov	r0, r5
 8004e92:	f20d 4d6c 	addw	sp, sp, #1132	; 0x46c
 8004e96:	bdf0      	pop	{r4, r5, r6, r7, pc}

08004e98 <__swbuf_r>:
 8004e98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004e9a:	460e      	mov	r6, r1
 8004e9c:	4614      	mov	r4, r2
 8004e9e:	4605      	mov	r5, r0
 8004ea0:	b118      	cbz	r0, 8004eaa <__swbuf_r+0x12>
 8004ea2:	6983      	ldr	r3, [r0, #24]
 8004ea4:	b90b      	cbnz	r3, 8004eaa <__swbuf_r+0x12>
 8004ea6:	f001 f855 	bl	8005f54 <__sinit>
 8004eaa:	4b27      	ldr	r3, [pc, #156]	; (8004f48 <__swbuf_r+0xb0>)
 8004eac:	429c      	cmp	r4, r3
 8004eae:	d12f      	bne.n	8004f10 <__swbuf_r+0x78>
 8004eb0:	686c      	ldr	r4, [r5, #4]
 8004eb2:	69a3      	ldr	r3, [r4, #24]
 8004eb4:	60a3      	str	r3, [r4, #8]
 8004eb6:	89a3      	ldrh	r3, [r4, #12]
 8004eb8:	0719      	lsls	r1, r3, #28
 8004eba:	d533      	bpl.n	8004f24 <__swbuf_r+0x8c>
 8004ebc:	6923      	ldr	r3, [r4, #16]
 8004ebe:	2b00      	cmp	r3, #0
 8004ec0:	d030      	beq.n	8004f24 <__swbuf_r+0x8c>
 8004ec2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004ec6:	b2f6      	uxtb	r6, r6
 8004ec8:	049a      	lsls	r2, r3, #18
 8004eca:	4637      	mov	r7, r6
 8004ecc:	d534      	bpl.n	8004f38 <__swbuf_r+0xa0>
 8004ece:	6923      	ldr	r3, [r4, #16]
 8004ed0:	6820      	ldr	r0, [r4, #0]
 8004ed2:	1ac0      	subs	r0, r0, r3
 8004ed4:	6963      	ldr	r3, [r4, #20]
 8004ed6:	4298      	cmp	r0, r3
 8004ed8:	db04      	blt.n	8004ee4 <__swbuf_r+0x4c>
 8004eda:	4621      	mov	r1, r4
 8004edc:	4628      	mov	r0, r5
 8004ede:	f000 ff93 	bl	8005e08 <_fflush_r>
 8004ee2:	bb28      	cbnz	r0, 8004f30 <__swbuf_r+0x98>
 8004ee4:	68a3      	ldr	r3, [r4, #8]
 8004ee6:	3b01      	subs	r3, #1
 8004ee8:	60a3      	str	r3, [r4, #8]
 8004eea:	6823      	ldr	r3, [r4, #0]
 8004eec:	1c5a      	adds	r2, r3, #1
 8004eee:	6022      	str	r2, [r4, #0]
 8004ef0:	701e      	strb	r6, [r3, #0]
 8004ef2:	6963      	ldr	r3, [r4, #20]
 8004ef4:	3001      	adds	r0, #1
 8004ef6:	4298      	cmp	r0, r3
 8004ef8:	d004      	beq.n	8004f04 <__swbuf_r+0x6c>
 8004efa:	89a3      	ldrh	r3, [r4, #12]
 8004efc:	07db      	lsls	r3, r3, #31
 8004efe:	d519      	bpl.n	8004f34 <__swbuf_r+0x9c>
 8004f00:	2e0a      	cmp	r6, #10
 8004f02:	d117      	bne.n	8004f34 <__swbuf_r+0x9c>
 8004f04:	4621      	mov	r1, r4
 8004f06:	4628      	mov	r0, r5
 8004f08:	f000 ff7e 	bl	8005e08 <_fflush_r>
 8004f0c:	b190      	cbz	r0, 8004f34 <__swbuf_r+0x9c>
 8004f0e:	e00f      	b.n	8004f30 <__swbuf_r+0x98>
 8004f10:	4b0e      	ldr	r3, [pc, #56]	; (8004f4c <__swbuf_r+0xb4>)
 8004f12:	429c      	cmp	r4, r3
 8004f14:	d101      	bne.n	8004f1a <__swbuf_r+0x82>
 8004f16:	68ac      	ldr	r4, [r5, #8]
 8004f18:	e7cb      	b.n	8004eb2 <__swbuf_r+0x1a>
 8004f1a:	4b0d      	ldr	r3, [pc, #52]	; (8004f50 <__swbuf_r+0xb8>)
 8004f1c:	429c      	cmp	r4, r3
 8004f1e:	bf08      	it	eq
 8004f20:	68ec      	ldreq	r4, [r5, #12]
 8004f22:	e7c6      	b.n	8004eb2 <__swbuf_r+0x1a>
 8004f24:	4621      	mov	r1, r4
 8004f26:	4628      	mov	r0, r5
 8004f28:	f000 f814 	bl	8004f54 <__swsetup_r>
 8004f2c:	2800      	cmp	r0, #0
 8004f2e:	d0c8      	beq.n	8004ec2 <__swbuf_r+0x2a>
 8004f30:	f04f 37ff 	mov.w	r7, #4294967295
 8004f34:	4638      	mov	r0, r7
 8004f36:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004f38:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8004f3c:	81a3      	strh	r3, [r4, #12]
 8004f3e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8004f40:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8004f44:	6663      	str	r3, [r4, #100]	; 0x64
 8004f46:	e7c2      	b.n	8004ece <__swbuf_r+0x36>
 8004f48:	080084cc 	.word	0x080084cc
 8004f4c:	080084ec 	.word	0x080084ec
 8004f50:	080084ac 	.word	0x080084ac

08004f54 <__swsetup_r>:
 8004f54:	4b32      	ldr	r3, [pc, #200]	; (8005020 <__swsetup_r+0xcc>)
 8004f56:	b570      	push	{r4, r5, r6, lr}
 8004f58:	681d      	ldr	r5, [r3, #0]
 8004f5a:	4606      	mov	r6, r0
 8004f5c:	460c      	mov	r4, r1
 8004f5e:	b125      	cbz	r5, 8004f6a <__swsetup_r+0x16>
 8004f60:	69ab      	ldr	r3, [r5, #24]
 8004f62:	b913      	cbnz	r3, 8004f6a <__swsetup_r+0x16>
 8004f64:	4628      	mov	r0, r5
 8004f66:	f000 fff5 	bl	8005f54 <__sinit>
 8004f6a:	4b2e      	ldr	r3, [pc, #184]	; (8005024 <__swsetup_r+0xd0>)
 8004f6c:	429c      	cmp	r4, r3
 8004f6e:	d10f      	bne.n	8004f90 <__swsetup_r+0x3c>
 8004f70:	686c      	ldr	r4, [r5, #4]
 8004f72:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004f76:	b29a      	uxth	r2, r3
 8004f78:	0715      	lsls	r5, r2, #28
 8004f7a:	d42c      	bmi.n	8004fd6 <__swsetup_r+0x82>
 8004f7c:	06d0      	lsls	r0, r2, #27
 8004f7e:	d411      	bmi.n	8004fa4 <__swsetup_r+0x50>
 8004f80:	2209      	movs	r2, #9
 8004f82:	6032      	str	r2, [r6, #0]
 8004f84:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004f88:	81a3      	strh	r3, [r4, #12]
 8004f8a:	f04f 30ff 	mov.w	r0, #4294967295
 8004f8e:	bd70      	pop	{r4, r5, r6, pc}
 8004f90:	4b25      	ldr	r3, [pc, #148]	; (8005028 <__swsetup_r+0xd4>)
 8004f92:	429c      	cmp	r4, r3
 8004f94:	d101      	bne.n	8004f9a <__swsetup_r+0x46>
 8004f96:	68ac      	ldr	r4, [r5, #8]
 8004f98:	e7eb      	b.n	8004f72 <__swsetup_r+0x1e>
 8004f9a:	4b24      	ldr	r3, [pc, #144]	; (800502c <__swsetup_r+0xd8>)
 8004f9c:	429c      	cmp	r4, r3
 8004f9e:	bf08      	it	eq
 8004fa0:	68ec      	ldreq	r4, [r5, #12]
 8004fa2:	e7e6      	b.n	8004f72 <__swsetup_r+0x1e>
 8004fa4:	0751      	lsls	r1, r2, #29
 8004fa6:	d512      	bpl.n	8004fce <__swsetup_r+0x7a>
 8004fa8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8004faa:	b141      	cbz	r1, 8004fbe <__swsetup_r+0x6a>
 8004fac:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8004fb0:	4299      	cmp	r1, r3
 8004fb2:	d002      	beq.n	8004fba <__swsetup_r+0x66>
 8004fb4:	4630      	mov	r0, r6
 8004fb6:	f001 f8a3 	bl	8006100 <_free_r>
 8004fba:	2300      	movs	r3, #0
 8004fbc:	6363      	str	r3, [r4, #52]	; 0x34
 8004fbe:	89a3      	ldrh	r3, [r4, #12]
 8004fc0:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8004fc4:	81a3      	strh	r3, [r4, #12]
 8004fc6:	2300      	movs	r3, #0
 8004fc8:	6063      	str	r3, [r4, #4]
 8004fca:	6923      	ldr	r3, [r4, #16]
 8004fcc:	6023      	str	r3, [r4, #0]
 8004fce:	89a3      	ldrh	r3, [r4, #12]
 8004fd0:	f043 0308 	orr.w	r3, r3, #8
 8004fd4:	81a3      	strh	r3, [r4, #12]
 8004fd6:	6923      	ldr	r3, [r4, #16]
 8004fd8:	b94b      	cbnz	r3, 8004fee <__swsetup_r+0x9a>
 8004fda:	89a3      	ldrh	r3, [r4, #12]
 8004fdc:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8004fe0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8004fe4:	d003      	beq.n	8004fee <__swsetup_r+0x9a>
 8004fe6:	4621      	mov	r1, r4
 8004fe8:	4630      	mov	r0, r6
 8004fea:	f001 fb0b 	bl	8006604 <__smakebuf_r>
 8004fee:	89a2      	ldrh	r2, [r4, #12]
 8004ff0:	f012 0301 	ands.w	r3, r2, #1
 8004ff4:	d00c      	beq.n	8005010 <__swsetup_r+0xbc>
 8004ff6:	2300      	movs	r3, #0
 8004ff8:	60a3      	str	r3, [r4, #8]
 8004ffa:	6963      	ldr	r3, [r4, #20]
 8004ffc:	425b      	negs	r3, r3
 8004ffe:	61a3      	str	r3, [r4, #24]
 8005000:	6923      	ldr	r3, [r4, #16]
 8005002:	b953      	cbnz	r3, 800501a <__swsetup_r+0xc6>
 8005004:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005008:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 800500c:	d1ba      	bne.n	8004f84 <__swsetup_r+0x30>
 800500e:	bd70      	pop	{r4, r5, r6, pc}
 8005010:	0792      	lsls	r2, r2, #30
 8005012:	bf58      	it	pl
 8005014:	6963      	ldrpl	r3, [r4, #20]
 8005016:	60a3      	str	r3, [r4, #8]
 8005018:	e7f2      	b.n	8005000 <__swsetup_r+0xac>
 800501a:	2000      	movs	r0, #0
 800501c:	e7f7      	b.n	800500e <__swsetup_r+0xba>
 800501e:	bf00      	nop
 8005020:	20000010 	.word	0x20000010
 8005024:	080084cc 	.word	0x080084cc
 8005028:	080084ec 	.word	0x080084ec
 800502c:	080084ac 	.word	0x080084ac

08005030 <quorem>:
 8005030:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005034:	6903      	ldr	r3, [r0, #16]
 8005036:	690c      	ldr	r4, [r1, #16]
 8005038:	429c      	cmp	r4, r3
 800503a:	4680      	mov	r8, r0
 800503c:	f300 8082 	bgt.w	8005144 <quorem+0x114>
 8005040:	3c01      	subs	r4, #1
 8005042:	f101 0714 	add.w	r7, r1, #20
 8005046:	ea4f 0e84 	mov.w	lr, r4, lsl #2
 800504a:	f100 0614 	add.w	r6, r0, #20
 800504e:	f857 5024 	ldr.w	r5, [r7, r4, lsl #2]
 8005052:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
 8005056:	eb06 030e 	add.w	r3, r6, lr
 800505a:	3501      	adds	r5, #1
 800505c:	eb07 090e 	add.w	r9, r7, lr
 8005060:	9301      	str	r3, [sp, #4]
 8005062:	fbb0 f5f5 	udiv	r5, r0, r5
 8005066:	b395      	cbz	r5, 80050ce <quorem+0x9e>
 8005068:	f04f 0a00 	mov.w	sl, #0
 800506c:	4638      	mov	r0, r7
 800506e:	46b4      	mov	ip, r6
 8005070:	46d3      	mov	fp, sl
 8005072:	f850 2b04 	ldr.w	r2, [r0], #4
 8005076:	b293      	uxth	r3, r2
 8005078:	fb05 a303 	mla	r3, r5, r3, sl
 800507c:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8005080:	b29b      	uxth	r3, r3
 8005082:	ebab 0303 	sub.w	r3, fp, r3
 8005086:	0c12      	lsrs	r2, r2, #16
 8005088:	f8bc b000 	ldrh.w	fp, [ip]
 800508c:	fb05 a202 	mla	r2, r5, r2, sl
 8005090:	fa13 f38b 	uxtah	r3, r3, fp
 8005094:	ea4f 4a12 	mov.w	sl, r2, lsr #16
 8005098:	fa1f fb82 	uxth.w	fp, r2
 800509c:	f8dc 2000 	ldr.w	r2, [ip]
 80050a0:	ebcb 4212 	rsb	r2, fp, r2, lsr #16
 80050a4:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80050a8:	b29b      	uxth	r3, r3
 80050aa:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80050ae:	4581      	cmp	r9, r0
 80050b0:	ea4f 4b22 	mov.w	fp, r2, asr #16
 80050b4:	f84c 3b04 	str.w	r3, [ip], #4
 80050b8:	d2db      	bcs.n	8005072 <quorem+0x42>
 80050ba:	f856 300e 	ldr.w	r3, [r6, lr]
 80050be:	b933      	cbnz	r3, 80050ce <quorem+0x9e>
 80050c0:	9b01      	ldr	r3, [sp, #4]
 80050c2:	3b04      	subs	r3, #4
 80050c4:	429e      	cmp	r6, r3
 80050c6:	461a      	mov	r2, r3
 80050c8:	d330      	bcc.n	800512c <quorem+0xfc>
 80050ca:	f8c8 4010 	str.w	r4, [r8, #16]
 80050ce:	4640      	mov	r0, r8
 80050d0:	f001 ff31 	bl	8006f36 <__mcmp>
 80050d4:	2800      	cmp	r0, #0
 80050d6:	db25      	blt.n	8005124 <quorem+0xf4>
 80050d8:	3501      	adds	r5, #1
 80050da:	4630      	mov	r0, r6
 80050dc:	f04f 0e00 	mov.w	lr, #0
 80050e0:	f857 2b04 	ldr.w	r2, [r7], #4
 80050e4:	f8d0 c000 	ldr.w	ip, [r0]
 80050e8:	b293      	uxth	r3, r2
 80050ea:	ebae 0303 	sub.w	r3, lr, r3
 80050ee:	0c12      	lsrs	r2, r2, #16
 80050f0:	fa13 f38c 	uxtah	r3, r3, ip
 80050f4:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
 80050f8:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80050fc:	b29b      	uxth	r3, r3
 80050fe:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8005102:	45b9      	cmp	r9, r7
 8005104:	ea4f 4e22 	mov.w	lr, r2, asr #16
 8005108:	f840 3b04 	str.w	r3, [r0], #4
 800510c:	d2e8      	bcs.n	80050e0 <quorem+0xb0>
 800510e:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
 8005112:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 8005116:	b92a      	cbnz	r2, 8005124 <quorem+0xf4>
 8005118:	3b04      	subs	r3, #4
 800511a:	429e      	cmp	r6, r3
 800511c:	461a      	mov	r2, r3
 800511e:	d30b      	bcc.n	8005138 <quorem+0x108>
 8005120:	f8c8 4010 	str.w	r4, [r8, #16]
 8005124:	4628      	mov	r0, r5
 8005126:	b003      	add	sp, #12
 8005128:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800512c:	6812      	ldr	r2, [r2, #0]
 800512e:	3b04      	subs	r3, #4
 8005130:	2a00      	cmp	r2, #0
 8005132:	d1ca      	bne.n	80050ca <quorem+0x9a>
 8005134:	3c01      	subs	r4, #1
 8005136:	e7c5      	b.n	80050c4 <quorem+0x94>
 8005138:	6812      	ldr	r2, [r2, #0]
 800513a:	3b04      	subs	r3, #4
 800513c:	2a00      	cmp	r2, #0
 800513e:	d1ef      	bne.n	8005120 <quorem+0xf0>
 8005140:	3c01      	subs	r4, #1
 8005142:	e7ea      	b.n	800511a <quorem+0xea>
 8005144:	2000      	movs	r0, #0
 8005146:	e7ee      	b.n	8005126 <quorem+0xf6>

08005148 <_dtoa_r>:
 8005148:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800514c:	ec57 6b10 	vmov	r6, r7, d0
 8005150:	b097      	sub	sp, #92	; 0x5c
 8005152:	e9cd 6700 	strd	r6, r7, [sp]
 8005156:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8005158:	9107      	str	r1, [sp, #28]
 800515a:	4604      	mov	r4, r0
 800515c:	920a      	str	r2, [sp, #40]	; 0x28
 800515e:	930f      	str	r3, [sp, #60]	; 0x3c
 8005160:	9d20      	ldr	r5, [sp, #128]	; 0x80
 8005162:	b93e      	cbnz	r6, 8005174 <_dtoa_r+0x2c>
 8005164:	2010      	movs	r0, #16
 8005166:	f001 fa8d 	bl	8006684 <malloc>
 800516a:	6260      	str	r0, [r4, #36]	; 0x24
 800516c:	6046      	str	r6, [r0, #4]
 800516e:	6086      	str	r6, [r0, #8]
 8005170:	6006      	str	r6, [r0, #0]
 8005172:	60c6      	str	r6, [r0, #12]
 8005174:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005176:	6819      	ldr	r1, [r3, #0]
 8005178:	b151      	cbz	r1, 8005190 <_dtoa_r+0x48>
 800517a:	685a      	ldr	r2, [r3, #4]
 800517c:	604a      	str	r2, [r1, #4]
 800517e:	2301      	movs	r3, #1
 8005180:	4093      	lsls	r3, r2
 8005182:	608b      	str	r3, [r1, #8]
 8005184:	4620      	mov	r0, r4
 8005186:	f001 fd01 	bl	8006b8c <_Bfree>
 800518a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800518c:	2200      	movs	r2, #0
 800518e:	601a      	str	r2, [r3, #0]
 8005190:	9b01      	ldr	r3, [sp, #4]
 8005192:	2b00      	cmp	r3, #0
 8005194:	bfbf      	itttt	lt
 8005196:	2301      	movlt	r3, #1
 8005198:	602b      	strlt	r3, [r5, #0]
 800519a:	9b01      	ldrlt	r3, [sp, #4]
 800519c:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 80051a0:	bfb2      	itee	lt
 80051a2:	9301      	strlt	r3, [sp, #4]
 80051a4:	2300      	movge	r3, #0
 80051a6:	602b      	strge	r3, [r5, #0]
 80051a8:	f8dd 8004 	ldr.w	r8, [sp, #4]
 80051ac:	4ba8      	ldr	r3, [pc, #672]	; (8005450 <_dtoa_r+0x308>)
 80051ae:	ea33 0308 	bics.w	r3, r3, r8
 80051b2:	d11b      	bne.n	80051ec <_dtoa_r+0xa4>
 80051b4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80051b6:	f242 730f 	movw	r3, #9999	; 0x270f
 80051ba:	6013      	str	r3, [r2, #0]
 80051bc:	9b00      	ldr	r3, [sp, #0]
 80051be:	b923      	cbnz	r3, 80051ca <_dtoa_r+0x82>
 80051c0:	f3c8 0013 	ubfx	r0, r8, #0, #20
 80051c4:	2800      	cmp	r0, #0
 80051c6:	f000 8578 	beq.w	8005cba <_dtoa_r+0xb72>
 80051ca:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80051cc:	b953      	cbnz	r3, 80051e4 <_dtoa_r+0x9c>
 80051ce:	4ba1      	ldr	r3, [pc, #644]	; (8005454 <_dtoa_r+0x30c>)
 80051d0:	e021      	b.n	8005216 <_dtoa_r+0xce>
 80051d2:	4ba1      	ldr	r3, [pc, #644]	; (8005458 <_dtoa_r+0x310>)
 80051d4:	9302      	str	r3, [sp, #8]
 80051d6:	3308      	adds	r3, #8
 80051d8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80051da:	6013      	str	r3, [r2, #0]
 80051dc:	9802      	ldr	r0, [sp, #8]
 80051de:	b017      	add	sp, #92	; 0x5c
 80051e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80051e4:	4b9b      	ldr	r3, [pc, #620]	; (8005454 <_dtoa_r+0x30c>)
 80051e6:	9302      	str	r3, [sp, #8]
 80051e8:	3303      	adds	r3, #3
 80051ea:	e7f5      	b.n	80051d8 <_dtoa_r+0x90>
 80051ec:	e9dd 6700 	ldrd	r6, r7, [sp]
 80051f0:	2200      	movs	r2, #0
 80051f2:	2300      	movs	r3, #0
 80051f4:	4630      	mov	r0, r6
 80051f6:	4639      	mov	r1, r7
 80051f8:	f7fb fc6a 	bl	8000ad0 <__aeabi_dcmpeq>
 80051fc:	4681      	mov	r9, r0
 80051fe:	b160      	cbz	r0, 800521a <_dtoa_r+0xd2>
 8005200:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8005202:	2301      	movs	r3, #1
 8005204:	6013      	str	r3, [r2, #0]
 8005206:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8005208:	2b00      	cmp	r3, #0
 800520a:	f000 8553 	beq.w	8005cb4 <_dtoa_r+0xb6c>
 800520e:	4b93      	ldr	r3, [pc, #588]	; (800545c <_dtoa_r+0x314>)
 8005210:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8005212:	6013      	str	r3, [r2, #0]
 8005214:	3b01      	subs	r3, #1
 8005216:	9302      	str	r3, [sp, #8]
 8005218:	e7e0      	b.n	80051dc <_dtoa_r+0x94>
 800521a:	aa14      	add	r2, sp, #80	; 0x50
 800521c:	a915      	add	r1, sp, #84	; 0x54
 800521e:	ec47 6b10 	vmov	d0, r6, r7
 8005222:	4620      	mov	r0, r4
 8005224:	f001 feff 	bl	8007026 <__d2b>
 8005228:	f3c8 550a 	ubfx	r5, r8, #20, #11
 800522c:	4682      	mov	sl, r0
 800522e:	2d00      	cmp	r5, #0
 8005230:	d07e      	beq.n	8005330 <_dtoa_r+0x1e8>
 8005232:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8005236:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
 800523a:	4630      	mov	r0, r6
 800523c:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
 8005240:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 8005244:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
 8005248:	2200      	movs	r2, #0
 800524a:	4b85      	ldr	r3, [pc, #532]	; (8005460 <_dtoa_r+0x318>)
 800524c:	f7fb f824 	bl	8000298 <__aeabi_dsub>
 8005250:	a379      	add	r3, pc, #484	; (adr r3, 8005438 <_dtoa_r+0x2f0>)
 8005252:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005256:	f7fb f9d3 	bl	8000600 <__aeabi_dmul>
 800525a:	a379      	add	r3, pc, #484	; (adr r3, 8005440 <_dtoa_r+0x2f8>)
 800525c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005260:	f7fb f81c 	bl	800029c <__adddf3>
 8005264:	4606      	mov	r6, r0
 8005266:	4628      	mov	r0, r5
 8005268:	460f      	mov	r7, r1
 800526a:	f7fb f963 	bl	8000534 <__aeabi_i2d>
 800526e:	a376      	add	r3, pc, #472	; (adr r3, 8005448 <_dtoa_r+0x300>)
 8005270:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005274:	f7fb f9c4 	bl	8000600 <__aeabi_dmul>
 8005278:	4602      	mov	r2, r0
 800527a:	460b      	mov	r3, r1
 800527c:	4630      	mov	r0, r6
 800527e:	4639      	mov	r1, r7
 8005280:	f7fb f80c 	bl	800029c <__adddf3>
 8005284:	4606      	mov	r6, r0
 8005286:	460f      	mov	r7, r1
 8005288:	f7fb fc6a 	bl	8000b60 <__aeabi_d2iz>
 800528c:	2200      	movs	r2, #0
 800528e:	4683      	mov	fp, r0
 8005290:	2300      	movs	r3, #0
 8005292:	4630      	mov	r0, r6
 8005294:	4639      	mov	r1, r7
 8005296:	f7fb fc25 	bl	8000ae4 <__aeabi_dcmplt>
 800529a:	b158      	cbz	r0, 80052b4 <_dtoa_r+0x16c>
 800529c:	4658      	mov	r0, fp
 800529e:	f7fb f949 	bl	8000534 <__aeabi_i2d>
 80052a2:	4602      	mov	r2, r0
 80052a4:	460b      	mov	r3, r1
 80052a6:	4630      	mov	r0, r6
 80052a8:	4639      	mov	r1, r7
 80052aa:	f7fb fc11 	bl	8000ad0 <__aeabi_dcmpeq>
 80052ae:	b908      	cbnz	r0, 80052b4 <_dtoa_r+0x16c>
 80052b0:	f10b 3bff 	add.w	fp, fp, #4294967295
 80052b4:	f1bb 0f16 	cmp.w	fp, #22
 80052b8:	d859      	bhi.n	800536e <_dtoa_r+0x226>
 80052ba:	496a      	ldr	r1, [pc, #424]	; (8005464 <_dtoa_r+0x31c>)
 80052bc:	eb01 01cb 	add.w	r1, r1, fp, lsl #3
 80052c0:	e9dd 2300 	ldrd	r2, r3, [sp]
 80052c4:	e9d1 0100 	ldrd	r0, r1, [r1]
 80052c8:	f7fb fc2a 	bl	8000b20 <__aeabi_dcmpgt>
 80052cc:	2800      	cmp	r0, #0
 80052ce:	d050      	beq.n	8005372 <_dtoa_r+0x22a>
 80052d0:	f10b 3bff 	add.w	fp, fp, #4294967295
 80052d4:	2300      	movs	r3, #0
 80052d6:	930e      	str	r3, [sp, #56]	; 0x38
 80052d8:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80052da:	1b5d      	subs	r5, r3, r5
 80052dc:	1e6b      	subs	r3, r5, #1
 80052de:	9306      	str	r3, [sp, #24]
 80052e0:	bf45      	ittet	mi
 80052e2:	f1c5 0301 	rsbmi	r3, r5, #1
 80052e6:	9305      	strmi	r3, [sp, #20]
 80052e8:	2300      	movpl	r3, #0
 80052ea:	2300      	movmi	r3, #0
 80052ec:	bf4c      	ite	mi
 80052ee:	9306      	strmi	r3, [sp, #24]
 80052f0:	9305      	strpl	r3, [sp, #20]
 80052f2:	f1bb 0f00 	cmp.w	fp, #0
 80052f6:	db3e      	blt.n	8005376 <_dtoa_r+0x22e>
 80052f8:	9b06      	ldr	r3, [sp, #24]
 80052fa:	f8cd b02c 	str.w	fp, [sp, #44]	; 0x2c
 80052fe:	445b      	add	r3, fp
 8005300:	9306      	str	r3, [sp, #24]
 8005302:	2300      	movs	r3, #0
 8005304:	9308      	str	r3, [sp, #32]
 8005306:	9b07      	ldr	r3, [sp, #28]
 8005308:	2b09      	cmp	r3, #9
 800530a:	f200 80af 	bhi.w	800546c <_dtoa_r+0x324>
 800530e:	2b05      	cmp	r3, #5
 8005310:	bfc4      	itt	gt
 8005312:	3b04      	subgt	r3, #4
 8005314:	9307      	strgt	r3, [sp, #28]
 8005316:	9b07      	ldr	r3, [sp, #28]
 8005318:	f1a3 0302 	sub.w	r3, r3, #2
 800531c:	bfcc      	ite	gt
 800531e:	2600      	movgt	r6, #0
 8005320:	2601      	movle	r6, #1
 8005322:	2b03      	cmp	r3, #3
 8005324:	f200 80ae 	bhi.w	8005484 <_dtoa_r+0x33c>
 8005328:	e8df f003 	tbb	[pc, r3]
 800532c:	772f8482 	.word	0x772f8482
 8005330:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8005332:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8005334:	441d      	add	r5, r3
 8005336:	f205 4332 	addw	r3, r5, #1074	; 0x432
 800533a:	2b20      	cmp	r3, #32
 800533c:	dd11      	ble.n	8005362 <_dtoa_r+0x21a>
 800533e:	9a00      	ldr	r2, [sp, #0]
 8005340:	f205 4012 	addw	r0, r5, #1042	; 0x412
 8005344:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
 8005348:	fa22 f000 	lsr.w	r0, r2, r0
 800534c:	fa08 f303 	lsl.w	r3, r8, r3
 8005350:	4318      	orrs	r0, r3
 8005352:	f7fb f8df 	bl	8000514 <__aeabi_ui2d>
 8005356:	2301      	movs	r3, #1
 8005358:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
 800535c:	3d01      	subs	r5, #1
 800535e:	9312      	str	r3, [sp, #72]	; 0x48
 8005360:	e772      	b.n	8005248 <_dtoa_r+0x100>
 8005362:	f1c3 0020 	rsb	r0, r3, #32
 8005366:	9b00      	ldr	r3, [sp, #0]
 8005368:	fa03 f000 	lsl.w	r0, r3, r0
 800536c:	e7f1      	b.n	8005352 <_dtoa_r+0x20a>
 800536e:	2301      	movs	r3, #1
 8005370:	e7b1      	b.n	80052d6 <_dtoa_r+0x18e>
 8005372:	900e      	str	r0, [sp, #56]	; 0x38
 8005374:	e7b0      	b.n	80052d8 <_dtoa_r+0x190>
 8005376:	9b05      	ldr	r3, [sp, #20]
 8005378:	eba3 030b 	sub.w	r3, r3, fp
 800537c:	9305      	str	r3, [sp, #20]
 800537e:	f1cb 0300 	rsb	r3, fp, #0
 8005382:	9308      	str	r3, [sp, #32]
 8005384:	2300      	movs	r3, #0
 8005386:	930b      	str	r3, [sp, #44]	; 0x2c
 8005388:	e7bd      	b.n	8005306 <_dtoa_r+0x1be>
 800538a:	2301      	movs	r3, #1
 800538c:	9309      	str	r3, [sp, #36]	; 0x24
 800538e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005390:	2b00      	cmp	r3, #0
 8005392:	dd7a      	ble.n	800548a <_dtoa_r+0x342>
 8005394:	9304      	str	r3, [sp, #16]
 8005396:	9303      	str	r3, [sp, #12]
 8005398:	6a65      	ldr	r5, [r4, #36]	; 0x24
 800539a:	2200      	movs	r2, #0
 800539c:	606a      	str	r2, [r5, #4]
 800539e:	2104      	movs	r1, #4
 80053a0:	f101 0214 	add.w	r2, r1, #20
 80053a4:	429a      	cmp	r2, r3
 80053a6:	d975      	bls.n	8005494 <_dtoa_r+0x34c>
 80053a8:	6869      	ldr	r1, [r5, #4]
 80053aa:	4620      	mov	r0, r4
 80053ac:	f001 fbba 	bl	8006b24 <_Balloc>
 80053b0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80053b2:	6028      	str	r0, [r5, #0]
 80053b4:	681b      	ldr	r3, [r3, #0]
 80053b6:	9302      	str	r3, [sp, #8]
 80053b8:	9b03      	ldr	r3, [sp, #12]
 80053ba:	2b0e      	cmp	r3, #14
 80053bc:	f200 80e5 	bhi.w	800558a <_dtoa_r+0x442>
 80053c0:	2e00      	cmp	r6, #0
 80053c2:	f000 80e2 	beq.w	800558a <_dtoa_r+0x442>
 80053c6:	ed9d 7b00 	vldr	d7, [sp]
 80053ca:	f1bb 0f00 	cmp.w	fp, #0
 80053ce:	ed8d 7b0c 	vstr	d7, [sp, #48]	; 0x30
 80053d2:	dd74      	ble.n	80054be <_dtoa_r+0x376>
 80053d4:	4a23      	ldr	r2, [pc, #140]	; (8005464 <_dtoa_r+0x31c>)
 80053d6:	f00b 030f 	and.w	r3, fp, #15
 80053da:	ea4f 162b 	mov.w	r6, fp, asr #4
 80053de:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 80053e2:	06f0      	lsls	r0, r6, #27
 80053e4:	e9d3 8900 	ldrd	r8, r9, [r3]
 80053e8:	d559      	bpl.n	800549e <_dtoa_r+0x356>
 80053ea:	4b1f      	ldr	r3, [pc, #124]	; (8005468 <_dtoa_r+0x320>)
 80053ec:	ec51 0b17 	vmov	r0, r1, d7
 80053f0:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 80053f4:	f7fb fa2e 	bl	8000854 <__aeabi_ddiv>
 80053f8:	e9cd 0100 	strd	r0, r1, [sp]
 80053fc:	f006 060f 	and.w	r6, r6, #15
 8005400:	2503      	movs	r5, #3
 8005402:	4f19      	ldr	r7, [pc, #100]	; (8005468 <_dtoa_r+0x320>)
 8005404:	2e00      	cmp	r6, #0
 8005406:	d14c      	bne.n	80054a2 <_dtoa_r+0x35a>
 8005408:	4642      	mov	r2, r8
 800540a:	464b      	mov	r3, r9
 800540c:	e9dd 0100 	ldrd	r0, r1, [sp]
 8005410:	f7fb fa20 	bl	8000854 <__aeabi_ddiv>
 8005414:	e9cd 0100 	strd	r0, r1, [sp]
 8005418:	e06a      	b.n	80054f0 <_dtoa_r+0x3a8>
 800541a:	2301      	movs	r3, #1
 800541c:	9309      	str	r3, [sp, #36]	; 0x24
 800541e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005420:	445b      	add	r3, fp
 8005422:	9304      	str	r3, [sp, #16]
 8005424:	3301      	adds	r3, #1
 8005426:	2b01      	cmp	r3, #1
 8005428:	9303      	str	r3, [sp, #12]
 800542a:	bfb8      	it	lt
 800542c:	2301      	movlt	r3, #1
 800542e:	e7b3      	b.n	8005398 <_dtoa_r+0x250>
 8005430:	2300      	movs	r3, #0
 8005432:	e7ab      	b.n	800538c <_dtoa_r+0x244>
 8005434:	2300      	movs	r3, #0
 8005436:	e7f1      	b.n	800541c <_dtoa_r+0x2d4>
 8005438:	636f4361 	.word	0x636f4361
 800543c:	3fd287a7 	.word	0x3fd287a7
 8005440:	8b60c8b3 	.word	0x8b60c8b3
 8005444:	3fc68a28 	.word	0x3fc68a28
 8005448:	509f79fb 	.word	0x509f79fb
 800544c:	3fd34413 	.word	0x3fd34413
 8005450:	7ff00000 	.word	0x7ff00000
 8005454:	080084a7 	.word	0x080084a7
 8005458:	0800849e 	.word	0x0800849e
 800545c:	0800845d 	.word	0x0800845d
 8005460:	3ff80000 	.word	0x3ff80000
 8005464:	08008538 	.word	0x08008538
 8005468:	08008510 	.word	0x08008510
 800546c:	2601      	movs	r6, #1
 800546e:	2300      	movs	r3, #0
 8005470:	9307      	str	r3, [sp, #28]
 8005472:	9609      	str	r6, [sp, #36]	; 0x24
 8005474:	f04f 33ff 	mov.w	r3, #4294967295
 8005478:	9304      	str	r3, [sp, #16]
 800547a:	9303      	str	r3, [sp, #12]
 800547c:	2200      	movs	r2, #0
 800547e:	2312      	movs	r3, #18
 8005480:	920a      	str	r2, [sp, #40]	; 0x28
 8005482:	e789      	b.n	8005398 <_dtoa_r+0x250>
 8005484:	2301      	movs	r3, #1
 8005486:	9309      	str	r3, [sp, #36]	; 0x24
 8005488:	e7f4      	b.n	8005474 <_dtoa_r+0x32c>
 800548a:	2301      	movs	r3, #1
 800548c:	9304      	str	r3, [sp, #16]
 800548e:	9303      	str	r3, [sp, #12]
 8005490:	461a      	mov	r2, r3
 8005492:	e7f5      	b.n	8005480 <_dtoa_r+0x338>
 8005494:	686a      	ldr	r2, [r5, #4]
 8005496:	3201      	adds	r2, #1
 8005498:	606a      	str	r2, [r5, #4]
 800549a:	0049      	lsls	r1, r1, #1
 800549c:	e780      	b.n	80053a0 <_dtoa_r+0x258>
 800549e:	2502      	movs	r5, #2
 80054a0:	e7af      	b.n	8005402 <_dtoa_r+0x2ba>
 80054a2:	07f1      	lsls	r1, r6, #31
 80054a4:	d508      	bpl.n	80054b8 <_dtoa_r+0x370>
 80054a6:	4640      	mov	r0, r8
 80054a8:	4649      	mov	r1, r9
 80054aa:	e9d7 2300 	ldrd	r2, r3, [r7]
 80054ae:	f7fb f8a7 	bl	8000600 <__aeabi_dmul>
 80054b2:	3501      	adds	r5, #1
 80054b4:	4680      	mov	r8, r0
 80054b6:	4689      	mov	r9, r1
 80054b8:	1076      	asrs	r6, r6, #1
 80054ba:	3708      	adds	r7, #8
 80054bc:	e7a2      	b.n	8005404 <_dtoa_r+0x2bc>
 80054be:	f000 809d 	beq.w	80055fc <_dtoa_r+0x4b4>
 80054c2:	f1cb 0600 	rsb	r6, fp, #0
 80054c6:	4b9f      	ldr	r3, [pc, #636]	; (8005744 <_dtoa_r+0x5fc>)
 80054c8:	4f9f      	ldr	r7, [pc, #636]	; (8005748 <_dtoa_r+0x600>)
 80054ca:	f006 020f 	and.w	r2, r6, #15
 80054ce:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80054d2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80054d6:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 80054da:	f7fb f891 	bl	8000600 <__aeabi_dmul>
 80054de:	e9cd 0100 	strd	r0, r1, [sp]
 80054e2:	1136      	asrs	r6, r6, #4
 80054e4:	2300      	movs	r3, #0
 80054e6:	2502      	movs	r5, #2
 80054e8:	2e00      	cmp	r6, #0
 80054ea:	d17c      	bne.n	80055e6 <_dtoa_r+0x49e>
 80054ec:	2b00      	cmp	r3, #0
 80054ee:	d191      	bne.n	8005414 <_dtoa_r+0x2cc>
 80054f0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80054f2:	2b00      	cmp	r3, #0
 80054f4:	f000 8084 	beq.w	8005600 <_dtoa_r+0x4b8>
 80054f8:	e9dd 8900 	ldrd	r8, r9, [sp]
 80054fc:	2200      	movs	r2, #0
 80054fe:	4b93      	ldr	r3, [pc, #588]	; (800574c <_dtoa_r+0x604>)
 8005500:	4640      	mov	r0, r8
 8005502:	4649      	mov	r1, r9
 8005504:	f7fb faee 	bl	8000ae4 <__aeabi_dcmplt>
 8005508:	2800      	cmp	r0, #0
 800550a:	d079      	beq.n	8005600 <_dtoa_r+0x4b8>
 800550c:	9b03      	ldr	r3, [sp, #12]
 800550e:	2b00      	cmp	r3, #0
 8005510:	d076      	beq.n	8005600 <_dtoa_r+0x4b8>
 8005512:	9b04      	ldr	r3, [sp, #16]
 8005514:	2b00      	cmp	r3, #0
 8005516:	dd34      	ble.n	8005582 <_dtoa_r+0x43a>
 8005518:	2200      	movs	r2, #0
 800551a:	4b8d      	ldr	r3, [pc, #564]	; (8005750 <_dtoa_r+0x608>)
 800551c:	4640      	mov	r0, r8
 800551e:	4649      	mov	r1, r9
 8005520:	f7fb f86e 	bl	8000600 <__aeabi_dmul>
 8005524:	e9cd 0100 	strd	r0, r1, [sp]
 8005528:	9e04      	ldr	r6, [sp, #16]
 800552a:	f10b 37ff 	add.w	r7, fp, #4294967295
 800552e:	3501      	adds	r5, #1
 8005530:	4628      	mov	r0, r5
 8005532:	f7fa ffff 	bl	8000534 <__aeabi_i2d>
 8005536:	e9dd 2300 	ldrd	r2, r3, [sp]
 800553a:	f7fb f861 	bl	8000600 <__aeabi_dmul>
 800553e:	2200      	movs	r2, #0
 8005540:	4b84      	ldr	r3, [pc, #528]	; (8005754 <_dtoa_r+0x60c>)
 8005542:	f7fa feab 	bl	800029c <__adddf3>
 8005546:	4680      	mov	r8, r0
 8005548:	f1a1 7950 	sub.w	r9, r1, #54525952	; 0x3400000
 800554c:	2e00      	cmp	r6, #0
 800554e:	d15a      	bne.n	8005606 <_dtoa_r+0x4be>
 8005550:	2200      	movs	r2, #0
 8005552:	4b81      	ldr	r3, [pc, #516]	; (8005758 <_dtoa_r+0x610>)
 8005554:	e9dd 0100 	ldrd	r0, r1, [sp]
 8005558:	f7fa fe9e 	bl	8000298 <__aeabi_dsub>
 800555c:	4642      	mov	r2, r8
 800555e:	464b      	mov	r3, r9
 8005560:	e9cd 0100 	strd	r0, r1, [sp]
 8005564:	f7fb fadc 	bl	8000b20 <__aeabi_dcmpgt>
 8005568:	2800      	cmp	r0, #0
 800556a:	f040 829b 	bne.w	8005aa4 <_dtoa_r+0x95c>
 800556e:	4642      	mov	r2, r8
 8005570:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8005574:	e9dd 0100 	ldrd	r0, r1, [sp]
 8005578:	f7fb fab4 	bl	8000ae4 <__aeabi_dcmplt>
 800557c:	2800      	cmp	r0, #0
 800557e:	f040 828f 	bne.w	8005aa0 <_dtoa_r+0x958>
 8005582:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 8005586:	e9cd 2300 	strd	r2, r3, [sp]
 800558a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800558c:	2b00      	cmp	r3, #0
 800558e:	f2c0 8150 	blt.w	8005832 <_dtoa_r+0x6ea>
 8005592:	f1bb 0f0e 	cmp.w	fp, #14
 8005596:	f300 814c 	bgt.w	8005832 <_dtoa_r+0x6ea>
 800559a:	4b6a      	ldr	r3, [pc, #424]	; (8005744 <_dtoa_r+0x5fc>)
 800559c:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 80055a0:	e9d3 8900 	ldrd	r8, r9, [r3]
 80055a4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80055a6:	2b00      	cmp	r3, #0
 80055a8:	f280 80da 	bge.w	8005760 <_dtoa_r+0x618>
 80055ac:	9b03      	ldr	r3, [sp, #12]
 80055ae:	2b00      	cmp	r3, #0
 80055b0:	f300 80d6 	bgt.w	8005760 <_dtoa_r+0x618>
 80055b4:	f040 8273 	bne.w	8005a9e <_dtoa_r+0x956>
 80055b8:	2200      	movs	r2, #0
 80055ba:	4b67      	ldr	r3, [pc, #412]	; (8005758 <_dtoa_r+0x610>)
 80055bc:	4640      	mov	r0, r8
 80055be:	4649      	mov	r1, r9
 80055c0:	f7fb f81e 	bl	8000600 <__aeabi_dmul>
 80055c4:	e9dd 2300 	ldrd	r2, r3, [sp]
 80055c8:	f7fb faa0 	bl	8000b0c <__aeabi_dcmpge>
 80055cc:	9e03      	ldr	r6, [sp, #12]
 80055ce:	4637      	mov	r7, r6
 80055d0:	2800      	cmp	r0, #0
 80055d2:	f040 824a 	bne.w	8005a6a <_dtoa_r+0x922>
 80055d6:	9b02      	ldr	r3, [sp, #8]
 80055d8:	9a02      	ldr	r2, [sp, #8]
 80055da:	1c5d      	adds	r5, r3, #1
 80055dc:	2331      	movs	r3, #49	; 0x31
 80055de:	7013      	strb	r3, [r2, #0]
 80055e0:	f10b 0b01 	add.w	fp, fp, #1
 80055e4:	e245      	b.n	8005a72 <_dtoa_r+0x92a>
 80055e6:	07f2      	lsls	r2, r6, #31
 80055e8:	d505      	bpl.n	80055f6 <_dtoa_r+0x4ae>
 80055ea:	e9d7 2300 	ldrd	r2, r3, [r7]
 80055ee:	f7fb f807 	bl	8000600 <__aeabi_dmul>
 80055f2:	3501      	adds	r5, #1
 80055f4:	2301      	movs	r3, #1
 80055f6:	1076      	asrs	r6, r6, #1
 80055f8:	3708      	adds	r7, #8
 80055fa:	e775      	b.n	80054e8 <_dtoa_r+0x3a0>
 80055fc:	2502      	movs	r5, #2
 80055fe:	e777      	b.n	80054f0 <_dtoa_r+0x3a8>
 8005600:	465f      	mov	r7, fp
 8005602:	9e03      	ldr	r6, [sp, #12]
 8005604:	e794      	b.n	8005530 <_dtoa_r+0x3e8>
 8005606:	9a02      	ldr	r2, [sp, #8]
 8005608:	4b4e      	ldr	r3, [pc, #312]	; (8005744 <_dtoa_r+0x5fc>)
 800560a:	4432      	add	r2, r6
 800560c:	9213      	str	r2, [sp, #76]	; 0x4c
 800560e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8005610:	1e71      	subs	r1, r6, #1
 8005612:	2a00      	cmp	r2, #0
 8005614:	d048      	beq.n	80056a8 <_dtoa_r+0x560>
 8005616:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 800561a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800561e:	2000      	movs	r0, #0
 8005620:	494e      	ldr	r1, [pc, #312]	; (800575c <_dtoa_r+0x614>)
 8005622:	f7fb f917 	bl	8000854 <__aeabi_ddiv>
 8005626:	4642      	mov	r2, r8
 8005628:	464b      	mov	r3, r9
 800562a:	f7fa fe35 	bl	8000298 <__aeabi_dsub>
 800562e:	9d02      	ldr	r5, [sp, #8]
 8005630:	4680      	mov	r8, r0
 8005632:	4689      	mov	r9, r1
 8005634:	e9dd 0100 	ldrd	r0, r1, [sp]
 8005638:	f7fb fa92 	bl	8000b60 <__aeabi_d2iz>
 800563c:	4606      	mov	r6, r0
 800563e:	f7fa ff79 	bl	8000534 <__aeabi_i2d>
 8005642:	4602      	mov	r2, r0
 8005644:	460b      	mov	r3, r1
 8005646:	e9dd 0100 	ldrd	r0, r1, [sp]
 800564a:	f7fa fe25 	bl	8000298 <__aeabi_dsub>
 800564e:	3630      	adds	r6, #48	; 0x30
 8005650:	f805 6b01 	strb.w	r6, [r5], #1
 8005654:	4642      	mov	r2, r8
 8005656:	464b      	mov	r3, r9
 8005658:	e9cd 0100 	strd	r0, r1, [sp]
 800565c:	f7fb fa42 	bl	8000ae4 <__aeabi_dcmplt>
 8005660:	2800      	cmp	r0, #0
 8005662:	d165      	bne.n	8005730 <_dtoa_r+0x5e8>
 8005664:	e9dd 2300 	ldrd	r2, r3, [sp]
 8005668:	2000      	movs	r0, #0
 800566a:	4938      	ldr	r1, [pc, #224]	; (800574c <_dtoa_r+0x604>)
 800566c:	f7fa fe14 	bl	8000298 <__aeabi_dsub>
 8005670:	4642      	mov	r2, r8
 8005672:	464b      	mov	r3, r9
 8005674:	f7fb fa36 	bl	8000ae4 <__aeabi_dcmplt>
 8005678:	2800      	cmp	r0, #0
 800567a:	f040 80ba 	bne.w	80057f2 <_dtoa_r+0x6aa>
 800567e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8005680:	429d      	cmp	r5, r3
 8005682:	f43f af7e 	beq.w	8005582 <_dtoa_r+0x43a>
 8005686:	2200      	movs	r2, #0
 8005688:	4b31      	ldr	r3, [pc, #196]	; (8005750 <_dtoa_r+0x608>)
 800568a:	4640      	mov	r0, r8
 800568c:	4649      	mov	r1, r9
 800568e:	f7fa ffb7 	bl	8000600 <__aeabi_dmul>
 8005692:	2200      	movs	r2, #0
 8005694:	4680      	mov	r8, r0
 8005696:	4689      	mov	r9, r1
 8005698:	4b2d      	ldr	r3, [pc, #180]	; (8005750 <_dtoa_r+0x608>)
 800569a:	e9dd 0100 	ldrd	r0, r1, [sp]
 800569e:	f7fa ffaf 	bl	8000600 <__aeabi_dmul>
 80056a2:	e9cd 0100 	strd	r0, r1, [sp]
 80056a6:	e7c5      	b.n	8005634 <_dtoa_r+0x4ec>
 80056a8:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
 80056ac:	4642      	mov	r2, r8
 80056ae:	464b      	mov	r3, r9
 80056b0:	e9d1 0100 	ldrd	r0, r1, [r1]
 80056b4:	f7fa ffa4 	bl	8000600 <__aeabi_dmul>
 80056b8:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 80056bc:	9d02      	ldr	r5, [sp, #8]
 80056be:	e9dd 0100 	ldrd	r0, r1, [sp]
 80056c2:	f7fb fa4d 	bl	8000b60 <__aeabi_d2iz>
 80056c6:	4606      	mov	r6, r0
 80056c8:	f7fa ff34 	bl	8000534 <__aeabi_i2d>
 80056cc:	3630      	adds	r6, #48	; 0x30
 80056ce:	4602      	mov	r2, r0
 80056d0:	460b      	mov	r3, r1
 80056d2:	e9dd 0100 	ldrd	r0, r1, [sp]
 80056d6:	f7fa fddf 	bl	8000298 <__aeabi_dsub>
 80056da:	f805 6b01 	strb.w	r6, [r5], #1
 80056de:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80056e0:	42ab      	cmp	r3, r5
 80056e2:	4680      	mov	r8, r0
 80056e4:	4689      	mov	r9, r1
 80056e6:	f04f 0200 	mov.w	r2, #0
 80056ea:	d125      	bne.n	8005738 <_dtoa_r+0x5f0>
 80056ec:	4b1b      	ldr	r3, [pc, #108]	; (800575c <_dtoa_r+0x614>)
 80056ee:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 80056f2:	f7fa fdd3 	bl	800029c <__adddf3>
 80056f6:	4602      	mov	r2, r0
 80056f8:	460b      	mov	r3, r1
 80056fa:	4640      	mov	r0, r8
 80056fc:	4649      	mov	r1, r9
 80056fe:	f7fb fa0f 	bl	8000b20 <__aeabi_dcmpgt>
 8005702:	2800      	cmp	r0, #0
 8005704:	d175      	bne.n	80057f2 <_dtoa_r+0x6aa>
 8005706:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800570a:	2000      	movs	r0, #0
 800570c:	4913      	ldr	r1, [pc, #76]	; (800575c <_dtoa_r+0x614>)
 800570e:	f7fa fdc3 	bl	8000298 <__aeabi_dsub>
 8005712:	4602      	mov	r2, r0
 8005714:	460b      	mov	r3, r1
 8005716:	4640      	mov	r0, r8
 8005718:	4649      	mov	r1, r9
 800571a:	f7fb f9e3 	bl	8000ae4 <__aeabi_dcmplt>
 800571e:	2800      	cmp	r0, #0
 8005720:	f43f af2f 	beq.w	8005582 <_dtoa_r+0x43a>
 8005724:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8005728:	2b30      	cmp	r3, #48	; 0x30
 800572a:	f105 32ff 	add.w	r2, r5, #4294967295
 800572e:	d001      	beq.n	8005734 <_dtoa_r+0x5ec>
 8005730:	46bb      	mov	fp, r7
 8005732:	e04d      	b.n	80057d0 <_dtoa_r+0x688>
 8005734:	4615      	mov	r5, r2
 8005736:	e7f5      	b.n	8005724 <_dtoa_r+0x5dc>
 8005738:	4b05      	ldr	r3, [pc, #20]	; (8005750 <_dtoa_r+0x608>)
 800573a:	f7fa ff61 	bl	8000600 <__aeabi_dmul>
 800573e:	e9cd 0100 	strd	r0, r1, [sp]
 8005742:	e7bc      	b.n	80056be <_dtoa_r+0x576>
 8005744:	08008538 	.word	0x08008538
 8005748:	08008510 	.word	0x08008510
 800574c:	3ff00000 	.word	0x3ff00000
 8005750:	40240000 	.word	0x40240000
 8005754:	401c0000 	.word	0x401c0000
 8005758:	40140000 	.word	0x40140000
 800575c:	3fe00000 	.word	0x3fe00000
 8005760:	e9dd 6700 	ldrd	r6, r7, [sp]
 8005764:	9d02      	ldr	r5, [sp, #8]
 8005766:	4642      	mov	r2, r8
 8005768:	464b      	mov	r3, r9
 800576a:	4630      	mov	r0, r6
 800576c:	4639      	mov	r1, r7
 800576e:	f7fb f871 	bl	8000854 <__aeabi_ddiv>
 8005772:	f7fb f9f5 	bl	8000b60 <__aeabi_d2iz>
 8005776:	9000      	str	r0, [sp, #0]
 8005778:	f7fa fedc 	bl	8000534 <__aeabi_i2d>
 800577c:	4642      	mov	r2, r8
 800577e:	464b      	mov	r3, r9
 8005780:	f7fa ff3e 	bl	8000600 <__aeabi_dmul>
 8005784:	4602      	mov	r2, r0
 8005786:	460b      	mov	r3, r1
 8005788:	4630      	mov	r0, r6
 800578a:	4639      	mov	r1, r7
 800578c:	f7fa fd84 	bl	8000298 <__aeabi_dsub>
 8005790:	9e00      	ldr	r6, [sp, #0]
 8005792:	9f03      	ldr	r7, [sp, #12]
 8005794:	3630      	adds	r6, #48	; 0x30
 8005796:	f805 6b01 	strb.w	r6, [r5], #1
 800579a:	9e02      	ldr	r6, [sp, #8]
 800579c:	1bae      	subs	r6, r5, r6
 800579e:	42b7      	cmp	r7, r6
 80057a0:	4602      	mov	r2, r0
 80057a2:	460b      	mov	r3, r1
 80057a4:	d138      	bne.n	8005818 <_dtoa_r+0x6d0>
 80057a6:	f7fa fd79 	bl	800029c <__adddf3>
 80057aa:	4606      	mov	r6, r0
 80057ac:	460f      	mov	r7, r1
 80057ae:	4602      	mov	r2, r0
 80057b0:	460b      	mov	r3, r1
 80057b2:	4640      	mov	r0, r8
 80057b4:	4649      	mov	r1, r9
 80057b6:	f7fb f995 	bl	8000ae4 <__aeabi_dcmplt>
 80057ba:	b9c8      	cbnz	r0, 80057f0 <_dtoa_r+0x6a8>
 80057bc:	4632      	mov	r2, r6
 80057be:	463b      	mov	r3, r7
 80057c0:	4640      	mov	r0, r8
 80057c2:	4649      	mov	r1, r9
 80057c4:	f7fb f984 	bl	8000ad0 <__aeabi_dcmpeq>
 80057c8:	b110      	cbz	r0, 80057d0 <_dtoa_r+0x688>
 80057ca:	9b00      	ldr	r3, [sp, #0]
 80057cc:	07db      	lsls	r3, r3, #31
 80057ce:	d40f      	bmi.n	80057f0 <_dtoa_r+0x6a8>
 80057d0:	4651      	mov	r1, sl
 80057d2:	4620      	mov	r0, r4
 80057d4:	f001 f9da 	bl	8006b8c <_Bfree>
 80057d8:	2300      	movs	r3, #0
 80057da:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80057dc:	702b      	strb	r3, [r5, #0]
 80057de:	f10b 0301 	add.w	r3, fp, #1
 80057e2:	6013      	str	r3, [r2, #0]
 80057e4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80057e6:	2b00      	cmp	r3, #0
 80057e8:	f43f acf8 	beq.w	80051dc <_dtoa_r+0x94>
 80057ec:	601d      	str	r5, [r3, #0]
 80057ee:	e4f5      	b.n	80051dc <_dtoa_r+0x94>
 80057f0:	465f      	mov	r7, fp
 80057f2:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 80057f6:	2a39      	cmp	r2, #57	; 0x39
 80057f8:	f105 33ff 	add.w	r3, r5, #4294967295
 80057fc:	d106      	bne.n	800580c <_dtoa_r+0x6c4>
 80057fe:	9a02      	ldr	r2, [sp, #8]
 8005800:	429a      	cmp	r2, r3
 8005802:	d107      	bne.n	8005814 <_dtoa_r+0x6cc>
 8005804:	2330      	movs	r3, #48	; 0x30
 8005806:	7013      	strb	r3, [r2, #0]
 8005808:	3701      	adds	r7, #1
 800580a:	4613      	mov	r3, r2
 800580c:	781a      	ldrb	r2, [r3, #0]
 800580e:	3201      	adds	r2, #1
 8005810:	701a      	strb	r2, [r3, #0]
 8005812:	e78d      	b.n	8005730 <_dtoa_r+0x5e8>
 8005814:	461d      	mov	r5, r3
 8005816:	e7ec      	b.n	80057f2 <_dtoa_r+0x6aa>
 8005818:	2200      	movs	r2, #0
 800581a:	4ba4      	ldr	r3, [pc, #656]	; (8005aac <_dtoa_r+0x964>)
 800581c:	f7fa fef0 	bl	8000600 <__aeabi_dmul>
 8005820:	2200      	movs	r2, #0
 8005822:	2300      	movs	r3, #0
 8005824:	4606      	mov	r6, r0
 8005826:	460f      	mov	r7, r1
 8005828:	f7fb f952 	bl	8000ad0 <__aeabi_dcmpeq>
 800582c:	2800      	cmp	r0, #0
 800582e:	d09a      	beq.n	8005766 <_dtoa_r+0x61e>
 8005830:	e7ce      	b.n	80057d0 <_dtoa_r+0x688>
 8005832:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8005834:	2a00      	cmp	r2, #0
 8005836:	f000 80cd 	beq.w	80059d4 <_dtoa_r+0x88c>
 800583a:	9a07      	ldr	r2, [sp, #28]
 800583c:	2a01      	cmp	r2, #1
 800583e:	f300 80af 	bgt.w	80059a0 <_dtoa_r+0x858>
 8005842:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8005844:	2a00      	cmp	r2, #0
 8005846:	f000 80a7 	beq.w	8005998 <_dtoa_r+0x850>
 800584a:	f203 4333 	addw	r3, r3, #1075	; 0x433
 800584e:	9e08      	ldr	r6, [sp, #32]
 8005850:	9d05      	ldr	r5, [sp, #20]
 8005852:	9a05      	ldr	r2, [sp, #20]
 8005854:	441a      	add	r2, r3
 8005856:	9205      	str	r2, [sp, #20]
 8005858:	9a06      	ldr	r2, [sp, #24]
 800585a:	2101      	movs	r1, #1
 800585c:	441a      	add	r2, r3
 800585e:	4620      	mov	r0, r4
 8005860:	9206      	str	r2, [sp, #24]
 8005862:	f001 fa33 	bl	8006ccc <__i2b>
 8005866:	4607      	mov	r7, r0
 8005868:	2d00      	cmp	r5, #0
 800586a:	dd0c      	ble.n	8005886 <_dtoa_r+0x73e>
 800586c:	9b06      	ldr	r3, [sp, #24]
 800586e:	2b00      	cmp	r3, #0
 8005870:	dd09      	ble.n	8005886 <_dtoa_r+0x73e>
 8005872:	42ab      	cmp	r3, r5
 8005874:	9a05      	ldr	r2, [sp, #20]
 8005876:	bfa8      	it	ge
 8005878:	462b      	movge	r3, r5
 800587a:	1ad2      	subs	r2, r2, r3
 800587c:	9205      	str	r2, [sp, #20]
 800587e:	9a06      	ldr	r2, [sp, #24]
 8005880:	1aed      	subs	r5, r5, r3
 8005882:	1ad3      	subs	r3, r2, r3
 8005884:	9306      	str	r3, [sp, #24]
 8005886:	9b08      	ldr	r3, [sp, #32]
 8005888:	b1f3      	cbz	r3, 80058c8 <_dtoa_r+0x780>
 800588a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800588c:	2b00      	cmp	r3, #0
 800588e:	f000 80a5 	beq.w	80059dc <_dtoa_r+0x894>
 8005892:	2e00      	cmp	r6, #0
 8005894:	dd10      	ble.n	80058b8 <_dtoa_r+0x770>
 8005896:	4639      	mov	r1, r7
 8005898:	4632      	mov	r2, r6
 800589a:	4620      	mov	r0, r4
 800589c:	f001 faac 	bl	8006df8 <__pow5mult>
 80058a0:	4652      	mov	r2, sl
 80058a2:	4601      	mov	r1, r0
 80058a4:	4607      	mov	r7, r0
 80058a6:	4620      	mov	r0, r4
 80058a8:	f001 fa19 	bl	8006cde <__multiply>
 80058ac:	4651      	mov	r1, sl
 80058ae:	4680      	mov	r8, r0
 80058b0:	4620      	mov	r0, r4
 80058b2:	f001 f96b 	bl	8006b8c <_Bfree>
 80058b6:	46c2      	mov	sl, r8
 80058b8:	9b08      	ldr	r3, [sp, #32]
 80058ba:	1b9a      	subs	r2, r3, r6
 80058bc:	d004      	beq.n	80058c8 <_dtoa_r+0x780>
 80058be:	4651      	mov	r1, sl
 80058c0:	4620      	mov	r0, r4
 80058c2:	f001 fa99 	bl	8006df8 <__pow5mult>
 80058c6:	4682      	mov	sl, r0
 80058c8:	2101      	movs	r1, #1
 80058ca:	4620      	mov	r0, r4
 80058cc:	f001 f9fe 	bl	8006ccc <__i2b>
 80058d0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80058d2:	2b00      	cmp	r3, #0
 80058d4:	4606      	mov	r6, r0
 80058d6:	f340 8083 	ble.w	80059e0 <_dtoa_r+0x898>
 80058da:	461a      	mov	r2, r3
 80058dc:	4601      	mov	r1, r0
 80058de:	4620      	mov	r0, r4
 80058e0:	f001 fa8a 	bl	8006df8 <__pow5mult>
 80058e4:	9b07      	ldr	r3, [sp, #28]
 80058e6:	2b01      	cmp	r3, #1
 80058e8:	4606      	mov	r6, r0
 80058ea:	dd7c      	ble.n	80059e6 <_dtoa_r+0x89e>
 80058ec:	f04f 0800 	mov.w	r8, #0
 80058f0:	6933      	ldr	r3, [r6, #16]
 80058f2:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 80058f6:	6918      	ldr	r0, [r3, #16]
 80058f8:	f001 f99a 	bl	8006c30 <__hi0bits>
 80058fc:	f1c0 0020 	rsb	r0, r0, #32
 8005900:	9b06      	ldr	r3, [sp, #24]
 8005902:	4418      	add	r0, r3
 8005904:	f010 001f 	ands.w	r0, r0, #31
 8005908:	f000 8096 	beq.w	8005a38 <_dtoa_r+0x8f0>
 800590c:	f1c0 0320 	rsb	r3, r0, #32
 8005910:	2b04      	cmp	r3, #4
 8005912:	f340 8087 	ble.w	8005a24 <_dtoa_r+0x8dc>
 8005916:	9b05      	ldr	r3, [sp, #20]
 8005918:	f1c0 001c 	rsb	r0, r0, #28
 800591c:	4403      	add	r3, r0
 800591e:	9305      	str	r3, [sp, #20]
 8005920:	9b06      	ldr	r3, [sp, #24]
 8005922:	4405      	add	r5, r0
 8005924:	4403      	add	r3, r0
 8005926:	9306      	str	r3, [sp, #24]
 8005928:	9b05      	ldr	r3, [sp, #20]
 800592a:	2b00      	cmp	r3, #0
 800592c:	dd05      	ble.n	800593a <_dtoa_r+0x7f2>
 800592e:	4651      	mov	r1, sl
 8005930:	461a      	mov	r2, r3
 8005932:	4620      	mov	r0, r4
 8005934:	f001 faae 	bl	8006e94 <__lshift>
 8005938:	4682      	mov	sl, r0
 800593a:	9b06      	ldr	r3, [sp, #24]
 800593c:	2b00      	cmp	r3, #0
 800593e:	dd05      	ble.n	800594c <_dtoa_r+0x804>
 8005940:	4631      	mov	r1, r6
 8005942:	461a      	mov	r2, r3
 8005944:	4620      	mov	r0, r4
 8005946:	f001 faa5 	bl	8006e94 <__lshift>
 800594a:	4606      	mov	r6, r0
 800594c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800594e:	2b00      	cmp	r3, #0
 8005950:	d074      	beq.n	8005a3c <_dtoa_r+0x8f4>
 8005952:	4631      	mov	r1, r6
 8005954:	4650      	mov	r0, sl
 8005956:	f001 faee 	bl	8006f36 <__mcmp>
 800595a:	2800      	cmp	r0, #0
 800595c:	da6e      	bge.n	8005a3c <_dtoa_r+0x8f4>
 800595e:	2300      	movs	r3, #0
 8005960:	4651      	mov	r1, sl
 8005962:	220a      	movs	r2, #10
 8005964:	4620      	mov	r0, r4
 8005966:	f001 f928 	bl	8006bba <__multadd>
 800596a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800596c:	f10b 3bff 	add.w	fp, fp, #4294967295
 8005970:	4682      	mov	sl, r0
 8005972:	2b00      	cmp	r3, #0
 8005974:	f000 81a8 	beq.w	8005cc8 <_dtoa_r+0xb80>
 8005978:	2300      	movs	r3, #0
 800597a:	4639      	mov	r1, r7
 800597c:	220a      	movs	r2, #10
 800597e:	4620      	mov	r0, r4
 8005980:	f001 f91b 	bl	8006bba <__multadd>
 8005984:	9b04      	ldr	r3, [sp, #16]
 8005986:	2b00      	cmp	r3, #0
 8005988:	4607      	mov	r7, r0
 800598a:	f300 80c8 	bgt.w	8005b1e <_dtoa_r+0x9d6>
 800598e:	9b07      	ldr	r3, [sp, #28]
 8005990:	2b02      	cmp	r3, #2
 8005992:	f340 80c4 	ble.w	8005b1e <_dtoa_r+0x9d6>
 8005996:	e059      	b.n	8005a4c <_dtoa_r+0x904>
 8005998:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800599a:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 800599e:	e756      	b.n	800584e <_dtoa_r+0x706>
 80059a0:	9b03      	ldr	r3, [sp, #12]
 80059a2:	1e5e      	subs	r6, r3, #1
 80059a4:	9b08      	ldr	r3, [sp, #32]
 80059a6:	42b3      	cmp	r3, r6
 80059a8:	bfbf      	itttt	lt
 80059aa:	9b08      	ldrlt	r3, [sp, #32]
 80059ac:	9608      	strlt	r6, [sp, #32]
 80059ae:	1af2      	sublt	r2, r6, r3
 80059b0:	9b0b      	ldrlt	r3, [sp, #44]	; 0x2c
 80059b2:	bfb6      	itet	lt
 80059b4:	189b      	addlt	r3, r3, r2
 80059b6:	1b9e      	subge	r6, r3, r6
 80059b8:	930b      	strlt	r3, [sp, #44]	; 0x2c
 80059ba:	9b03      	ldr	r3, [sp, #12]
 80059bc:	bfb8      	it	lt
 80059be:	2600      	movlt	r6, #0
 80059c0:	2b00      	cmp	r3, #0
 80059c2:	bfb9      	ittee	lt
 80059c4:	9b05      	ldrlt	r3, [sp, #20]
 80059c6:	9a03      	ldrlt	r2, [sp, #12]
 80059c8:	9d05      	ldrge	r5, [sp, #20]
 80059ca:	9b03      	ldrge	r3, [sp, #12]
 80059cc:	bfbc      	itt	lt
 80059ce:	1a9d      	sublt	r5, r3, r2
 80059d0:	2300      	movlt	r3, #0
 80059d2:	e73e      	b.n	8005852 <_dtoa_r+0x70a>
 80059d4:	9e08      	ldr	r6, [sp, #32]
 80059d6:	9d05      	ldr	r5, [sp, #20]
 80059d8:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80059da:	e745      	b.n	8005868 <_dtoa_r+0x720>
 80059dc:	9a08      	ldr	r2, [sp, #32]
 80059de:	e76e      	b.n	80058be <_dtoa_r+0x776>
 80059e0:	9b07      	ldr	r3, [sp, #28]
 80059e2:	2b01      	cmp	r3, #1
 80059e4:	dc19      	bgt.n	8005a1a <_dtoa_r+0x8d2>
 80059e6:	9b00      	ldr	r3, [sp, #0]
 80059e8:	b9bb      	cbnz	r3, 8005a1a <_dtoa_r+0x8d2>
 80059ea:	9b01      	ldr	r3, [sp, #4]
 80059ec:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80059f0:	b99b      	cbnz	r3, 8005a1a <_dtoa_r+0x8d2>
 80059f2:	9b01      	ldr	r3, [sp, #4]
 80059f4:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80059f8:	0d1b      	lsrs	r3, r3, #20
 80059fa:	051b      	lsls	r3, r3, #20
 80059fc:	b183      	cbz	r3, 8005a20 <_dtoa_r+0x8d8>
 80059fe:	9b05      	ldr	r3, [sp, #20]
 8005a00:	3301      	adds	r3, #1
 8005a02:	9305      	str	r3, [sp, #20]
 8005a04:	9b06      	ldr	r3, [sp, #24]
 8005a06:	3301      	adds	r3, #1
 8005a08:	9306      	str	r3, [sp, #24]
 8005a0a:	f04f 0801 	mov.w	r8, #1
 8005a0e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005a10:	2b00      	cmp	r3, #0
 8005a12:	f47f af6d 	bne.w	80058f0 <_dtoa_r+0x7a8>
 8005a16:	2001      	movs	r0, #1
 8005a18:	e772      	b.n	8005900 <_dtoa_r+0x7b8>
 8005a1a:	f04f 0800 	mov.w	r8, #0
 8005a1e:	e7f6      	b.n	8005a0e <_dtoa_r+0x8c6>
 8005a20:	4698      	mov	r8, r3
 8005a22:	e7f4      	b.n	8005a0e <_dtoa_r+0x8c6>
 8005a24:	d080      	beq.n	8005928 <_dtoa_r+0x7e0>
 8005a26:	9a05      	ldr	r2, [sp, #20]
 8005a28:	331c      	adds	r3, #28
 8005a2a:	441a      	add	r2, r3
 8005a2c:	9205      	str	r2, [sp, #20]
 8005a2e:	9a06      	ldr	r2, [sp, #24]
 8005a30:	441a      	add	r2, r3
 8005a32:	441d      	add	r5, r3
 8005a34:	4613      	mov	r3, r2
 8005a36:	e776      	b.n	8005926 <_dtoa_r+0x7de>
 8005a38:	4603      	mov	r3, r0
 8005a3a:	e7f4      	b.n	8005a26 <_dtoa_r+0x8de>
 8005a3c:	9b03      	ldr	r3, [sp, #12]
 8005a3e:	2b00      	cmp	r3, #0
 8005a40:	dc36      	bgt.n	8005ab0 <_dtoa_r+0x968>
 8005a42:	9b07      	ldr	r3, [sp, #28]
 8005a44:	2b02      	cmp	r3, #2
 8005a46:	dd33      	ble.n	8005ab0 <_dtoa_r+0x968>
 8005a48:	9b03      	ldr	r3, [sp, #12]
 8005a4a:	9304      	str	r3, [sp, #16]
 8005a4c:	9b04      	ldr	r3, [sp, #16]
 8005a4e:	b963      	cbnz	r3, 8005a6a <_dtoa_r+0x922>
 8005a50:	4631      	mov	r1, r6
 8005a52:	2205      	movs	r2, #5
 8005a54:	4620      	mov	r0, r4
 8005a56:	f001 f8b0 	bl	8006bba <__multadd>
 8005a5a:	4601      	mov	r1, r0
 8005a5c:	4606      	mov	r6, r0
 8005a5e:	4650      	mov	r0, sl
 8005a60:	f001 fa69 	bl	8006f36 <__mcmp>
 8005a64:	2800      	cmp	r0, #0
 8005a66:	f73f adb6 	bgt.w	80055d6 <_dtoa_r+0x48e>
 8005a6a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005a6c:	9d02      	ldr	r5, [sp, #8]
 8005a6e:	ea6f 0b03 	mvn.w	fp, r3
 8005a72:	2300      	movs	r3, #0
 8005a74:	9303      	str	r3, [sp, #12]
 8005a76:	4631      	mov	r1, r6
 8005a78:	4620      	mov	r0, r4
 8005a7a:	f001 f887 	bl	8006b8c <_Bfree>
 8005a7e:	2f00      	cmp	r7, #0
 8005a80:	f43f aea6 	beq.w	80057d0 <_dtoa_r+0x688>
 8005a84:	9b03      	ldr	r3, [sp, #12]
 8005a86:	b12b      	cbz	r3, 8005a94 <_dtoa_r+0x94c>
 8005a88:	42bb      	cmp	r3, r7
 8005a8a:	d003      	beq.n	8005a94 <_dtoa_r+0x94c>
 8005a8c:	4619      	mov	r1, r3
 8005a8e:	4620      	mov	r0, r4
 8005a90:	f001 f87c 	bl	8006b8c <_Bfree>
 8005a94:	4639      	mov	r1, r7
 8005a96:	4620      	mov	r0, r4
 8005a98:	f001 f878 	bl	8006b8c <_Bfree>
 8005a9c:	e698      	b.n	80057d0 <_dtoa_r+0x688>
 8005a9e:	2600      	movs	r6, #0
 8005aa0:	4637      	mov	r7, r6
 8005aa2:	e7e2      	b.n	8005a6a <_dtoa_r+0x922>
 8005aa4:	46bb      	mov	fp, r7
 8005aa6:	4637      	mov	r7, r6
 8005aa8:	e595      	b.n	80055d6 <_dtoa_r+0x48e>
 8005aaa:	bf00      	nop
 8005aac:	40240000 	.word	0x40240000
 8005ab0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005ab2:	bb93      	cbnz	r3, 8005b1a <_dtoa_r+0x9d2>
 8005ab4:	9b03      	ldr	r3, [sp, #12]
 8005ab6:	9304      	str	r3, [sp, #16]
 8005ab8:	9d02      	ldr	r5, [sp, #8]
 8005aba:	4631      	mov	r1, r6
 8005abc:	4650      	mov	r0, sl
 8005abe:	f7ff fab7 	bl	8005030 <quorem>
 8005ac2:	f100 0930 	add.w	r9, r0, #48	; 0x30
 8005ac6:	f805 9b01 	strb.w	r9, [r5], #1
 8005aca:	9b02      	ldr	r3, [sp, #8]
 8005acc:	9a04      	ldr	r2, [sp, #16]
 8005ace:	1aeb      	subs	r3, r5, r3
 8005ad0:	429a      	cmp	r2, r3
 8005ad2:	f300 80dc 	bgt.w	8005c8e <_dtoa_r+0xb46>
 8005ad6:	9b02      	ldr	r3, [sp, #8]
 8005ad8:	2a01      	cmp	r2, #1
 8005ada:	bfac      	ite	ge
 8005adc:	189b      	addge	r3, r3, r2
 8005ade:	3301      	addlt	r3, #1
 8005ae0:	4698      	mov	r8, r3
 8005ae2:	2300      	movs	r3, #0
 8005ae4:	9303      	str	r3, [sp, #12]
 8005ae6:	4651      	mov	r1, sl
 8005ae8:	2201      	movs	r2, #1
 8005aea:	4620      	mov	r0, r4
 8005aec:	f001 f9d2 	bl	8006e94 <__lshift>
 8005af0:	4631      	mov	r1, r6
 8005af2:	4682      	mov	sl, r0
 8005af4:	f001 fa1f 	bl	8006f36 <__mcmp>
 8005af8:	2800      	cmp	r0, #0
 8005afa:	f300 808d 	bgt.w	8005c18 <_dtoa_r+0xad0>
 8005afe:	d103      	bne.n	8005b08 <_dtoa_r+0x9c0>
 8005b00:	f019 0f01 	tst.w	r9, #1
 8005b04:	f040 8088 	bne.w	8005c18 <_dtoa_r+0xad0>
 8005b08:	4645      	mov	r5, r8
 8005b0a:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8005b0e:	2b30      	cmp	r3, #48	; 0x30
 8005b10:	f105 32ff 	add.w	r2, r5, #4294967295
 8005b14:	d1af      	bne.n	8005a76 <_dtoa_r+0x92e>
 8005b16:	4615      	mov	r5, r2
 8005b18:	e7f7      	b.n	8005b0a <_dtoa_r+0x9c2>
 8005b1a:	9b03      	ldr	r3, [sp, #12]
 8005b1c:	9304      	str	r3, [sp, #16]
 8005b1e:	2d00      	cmp	r5, #0
 8005b20:	dd05      	ble.n	8005b2e <_dtoa_r+0x9e6>
 8005b22:	4639      	mov	r1, r7
 8005b24:	462a      	mov	r2, r5
 8005b26:	4620      	mov	r0, r4
 8005b28:	f001 f9b4 	bl	8006e94 <__lshift>
 8005b2c:	4607      	mov	r7, r0
 8005b2e:	f1b8 0f00 	cmp.w	r8, #0
 8005b32:	d04c      	beq.n	8005bce <_dtoa_r+0xa86>
 8005b34:	6879      	ldr	r1, [r7, #4]
 8005b36:	4620      	mov	r0, r4
 8005b38:	f000 fff4 	bl	8006b24 <_Balloc>
 8005b3c:	693a      	ldr	r2, [r7, #16]
 8005b3e:	3202      	adds	r2, #2
 8005b40:	4605      	mov	r5, r0
 8005b42:	0092      	lsls	r2, r2, #2
 8005b44:	f107 010c 	add.w	r1, r7, #12
 8005b48:	300c      	adds	r0, #12
 8005b4a:	f000 ffb1 	bl	8006ab0 <memcpy>
 8005b4e:	2201      	movs	r2, #1
 8005b50:	4629      	mov	r1, r5
 8005b52:	4620      	mov	r0, r4
 8005b54:	f001 f99e 	bl	8006e94 <__lshift>
 8005b58:	9b00      	ldr	r3, [sp, #0]
 8005b5a:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8005b5e:	9703      	str	r7, [sp, #12]
 8005b60:	f003 0301 	and.w	r3, r3, #1
 8005b64:	4607      	mov	r7, r0
 8005b66:	9305      	str	r3, [sp, #20]
 8005b68:	4631      	mov	r1, r6
 8005b6a:	4650      	mov	r0, sl
 8005b6c:	f7ff fa60 	bl	8005030 <quorem>
 8005b70:	9903      	ldr	r1, [sp, #12]
 8005b72:	4605      	mov	r5, r0
 8005b74:	f100 0930 	add.w	r9, r0, #48	; 0x30
 8005b78:	4650      	mov	r0, sl
 8005b7a:	f001 f9dc 	bl	8006f36 <__mcmp>
 8005b7e:	463a      	mov	r2, r7
 8005b80:	9000      	str	r0, [sp, #0]
 8005b82:	4631      	mov	r1, r6
 8005b84:	4620      	mov	r0, r4
 8005b86:	f001 f9f0 	bl	8006f6a <__mdiff>
 8005b8a:	68c3      	ldr	r3, [r0, #12]
 8005b8c:	4602      	mov	r2, r0
 8005b8e:	bb03      	cbnz	r3, 8005bd2 <_dtoa_r+0xa8a>
 8005b90:	4601      	mov	r1, r0
 8005b92:	9006      	str	r0, [sp, #24]
 8005b94:	4650      	mov	r0, sl
 8005b96:	f001 f9ce 	bl	8006f36 <__mcmp>
 8005b9a:	9a06      	ldr	r2, [sp, #24]
 8005b9c:	4603      	mov	r3, r0
 8005b9e:	4611      	mov	r1, r2
 8005ba0:	4620      	mov	r0, r4
 8005ba2:	9306      	str	r3, [sp, #24]
 8005ba4:	f000 fff2 	bl	8006b8c <_Bfree>
 8005ba8:	9b06      	ldr	r3, [sp, #24]
 8005baa:	b9a3      	cbnz	r3, 8005bd6 <_dtoa_r+0xa8e>
 8005bac:	9a07      	ldr	r2, [sp, #28]
 8005bae:	b992      	cbnz	r2, 8005bd6 <_dtoa_r+0xa8e>
 8005bb0:	9a05      	ldr	r2, [sp, #20]
 8005bb2:	b982      	cbnz	r2, 8005bd6 <_dtoa_r+0xa8e>
 8005bb4:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8005bb8:	d029      	beq.n	8005c0e <_dtoa_r+0xac6>
 8005bba:	9b00      	ldr	r3, [sp, #0]
 8005bbc:	2b00      	cmp	r3, #0
 8005bbe:	dd01      	ble.n	8005bc4 <_dtoa_r+0xa7c>
 8005bc0:	f105 0931 	add.w	r9, r5, #49	; 0x31
 8005bc4:	f108 0501 	add.w	r5, r8, #1
 8005bc8:	f888 9000 	strb.w	r9, [r8]
 8005bcc:	e753      	b.n	8005a76 <_dtoa_r+0x92e>
 8005bce:	4638      	mov	r0, r7
 8005bd0:	e7c2      	b.n	8005b58 <_dtoa_r+0xa10>
 8005bd2:	2301      	movs	r3, #1
 8005bd4:	e7e3      	b.n	8005b9e <_dtoa_r+0xa56>
 8005bd6:	9a00      	ldr	r2, [sp, #0]
 8005bd8:	2a00      	cmp	r2, #0
 8005bda:	db04      	blt.n	8005be6 <_dtoa_r+0xa9e>
 8005bdc:	d125      	bne.n	8005c2a <_dtoa_r+0xae2>
 8005bde:	9a07      	ldr	r2, [sp, #28]
 8005be0:	bb1a      	cbnz	r2, 8005c2a <_dtoa_r+0xae2>
 8005be2:	9a05      	ldr	r2, [sp, #20]
 8005be4:	bb0a      	cbnz	r2, 8005c2a <_dtoa_r+0xae2>
 8005be6:	2b00      	cmp	r3, #0
 8005be8:	ddec      	ble.n	8005bc4 <_dtoa_r+0xa7c>
 8005bea:	4651      	mov	r1, sl
 8005bec:	2201      	movs	r2, #1
 8005bee:	4620      	mov	r0, r4
 8005bf0:	f001 f950 	bl	8006e94 <__lshift>
 8005bf4:	4631      	mov	r1, r6
 8005bf6:	4682      	mov	sl, r0
 8005bf8:	f001 f99d 	bl	8006f36 <__mcmp>
 8005bfc:	2800      	cmp	r0, #0
 8005bfe:	dc03      	bgt.n	8005c08 <_dtoa_r+0xac0>
 8005c00:	d1e0      	bne.n	8005bc4 <_dtoa_r+0xa7c>
 8005c02:	f019 0f01 	tst.w	r9, #1
 8005c06:	d0dd      	beq.n	8005bc4 <_dtoa_r+0xa7c>
 8005c08:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8005c0c:	d1d8      	bne.n	8005bc0 <_dtoa_r+0xa78>
 8005c0e:	2339      	movs	r3, #57	; 0x39
 8005c10:	f888 3000 	strb.w	r3, [r8]
 8005c14:	f108 0801 	add.w	r8, r8, #1
 8005c18:	4645      	mov	r5, r8
 8005c1a:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8005c1e:	2b39      	cmp	r3, #57	; 0x39
 8005c20:	f105 32ff 	add.w	r2, r5, #4294967295
 8005c24:	d03b      	beq.n	8005c9e <_dtoa_r+0xb56>
 8005c26:	3301      	adds	r3, #1
 8005c28:	e040      	b.n	8005cac <_dtoa_r+0xb64>
 8005c2a:	2b00      	cmp	r3, #0
 8005c2c:	f108 0501 	add.w	r5, r8, #1
 8005c30:	dd05      	ble.n	8005c3e <_dtoa_r+0xaf6>
 8005c32:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8005c36:	d0ea      	beq.n	8005c0e <_dtoa_r+0xac6>
 8005c38:	f109 0901 	add.w	r9, r9, #1
 8005c3c:	e7c4      	b.n	8005bc8 <_dtoa_r+0xa80>
 8005c3e:	9b02      	ldr	r3, [sp, #8]
 8005c40:	9a04      	ldr	r2, [sp, #16]
 8005c42:	f805 9c01 	strb.w	r9, [r5, #-1]
 8005c46:	1aeb      	subs	r3, r5, r3
 8005c48:	4293      	cmp	r3, r2
 8005c4a:	46a8      	mov	r8, r5
 8005c4c:	f43f af4b 	beq.w	8005ae6 <_dtoa_r+0x99e>
 8005c50:	4651      	mov	r1, sl
 8005c52:	2300      	movs	r3, #0
 8005c54:	220a      	movs	r2, #10
 8005c56:	4620      	mov	r0, r4
 8005c58:	f000 ffaf 	bl	8006bba <__multadd>
 8005c5c:	9b03      	ldr	r3, [sp, #12]
 8005c5e:	9903      	ldr	r1, [sp, #12]
 8005c60:	42bb      	cmp	r3, r7
 8005c62:	4682      	mov	sl, r0
 8005c64:	f04f 0300 	mov.w	r3, #0
 8005c68:	f04f 020a 	mov.w	r2, #10
 8005c6c:	4620      	mov	r0, r4
 8005c6e:	d104      	bne.n	8005c7a <_dtoa_r+0xb32>
 8005c70:	f000 ffa3 	bl	8006bba <__multadd>
 8005c74:	9003      	str	r0, [sp, #12]
 8005c76:	4607      	mov	r7, r0
 8005c78:	e776      	b.n	8005b68 <_dtoa_r+0xa20>
 8005c7a:	f000 ff9e 	bl	8006bba <__multadd>
 8005c7e:	2300      	movs	r3, #0
 8005c80:	9003      	str	r0, [sp, #12]
 8005c82:	220a      	movs	r2, #10
 8005c84:	4639      	mov	r1, r7
 8005c86:	4620      	mov	r0, r4
 8005c88:	f000 ff97 	bl	8006bba <__multadd>
 8005c8c:	e7f3      	b.n	8005c76 <_dtoa_r+0xb2e>
 8005c8e:	4651      	mov	r1, sl
 8005c90:	2300      	movs	r3, #0
 8005c92:	220a      	movs	r2, #10
 8005c94:	4620      	mov	r0, r4
 8005c96:	f000 ff90 	bl	8006bba <__multadd>
 8005c9a:	4682      	mov	sl, r0
 8005c9c:	e70d      	b.n	8005aba <_dtoa_r+0x972>
 8005c9e:	9b02      	ldr	r3, [sp, #8]
 8005ca0:	4293      	cmp	r3, r2
 8005ca2:	d105      	bne.n	8005cb0 <_dtoa_r+0xb68>
 8005ca4:	9a02      	ldr	r2, [sp, #8]
 8005ca6:	f10b 0b01 	add.w	fp, fp, #1
 8005caa:	2331      	movs	r3, #49	; 0x31
 8005cac:	7013      	strb	r3, [r2, #0]
 8005cae:	e6e2      	b.n	8005a76 <_dtoa_r+0x92e>
 8005cb0:	4615      	mov	r5, r2
 8005cb2:	e7b2      	b.n	8005c1a <_dtoa_r+0xad2>
 8005cb4:	4b09      	ldr	r3, [pc, #36]	; (8005cdc <_dtoa_r+0xb94>)
 8005cb6:	f7ff baae 	b.w	8005216 <_dtoa_r+0xce>
 8005cba:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8005cbc:	2b00      	cmp	r3, #0
 8005cbe:	f47f aa88 	bne.w	80051d2 <_dtoa_r+0x8a>
 8005cc2:	4b07      	ldr	r3, [pc, #28]	; (8005ce0 <_dtoa_r+0xb98>)
 8005cc4:	f7ff baa7 	b.w	8005216 <_dtoa_r+0xce>
 8005cc8:	9b04      	ldr	r3, [sp, #16]
 8005cca:	2b00      	cmp	r3, #0
 8005ccc:	f73f aef4 	bgt.w	8005ab8 <_dtoa_r+0x970>
 8005cd0:	9b07      	ldr	r3, [sp, #28]
 8005cd2:	2b02      	cmp	r3, #2
 8005cd4:	f77f aef0 	ble.w	8005ab8 <_dtoa_r+0x970>
 8005cd8:	e6b8      	b.n	8005a4c <_dtoa_r+0x904>
 8005cda:	bf00      	nop
 8005cdc:	0800845c 	.word	0x0800845c
 8005ce0:	0800849e 	.word	0x0800849e

08005ce4 <__sflush_r>:
 8005ce4:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8005ce8:	b293      	uxth	r3, r2
 8005cea:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005cee:	4605      	mov	r5, r0
 8005cf0:	0718      	lsls	r0, r3, #28
 8005cf2:	460c      	mov	r4, r1
 8005cf4:	d461      	bmi.n	8005dba <__sflush_r+0xd6>
 8005cf6:	684b      	ldr	r3, [r1, #4]
 8005cf8:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8005cfc:	2b00      	cmp	r3, #0
 8005cfe:	818a      	strh	r2, [r1, #12]
 8005d00:	dc05      	bgt.n	8005d0e <__sflush_r+0x2a>
 8005d02:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8005d04:	2b00      	cmp	r3, #0
 8005d06:	dc02      	bgt.n	8005d0e <__sflush_r+0x2a>
 8005d08:	2000      	movs	r0, #0
 8005d0a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005d0e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8005d10:	2e00      	cmp	r6, #0
 8005d12:	d0f9      	beq.n	8005d08 <__sflush_r+0x24>
 8005d14:	2300      	movs	r3, #0
 8005d16:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8005d1a:	682f      	ldr	r7, [r5, #0]
 8005d1c:	602b      	str	r3, [r5, #0]
 8005d1e:	d037      	beq.n	8005d90 <__sflush_r+0xac>
 8005d20:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8005d22:	89a3      	ldrh	r3, [r4, #12]
 8005d24:	075a      	lsls	r2, r3, #29
 8005d26:	d505      	bpl.n	8005d34 <__sflush_r+0x50>
 8005d28:	6863      	ldr	r3, [r4, #4]
 8005d2a:	1ac0      	subs	r0, r0, r3
 8005d2c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8005d2e:	b10b      	cbz	r3, 8005d34 <__sflush_r+0x50>
 8005d30:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005d32:	1ac0      	subs	r0, r0, r3
 8005d34:	2300      	movs	r3, #0
 8005d36:	4602      	mov	r2, r0
 8005d38:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8005d3a:	6a21      	ldr	r1, [r4, #32]
 8005d3c:	4628      	mov	r0, r5
 8005d3e:	47b0      	blx	r6
 8005d40:	1c43      	adds	r3, r0, #1
 8005d42:	89a3      	ldrh	r3, [r4, #12]
 8005d44:	d106      	bne.n	8005d54 <__sflush_r+0x70>
 8005d46:	6829      	ldr	r1, [r5, #0]
 8005d48:	291d      	cmp	r1, #29
 8005d4a:	d84f      	bhi.n	8005dec <__sflush_r+0x108>
 8005d4c:	4a2d      	ldr	r2, [pc, #180]	; (8005e04 <__sflush_r+0x120>)
 8005d4e:	40ca      	lsrs	r2, r1
 8005d50:	07d6      	lsls	r6, r2, #31
 8005d52:	d54b      	bpl.n	8005dec <__sflush_r+0x108>
 8005d54:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8005d58:	b21b      	sxth	r3, r3
 8005d5a:	2200      	movs	r2, #0
 8005d5c:	6062      	str	r2, [r4, #4]
 8005d5e:	04d9      	lsls	r1, r3, #19
 8005d60:	6922      	ldr	r2, [r4, #16]
 8005d62:	81a3      	strh	r3, [r4, #12]
 8005d64:	6022      	str	r2, [r4, #0]
 8005d66:	d504      	bpl.n	8005d72 <__sflush_r+0x8e>
 8005d68:	1c42      	adds	r2, r0, #1
 8005d6a:	d101      	bne.n	8005d70 <__sflush_r+0x8c>
 8005d6c:	682b      	ldr	r3, [r5, #0]
 8005d6e:	b903      	cbnz	r3, 8005d72 <__sflush_r+0x8e>
 8005d70:	6560      	str	r0, [r4, #84]	; 0x54
 8005d72:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8005d74:	602f      	str	r7, [r5, #0]
 8005d76:	2900      	cmp	r1, #0
 8005d78:	d0c6      	beq.n	8005d08 <__sflush_r+0x24>
 8005d7a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8005d7e:	4299      	cmp	r1, r3
 8005d80:	d002      	beq.n	8005d88 <__sflush_r+0xa4>
 8005d82:	4628      	mov	r0, r5
 8005d84:	f000 f9bc 	bl	8006100 <_free_r>
 8005d88:	2000      	movs	r0, #0
 8005d8a:	6360      	str	r0, [r4, #52]	; 0x34
 8005d8c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005d90:	6a21      	ldr	r1, [r4, #32]
 8005d92:	2301      	movs	r3, #1
 8005d94:	4628      	mov	r0, r5
 8005d96:	47b0      	blx	r6
 8005d98:	1c41      	adds	r1, r0, #1
 8005d9a:	d1c2      	bne.n	8005d22 <__sflush_r+0x3e>
 8005d9c:	682b      	ldr	r3, [r5, #0]
 8005d9e:	2b00      	cmp	r3, #0
 8005da0:	d0bf      	beq.n	8005d22 <__sflush_r+0x3e>
 8005da2:	2b1d      	cmp	r3, #29
 8005da4:	d001      	beq.n	8005daa <__sflush_r+0xc6>
 8005da6:	2b16      	cmp	r3, #22
 8005da8:	d101      	bne.n	8005dae <__sflush_r+0xca>
 8005daa:	602f      	str	r7, [r5, #0]
 8005dac:	e7ac      	b.n	8005d08 <__sflush_r+0x24>
 8005dae:	89a3      	ldrh	r3, [r4, #12]
 8005db0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005db4:	81a3      	strh	r3, [r4, #12]
 8005db6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005dba:	690f      	ldr	r7, [r1, #16]
 8005dbc:	2f00      	cmp	r7, #0
 8005dbe:	d0a3      	beq.n	8005d08 <__sflush_r+0x24>
 8005dc0:	079b      	lsls	r3, r3, #30
 8005dc2:	680e      	ldr	r6, [r1, #0]
 8005dc4:	bf08      	it	eq
 8005dc6:	694b      	ldreq	r3, [r1, #20]
 8005dc8:	600f      	str	r7, [r1, #0]
 8005dca:	bf18      	it	ne
 8005dcc:	2300      	movne	r3, #0
 8005dce:	eba6 0807 	sub.w	r8, r6, r7
 8005dd2:	608b      	str	r3, [r1, #8]
 8005dd4:	f1b8 0f00 	cmp.w	r8, #0
 8005dd8:	dd96      	ble.n	8005d08 <__sflush_r+0x24>
 8005dda:	4643      	mov	r3, r8
 8005ddc:	463a      	mov	r2, r7
 8005dde:	6a21      	ldr	r1, [r4, #32]
 8005de0:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8005de2:	4628      	mov	r0, r5
 8005de4:	47b0      	blx	r6
 8005de6:	2800      	cmp	r0, #0
 8005de8:	dc07      	bgt.n	8005dfa <__sflush_r+0x116>
 8005dea:	89a3      	ldrh	r3, [r4, #12]
 8005dec:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005df0:	81a3      	strh	r3, [r4, #12]
 8005df2:	f04f 30ff 	mov.w	r0, #4294967295
 8005df6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005dfa:	4407      	add	r7, r0
 8005dfc:	eba8 0800 	sub.w	r8, r8, r0
 8005e00:	e7e8      	b.n	8005dd4 <__sflush_r+0xf0>
 8005e02:	bf00      	nop
 8005e04:	20400001 	.word	0x20400001

08005e08 <_fflush_r>:
 8005e08:	b538      	push	{r3, r4, r5, lr}
 8005e0a:	690b      	ldr	r3, [r1, #16]
 8005e0c:	4605      	mov	r5, r0
 8005e0e:	460c      	mov	r4, r1
 8005e10:	b913      	cbnz	r3, 8005e18 <_fflush_r+0x10>
 8005e12:	2500      	movs	r5, #0
 8005e14:	4628      	mov	r0, r5
 8005e16:	bd38      	pop	{r3, r4, r5, pc}
 8005e18:	b118      	cbz	r0, 8005e22 <_fflush_r+0x1a>
 8005e1a:	6983      	ldr	r3, [r0, #24]
 8005e1c:	b90b      	cbnz	r3, 8005e22 <_fflush_r+0x1a>
 8005e1e:	f000 f899 	bl	8005f54 <__sinit>
 8005e22:	4b14      	ldr	r3, [pc, #80]	; (8005e74 <_fflush_r+0x6c>)
 8005e24:	429c      	cmp	r4, r3
 8005e26:	d11b      	bne.n	8005e60 <_fflush_r+0x58>
 8005e28:	686c      	ldr	r4, [r5, #4]
 8005e2a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005e2e:	2b00      	cmp	r3, #0
 8005e30:	d0ef      	beq.n	8005e12 <_fflush_r+0xa>
 8005e32:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8005e34:	07d0      	lsls	r0, r2, #31
 8005e36:	d404      	bmi.n	8005e42 <_fflush_r+0x3a>
 8005e38:	0599      	lsls	r1, r3, #22
 8005e3a:	d402      	bmi.n	8005e42 <_fflush_r+0x3a>
 8005e3c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8005e3e:	f000 fbb3 	bl	80065a8 <__retarget_lock_acquire_recursive>
 8005e42:	4628      	mov	r0, r5
 8005e44:	4621      	mov	r1, r4
 8005e46:	f7ff ff4d 	bl	8005ce4 <__sflush_r>
 8005e4a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8005e4c:	07da      	lsls	r2, r3, #31
 8005e4e:	4605      	mov	r5, r0
 8005e50:	d4e0      	bmi.n	8005e14 <_fflush_r+0xc>
 8005e52:	89a3      	ldrh	r3, [r4, #12]
 8005e54:	059b      	lsls	r3, r3, #22
 8005e56:	d4dd      	bmi.n	8005e14 <_fflush_r+0xc>
 8005e58:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8005e5a:	f000 fba6 	bl	80065aa <__retarget_lock_release_recursive>
 8005e5e:	e7d9      	b.n	8005e14 <_fflush_r+0xc>
 8005e60:	4b05      	ldr	r3, [pc, #20]	; (8005e78 <_fflush_r+0x70>)
 8005e62:	429c      	cmp	r4, r3
 8005e64:	d101      	bne.n	8005e6a <_fflush_r+0x62>
 8005e66:	68ac      	ldr	r4, [r5, #8]
 8005e68:	e7df      	b.n	8005e2a <_fflush_r+0x22>
 8005e6a:	4b04      	ldr	r3, [pc, #16]	; (8005e7c <_fflush_r+0x74>)
 8005e6c:	429c      	cmp	r4, r3
 8005e6e:	bf08      	it	eq
 8005e70:	68ec      	ldreq	r4, [r5, #12]
 8005e72:	e7da      	b.n	8005e2a <_fflush_r+0x22>
 8005e74:	080084cc 	.word	0x080084cc
 8005e78:	080084ec 	.word	0x080084ec
 8005e7c:	080084ac 	.word	0x080084ac

08005e80 <fflush>:
 8005e80:	4601      	mov	r1, r0
 8005e82:	b920      	cbnz	r0, 8005e8e <fflush+0xe>
 8005e84:	4b04      	ldr	r3, [pc, #16]	; (8005e98 <fflush+0x18>)
 8005e86:	4905      	ldr	r1, [pc, #20]	; (8005e9c <fflush+0x1c>)
 8005e88:	6818      	ldr	r0, [r3, #0]
 8005e8a:	f000 bb5f 	b.w	800654c <_fwalk_reent>
 8005e8e:	4b04      	ldr	r3, [pc, #16]	; (8005ea0 <fflush+0x20>)
 8005e90:	6818      	ldr	r0, [r3, #0]
 8005e92:	f7ff bfb9 	b.w	8005e08 <_fflush_r>
 8005e96:	bf00      	nop
 8005e98:	08008424 	.word	0x08008424
 8005e9c:	08005e09 	.word	0x08005e09
 8005ea0:	20000010 	.word	0x20000010

08005ea4 <_cleanup_r>:
 8005ea4:	4901      	ldr	r1, [pc, #4]	; (8005eac <_cleanup_r+0x8>)
 8005ea6:	f000 bb51 	b.w	800654c <_fwalk_reent>
 8005eaa:	bf00      	nop
 8005eac:	080077a9 	.word	0x080077a9

08005eb0 <std.isra.0>:
 8005eb0:	2300      	movs	r3, #0
 8005eb2:	b510      	push	{r4, lr}
 8005eb4:	4604      	mov	r4, r0
 8005eb6:	6003      	str	r3, [r0, #0]
 8005eb8:	6043      	str	r3, [r0, #4]
 8005eba:	6083      	str	r3, [r0, #8]
 8005ebc:	8181      	strh	r1, [r0, #12]
 8005ebe:	6643      	str	r3, [r0, #100]	; 0x64
 8005ec0:	81c2      	strh	r2, [r0, #14]
 8005ec2:	6103      	str	r3, [r0, #16]
 8005ec4:	6143      	str	r3, [r0, #20]
 8005ec6:	6183      	str	r3, [r0, #24]
 8005ec8:	4619      	mov	r1, r3
 8005eca:	2208      	movs	r2, #8
 8005ecc:	305c      	adds	r0, #92	; 0x5c
 8005ece:	f000 fe14 	bl	8006afa <memset>
 8005ed2:	4b05      	ldr	r3, [pc, #20]	; (8005ee8 <std.isra.0+0x38>)
 8005ed4:	6263      	str	r3, [r4, #36]	; 0x24
 8005ed6:	4b05      	ldr	r3, [pc, #20]	; (8005eec <std.isra.0+0x3c>)
 8005ed8:	62a3      	str	r3, [r4, #40]	; 0x28
 8005eda:	4b05      	ldr	r3, [pc, #20]	; (8005ef0 <std.isra.0+0x40>)
 8005edc:	62e3      	str	r3, [r4, #44]	; 0x2c
 8005ede:	4b05      	ldr	r3, [pc, #20]	; (8005ef4 <std.isra.0+0x44>)
 8005ee0:	6224      	str	r4, [r4, #32]
 8005ee2:	6323      	str	r3, [r4, #48]	; 0x30
 8005ee4:	bd10      	pop	{r4, pc}
 8005ee6:	bf00      	nop
 8005ee8:	08007525 	.word	0x08007525
 8005eec:	08007547 	.word	0x08007547
 8005ef0:	0800757f 	.word	0x0800757f
 8005ef4:	080075a3 	.word	0x080075a3

08005ef8 <__sfmoreglue>:
 8005ef8:	b570      	push	{r4, r5, r6, lr}
 8005efa:	1e4a      	subs	r2, r1, #1
 8005efc:	2568      	movs	r5, #104	; 0x68
 8005efe:	4355      	muls	r5, r2
 8005f00:	460e      	mov	r6, r1
 8005f02:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8005f06:	f000 fbc5 	bl	8006694 <_malloc_r>
 8005f0a:	4604      	mov	r4, r0
 8005f0c:	b140      	cbz	r0, 8005f20 <__sfmoreglue+0x28>
 8005f0e:	2100      	movs	r1, #0
 8005f10:	e880 0042 	stmia.w	r0, {r1, r6}
 8005f14:	300c      	adds	r0, #12
 8005f16:	60a0      	str	r0, [r4, #8]
 8005f18:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8005f1c:	f000 fded 	bl	8006afa <memset>
 8005f20:	4620      	mov	r0, r4
 8005f22:	bd70      	pop	{r4, r5, r6, pc}

08005f24 <__sfp_lock_acquire>:
 8005f24:	4801      	ldr	r0, [pc, #4]	; (8005f2c <__sfp_lock_acquire+0x8>)
 8005f26:	f000 bb3f 	b.w	80065a8 <__retarget_lock_acquire_recursive>
 8005f2a:	bf00      	nop
 8005f2c:	20002704 	.word	0x20002704

08005f30 <__sfp_lock_release>:
 8005f30:	4801      	ldr	r0, [pc, #4]	; (8005f38 <__sfp_lock_release+0x8>)
 8005f32:	f000 bb3a 	b.w	80065aa <__retarget_lock_release_recursive>
 8005f36:	bf00      	nop
 8005f38:	20002704 	.word	0x20002704

08005f3c <__sinit_lock_acquire>:
 8005f3c:	4801      	ldr	r0, [pc, #4]	; (8005f44 <__sinit_lock_acquire+0x8>)
 8005f3e:	f000 bb33 	b.w	80065a8 <__retarget_lock_acquire_recursive>
 8005f42:	bf00      	nop
 8005f44:	200026ff 	.word	0x200026ff

08005f48 <__sinit_lock_release>:
 8005f48:	4801      	ldr	r0, [pc, #4]	; (8005f50 <__sinit_lock_release+0x8>)
 8005f4a:	f000 bb2e 	b.w	80065aa <__retarget_lock_release_recursive>
 8005f4e:	bf00      	nop
 8005f50:	200026ff 	.word	0x200026ff

08005f54 <__sinit>:
 8005f54:	b510      	push	{r4, lr}
 8005f56:	4604      	mov	r4, r0
 8005f58:	f7ff fff0 	bl	8005f3c <__sinit_lock_acquire>
 8005f5c:	69a3      	ldr	r3, [r4, #24]
 8005f5e:	b11b      	cbz	r3, 8005f68 <__sinit+0x14>
 8005f60:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005f64:	f7ff bff0 	b.w	8005f48 <__sinit_lock_release>
 8005f68:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
 8005f6c:	f8c4 30dc 	str.w	r3, [r4, #220]	; 0xdc
 8005f70:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
 8005f74:	4b12      	ldr	r3, [pc, #72]	; (8005fc0 <__sinit+0x6c>)
 8005f76:	4a13      	ldr	r2, [pc, #76]	; (8005fc4 <__sinit+0x70>)
 8005f78:	681b      	ldr	r3, [r3, #0]
 8005f7a:	62a2      	str	r2, [r4, #40]	; 0x28
 8005f7c:	429c      	cmp	r4, r3
 8005f7e:	bf04      	itt	eq
 8005f80:	2301      	moveq	r3, #1
 8005f82:	61a3      	streq	r3, [r4, #24]
 8005f84:	4620      	mov	r0, r4
 8005f86:	f000 f81f 	bl	8005fc8 <__sfp>
 8005f8a:	6060      	str	r0, [r4, #4]
 8005f8c:	4620      	mov	r0, r4
 8005f8e:	f000 f81b 	bl	8005fc8 <__sfp>
 8005f92:	60a0      	str	r0, [r4, #8]
 8005f94:	4620      	mov	r0, r4
 8005f96:	f000 f817 	bl	8005fc8 <__sfp>
 8005f9a:	2200      	movs	r2, #0
 8005f9c:	60e0      	str	r0, [r4, #12]
 8005f9e:	2104      	movs	r1, #4
 8005fa0:	6860      	ldr	r0, [r4, #4]
 8005fa2:	f7ff ff85 	bl	8005eb0 <std.isra.0>
 8005fa6:	2201      	movs	r2, #1
 8005fa8:	2109      	movs	r1, #9
 8005faa:	68a0      	ldr	r0, [r4, #8]
 8005fac:	f7ff ff80 	bl	8005eb0 <std.isra.0>
 8005fb0:	2202      	movs	r2, #2
 8005fb2:	2112      	movs	r1, #18
 8005fb4:	68e0      	ldr	r0, [r4, #12]
 8005fb6:	f7ff ff7b 	bl	8005eb0 <std.isra.0>
 8005fba:	2301      	movs	r3, #1
 8005fbc:	61a3      	str	r3, [r4, #24]
 8005fbe:	e7cf      	b.n	8005f60 <__sinit+0xc>
 8005fc0:	08008424 	.word	0x08008424
 8005fc4:	08005ea5 	.word	0x08005ea5

08005fc8 <__sfp>:
 8005fc8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005fca:	4607      	mov	r7, r0
 8005fcc:	f7ff ffaa 	bl	8005f24 <__sfp_lock_acquire>
 8005fd0:	4b1f      	ldr	r3, [pc, #124]	; (8006050 <__sfp+0x88>)
 8005fd2:	681e      	ldr	r6, [r3, #0]
 8005fd4:	69b3      	ldr	r3, [r6, #24]
 8005fd6:	b913      	cbnz	r3, 8005fde <__sfp+0x16>
 8005fd8:	4630      	mov	r0, r6
 8005fda:	f7ff ffbb 	bl	8005f54 <__sinit>
 8005fde:	36d8      	adds	r6, #216	; 0xd8
 8005fe0:	68b4      	ldr	r4, [r6, #8]
 8005fe2:	6873      	ldr	r3, [r6, #4]
 8005fe4:	3b01      	subs	r3, #1
 8005fe6:	d503      	bpl.n	8005ff0 <__sfp+0x28>
 8005fe8:	6833      	ldr	r3, [r6, #0]
 8005fea:	b133      	cbz	r3, 8005ffa <__sfp+0x32>
 8005fec:	6836      	ldr	r6, [r6, #0]
 8005fee:	e7f7      	b.n	8005fe0 <__sfp+0x18>
 8005ff0:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8005ff4:	b17d      	cbz	r5, 8006016 <__sfp+0x4e>
 8005ff6:	3468      	adds	r4, #104	; 0x68
 8005ff8:	e7f4      	b.n	8005fe4 <__sfp+0x1c>
 8005ffa:	2104      	movs	r1, #4
 8005ffc:	4638      	mov	r0, r7
 8005ffe:	f7ff ff7b 	bl	8005ef8 <__sfmoreglue>
 8006002:	4604      	mov	r4, r0
 8006004:	6030      	str	r0, [r6, #0]
 8006006:	2800      	cmp	r0, #0
 8006008:	d1f0      	bne.n	8005fec <__sfp+0x24>
 800600a:	f7ff ff91 	bl	8005f30 <__sfp_lock_release>
 800600e:	230c      	movs	r3, #12
 8006010:	603b      	str	r3, [r7, #0]
 8006012:	4620      	mov	r0, r4
 8006014:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006016:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800601a:	81e3      	strh	r3, [r4, #14]
 800601c:	2301      	movs	r3, #1
 800601e:	81a3      	strh	r3, [r4, #12]
 8006020:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8006024:	6665      	str	r5, [r4, #100]	; 0x64
 8006026:	f000 fabd 	bl	80065a4 <__retarget_lock_init_recursive>
 800602a:	f7ff ff81 	bl	8005f30 <__sfp_lock_release>
 800602e:	6025      	str	r5, [r4, #0]
 8006030:	60a5      	str	r5, [r4, #8]
 8006032:	6065      	str	r5, [r4, #4]
 8006034:	6125      	str	r5, [r4, #16]
 8006036:	6165      	str	r5, [r4, #20]
 8006038:	61a5      	str	r5, [r4, #24]
 800603a:	2208      	movs	r2, #8
 800603c:	4629      	mov	r1, r5
 800603e:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8006042:	f000 fd5a 	bl	8006afa <memset>
 8006046:	6365      	str	r5, [r4, #52]	; 0x34
 8006048:	63a5      	str	r5, [r4, #56]	; 0x38
 800604a:	64a5      	str	r5, [r4, #72]	; 0x48
 800604c:	64e5      	str	r5, [r4, #76]	; 0x4c
 800604e:	e7e0      	b.n	8006012 <__sfp+0x4a>
 8006050:	08008424 	.word	0x08008424

08006054 <_malloc_trim_r>:
 8006054:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006058:	4f25      	ldr	r7, [pc, #148]	; (80060f0 <_malloc_trim_r+0x9c>)
 800605a:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 80060fc <_malloc_trim_r+0xa8>
 800605e:	4689      	mov	r9, r1
 8006060:	4606      	mov	r6, r0
 8006062:	f000 fd53 	bl	8006b0c <__malloc_lock>
 8006066:	68bb      	ldr	r3, [r7, #8]
 8006068:	685d      	ldr	r5, [r3, #4]
 800606a:	f1a8 0411 	sub.w	r4, r8, #17
 800606e:	f025 0503 	bic.w	r5, r5, #3
 8006072:	eba4 0409 	sub.w	r4, r4, r9
 8006076:	442c      	add	r4, r5
 8006078:	fbb4 f4f8 	udiv	r4, r4, r8
 800607c:	3c01      	subs	r4, #1
 800607e:	fb08 f404 	mul.w	r4, r8, r4
 8006082:	4544      	cmp	r4, r8
 8006084:	da05      	bge.n	8006092 <_malloc_trim_r+0x3e>
 8006086:	4630      	mov	r0, r6
 8006088:	f000 fd46 	bl	8006b18 <__malloc_unlock>
 800608c:	2000      	movs	r0, #0
 800608e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006092:	2100      	movs	r1, #0
 8006094:	4630      	mov	r0, r6
 8006096:	f001 fa35 	bl	8007504 <_sbrk_r>
 800609a:	68bb      	ldr	r3, [r7, #8]
 800609c:	442b      	add	r3, r5
 800609e:	4298      	cmp	r0, r3
 80060a0:	d1f1      	bne.n	8006086 <_malloc_trim_r+0x32>
 80060a2:	4261      	negs	r1, r4
 80060a4:	4630      	mov	r0, r6
 80060a6:	f001 fa2d 	bl	8007504 <_sbrk_r>
 80060aa:	3001      	adds	r0, #1
 80060ac:	d110      	bne.n	80060d0 <_malloc_trim_r+0x7c>
 80060ae:	2100      	movs	r1, #0
 80060b0:	4630      	mov	r0, r6
 80060b2:	f001 fa27 	bl	8007504 <_sbrk_r>
 80060b6:	68ba      	ldr	r2, [r7, #8]
 80060b8:	1a83      	subs	r3, r0, r2
 80060ba:	2b0f      	cmp	r3, #15
 80060bc:	dde3      	ble.n	8006086 <_malloc_trim_r+0x32>
 80060be:	490d      	ldr	r1, [pc, #52]	; (80060f4 <_malloc_trim_r+0xa0>)
 80060c0:	6809      	ldr	r1, [r1, #0]
 80060c2:	1a40      	subs	r0, r0, r1
 80060c4:	490c      	ldr	r1, [pc, #48]	; (80060f8 <_malloc_trim_r+0xa4>)
 80060c6:	f043 0301 	orr.w	r3, r3, #1
 80060ca:	6008      	str	r0, [r1, #0]
 80060cc:	6053      	str	r3, [r2, #4]
 80060ce:	e7da      	b.n	8006086 <_malloc_trim_r+0x32>
 80060d0:	68bb      	ldr	r3, [r7, #8]
 80060d2:	4a09      	ldr	r2, [pc, #36]	; (80060f8 <_malloc_trim_r+0xa4>)
 80060d4:	1b2d      	subs	r5, r5, r4
 80060d6:	f045 0501 	orr.w	r5, r5, #1
 80060da:	605d      	str	r5, [r3, #4]
 80060dc:	6813      	ldr	r3, [r2, #0]
 80060de:	4630      	mov	r0, r6
 80060e0:	1b1c      	subs	r4, r3, r4
 80060e2:	6014      	str	r4, [r2, #0]
 80060e4:	f000 fd18 	bl	8006b18 <__malloc_unlock>
 80060e8:	2001      	movs	r0, #1
 80060ea:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80060ee:	bf00      	nop
 80060f0:	20000104 	.word	0x20000104
 80060f4:	2000050c 	.word	0x2000050c
 80060f8:	200026c4 	.word	0x200026c4
 80060fc:	00000080 	.word	0x00000080

08006100 <_free_r>:
 8006100:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006104:	4604      	mov	r4, r0
 8006106:	4688      	mov	r8, r1
 8006108:	2900      	cmp	r1, #0
 800610a:	f000 80ab 	beq.w	8006264 <_free_r+0x164>
 800610e:	f000 fcfd 	bl	8006b0c <__malloc_lock>
 8006112:	f858 2c04 	ldr.w	r2, [r8, #-4]
 8006116:	4d54      	ldr	r5, [pc, #336]	; (8006268 <_free_r+0x168>)
 8006118:	f022 0001 	bic.w	r0, r2, #1
 800611c:	f1a8 0308 	sub.w	r3, r8, #8
 8006120:	181f      	adds	r7, r3, r0
 8006122:	68a9      	ldr	r1, [r5, #8]
 8006124:	687e      	ldr	r6, [r7, #4]
 8006126:	428f      	cmp	r7, r1
 8006128:	f026 0603 	bic.w	r6, r6, #3
 800612c:	f002 0201 	and.w	r2, r2, #1
 8006130:	d11b      	bne.n	800616a <_free_r+0x6a>
 8006132:	4430      	add	r0, r6
 8006134:	b93a      	cbnz	r2, 8006146 <_free_r+0x46>
 8006136:	f858 2c08 	ldr.w	r2, [r8, #-8]
 800613a:	1a9b      	subs	r3, r3, r2
 800613c:	4410      	add	r0, r2
 800613e:	6899      	ldr	r1, [r3, #8]
 8006140:	68da      	ldr	r2, [r3, #12]
 8006142:	60ca      	str	r2, [r1, #12]
 8006144:	6091      	str	r1, [r2, #8]
 8006146:	f040 0201 	orr.w	r2, r0, #1
 800614a:	605a      	str	r2, [r3, #4]
 800614c:	60ab      	str	r3, [r5, #8]
 800614e:	4b47      	ldr	r3, [pc, #284]	; (800626c <_free_r+0x16c>)
 8006150:	681b      	ldr	r3, [r3, #0]
 8006152:	4298      	cmp	r0, r3
 8006154:	d304      	bcc.n	8006160 <_free_r+0x60>
 8006156:	4b46      	ldr	r3, [pc, #280]	; (8006270 <_free_r+0x170>)
 8006158:	4620      	mov	r0, r4
 800615a:	6819      	ldr	r1, [r3, #0]
 800615c:	f7ff ff7a 	bl	8006054 <_malloc_trim_r>
 8006160:	4620      	mov	r0, r4
 8006162:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8006166:	f000 bcd7 	b.w	8006b18 <__malloc_unlock>
 800616a:	607e      	str	r6, [r7, #4]
 800616c:	2a00      	cmp	r2, #0
 800616e:	d139      	bne.n	80061e4 <_free_r+0xe4>
 8006170:	f858 1c08 	ldr.w	r1, [r8, #-8]
 8006174:	1a5b      	subs	r3, r3, r1
 8006176:	4408      	add	r0, r1
 8006178:	6899      	ldr	r1, [r3, #8]
 800617a:	f105 0e08 	add.w	lr, r5, #8
 800617e:	4571      	cmp	r1, lr
 8006180:	d032      	beq.n	80061e8 <_free_r+0xe8>
 8006182:	f8d3 e00c 	ldr.w	lr, [r3, #12]
 8006186:	f8c1 e00c 	str.w	lr, [r1, #12]
 800618a:	f8ce 1008 	str.w	r1, [lr, #8]
 800618e:	19b9      	adds	r1, r7, r6
 8006190:	6849      	ldr	r1, [r1, #4]
 8006192:	07c9      	lsls	r1, r1, #31
 8006194:	d40a      	bmi.n	80061ac <_free_r+0xac>
 8006196:	4430      	add	r0, r6
 8006198:	68b9      	ldr	r1, [r7, #8]
 800619a:	bb3a      	cbnz	r2, 80061ec <_free_r+0xec>
 800619c:	4e35      	ldr	r6, [pc, #212]	; (8006274 <_free_r+0x174>)
 800619e:	42b1      	cmp	r1, r6
 80061a0:	d124      	bne.n	80061ec <_free_r+0xec>
 80061a2:	616b      	str	r3, [r5, #20]
 80061a4:	612b      	str	r3, [r5, #16]
 80061a6:	2201      	movs	r2, #1
 80061a8:	60d9      	str	r1, [r3, #12]
 80061aa:	6099      	str	r1, [r3, #8]
 80061ac:	f040 0101 	orr.w	r1, r0, #1
 80061b0:	6059      	str	r1, [r3, #4]
 80061b2:	5018      	str	r0, [r3, r0]
 80061b4:	2a00      	cmp	r2, #0
 80061b6:	d1d3      	bne.n	8006160 <_free_r+0x60>
 80061b8:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
 80061bc:	d21a      	bcs.n	80061f4 <_free_r+0xf4>
 80061be:	08c0      	lsrs	r0, r0, #3
 80061c0:	1081      	asrs	r1, r0, #2
 80061c2:	2201      	movs	r2, #1
 80061c4:	408a      	lsls	r2, r1
 80061c6:	6869      	ldr	r1, [r5, #4]
 80061c8:	3001      	adds	r0, #1
 80061ca:	430a      	orrs	r2, r1
 80061cc:	606a      	str	r2, [r5, #4]
 80061ce:	eb05 02c0 	add.w	r2, r5, r0, lsl #3
 80061d2:	f855 1030 	ldr.w	r1, [r5, r0, lsl #3]
 80061d6:	6099      	str	r1, [r3, #8]
 80061d8:	3a08      	subs	r2, #8
 80061da:	60da      	str	r2, [r3, #12]
 80061dc:	f845 3030 	str.w	r3, [r5, r0, lsl #3]
 80061e0:	60cb      	str	r3, [r1, #12]
 80061e2:	e7bd      	b.n	8006160 <_free_r+0x60>
 80061e4:	2200      	movs	r2, #0
 80061e6:	e7d2      	b.n	800618e <_free_r+0x8e>
 80061e8:	2201      	movs	r2, #1
 80061ea:	e7d0      	b.n	800618e <_free_r+0x8e>
 80061ec:	68fe      	ldr	r6, [r7, #12]
 80061ee:	60ce      	str	r6, [r1, #12]
 80061f0:	60b1      	str	r1, [r6, #8]
 80061f2:	e7db      	b.n	80061ac <_free_r+0xac>
 80061f4:	0a42      	lsrs	r2, r0, #9
 80061f6:	2a04      	cmp	r2, #4
 80061f8:	d813      	bhi.n	8006222 <_free_r+0x122>
 80061fa:	0982      	lsrs	r2, r0, #6
 80061fc:	3238      	adds	r2, #56	; 0x38
 80061fe:	1c51      	adds	r1, r2, #1
 8006200:	eb05 06c2 	add.w	r6, r5, r2, lsl #3
 8006204:	f855 1031 	ldr.w	r1, [r5, r1, lsl #3]
 8006208:	428e      	cmp	r6, r1
 800620a:	d124      	bne.n	8006256 <_free_r+0x156>
 800620c:	2001      	movs	r0, #1
 800620e:	1092      	asrs	r2, r2, #2
 8006210:	fa00 f202 	lsl.w	r2, r0, r2
 8006214:	6868      	ldr	r0, [r5, #4]
 8006216:	4302      	orrs	r2, r0
 8006218:	606a      	str	r2, [r5, #4]
 800621a:	60de      	str	r6, [r3, #12]
 800621c:	6099      	str	r1, [r3, #8]
 800621e:	60b3      	str	r3, [r6, #8]
 8006220:	e7de      	b.n	80061e0 <_free_r+0xe0>
 8006222:	2a14      	cmp	r2, #20
 8006224:	d801      	bhi.n	800622a <_free_r+0x12a>
 8006226:	325b      	adds	r2, #91	; 0x5b
 8006228:	e7e9      	b.n	80061fe <_free_r+0xfe>
 800622a:	2a54      	cmp	r2, #84	; 0x54
 800622c:	d802      	bhi.n	8006234 <_free_r+0x134>
 800622e:	0b02      	lsrs	r2, r0, #12
 8006230:	326e      	adds	r2, #110	; 0x6e
 8006232:	e7e4      	b.n	80061fe <_free_r+0xfe>
 8006234:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
 8006238:	d802      	bhi.n	8006240 <_free_r+0x140>
 800623a:	0bc2      	lsrs	r2, r0, #15
 800623c:	3277      	adds	r2, #119	; 0x77
 800623e:	e7de      	b.n	80061fe <_free_r+0xfe>
 8006240:	f240 5154 	movw	r1, #1364	; 0x554
 8006244:	428a      	cmp	r2, r1
 8006246:	bf9a      	itte	ls
 8006248:	0c82      	lsrls	r2, r0, #18
 800624a:	327c      	addls	r2, #124	; 0x7c
 800624c:	227e      	movhi	r2, #126	; 0x7e
 800624e:	e7d6      	b.n	80061fe <_free_r+0xfe>
 8006250:	6889      	ldr	r1, [r1, #8]
 8006252:	428e      	cmp	r6, r1
 8006254:	d004      	beq.n	8006260 <_free_r+0x160>
 8006256:	684a      	ldr	r2, [r1, #4]
 8006258:	f022 0203 	bic.w	r2, r2, #3
 800625c:	4290      	cmp	r0, r2
 800625e:	d3f7      	bcc.n	8006250 <_free_r+0x150>
 8006260:	68ce      	ldr	r6, [r1, #12]
 8006262:	e7da      	b.n	800621a <_free_r+0x11a>
 8006264:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006268:	20000104 	.word	0x20000104
 800626c:	20000510 	.word	0x20000510
 8006270:	200026f4 	.word	0x200026f4
 8006274:	2000010c 	.word	0x2000010c

08006278 <__sfvwrite_r>:
 8006278:	6893      	ldr	r3, [r2, #8]
 800627a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800627e:	4607      	mov	r7, r0
 8006280:	460c      	mov	r4, r1
 8006282:	4690      	mov	r8, r2
 8006284:	b91b      	cbnz	r3, 800628e <__sfvwrite_r+0x16>
 8006286:	2000      	movs	r0, #0
 8006288:	b003      	add	sp, #12
 800628a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800628e:	898b      	ldrh	r3, [r1, #12]
 8006290:	0718      	lsls	r0, r3, #28
 8006292:	d526      	bpl.n	80062e2 <__sfvwrite_r+0x6a>
 8006294:	690b      	ldr	r3, [r1, #16]
 8006296:	b323      	cbz	r3, 80062e2 <__sfvwrite_r+0x6a>
 8006298:	89a3      	ldrh	r3, [r4, #12]
 800629a:	f8d8 6000 	ldr.w	r6, [r8]
 800629e:	f013 0902 	ands.w	r9, r3, #2
 80062a2:	d02d      	beq.n	8006300 <__sfvwrite_r+0x88>
 80062a4:	f04f 0a00 	mov.w	sl, #0
 80062a8:	f8df b264 	ldr.w	fp, [pc, #612]	; 8006510 <__sfvwrite_r+0x298>
 80062ac:	46d1      	mov	r9, sl
 80062ae:	f1b9 0f00 	cmp.w	r9, #0
 80062b2:	d01f      	beq.n	80062f4 <__sfvwrite_r+0x7c>
 80062b4:	45d9      	cmp	r9, fp
 80062b6:	464b      	mov	r3, r9
 80062b8:	4652      	mov	r2, sl
 80062ba:	bf28      	it	cs
 80062bc:	465b      	movcs	r3, fp
 80062be:	6a21      	ldr	r1, [r4, #32]
 80062c0:	6aa5      	ldr	r5, [r4, #40]	; 0x28
 80062c2:	4638      	mov	r0, r7
 80062c4:	47a8      	blx	r5
 80062c6:	2800      	cmp	r0, #0
 80062c8:	f340 8089 	ble.w	80063de <__sfvwrite_r+0x166>
 80062cc:	f8d8 3008 	ldr.w	r3, [r8, #8]
 80062d0:	4482      	add	sl, r0
 80062d2:	eba9 0900 	sub.w	r9, r9, r0
 80062d6:	1a18      	subs	r0, r3, r0
 80062d8:	f8c8 0008 	str.w	r0, [r8, #8]
 80062dc:	2800      	cmp	r0, #0
 80062de:	d1e6      	bne.n	80062ae <__sfvwrite_r+0x36>
 80062e0:	e7d1      	b.n	8006286 <__sfvwrite_r+0xe>
 80062e2:	4621      	mov	r1, r4
 80062e4:	4638      	mov	r0, r7
 80062e6:	f7fe fe35 	bl	8004f54 <__swsetup_r>
 80062ea:	2800      	cmp	r0, #0
 80062ec:	d0d4      	beq.n	8006298 <__sfvwrite_r+0x20>
 80062ee:	f04f 30ff 	mov.w	r0, #4294967295
 80062f2:	e7c9      	b.n	8006288 <__sfvwrite_r+0x10>
 80062f4:	f8d6 a000 	ldr.w	sl, [r6]
 80062f8:	f8d6 9004 	ldr.w	r9, [r6, #4]
 80062fc:	3608      	adds	r6, #8
 80062fe:	e7d6      	b.n	80062ae <__sfvwrite_r+0x36>
 8006300:	f013 0301 	ands.w	r3, r3, #1
 8006304:	d043      	beq.n	800638e <__sfvwrite_r+0x116>
 8006306:	4648      	mov	r0, r9
 8006308:	46ca      	mov	sl, r9
 800630a:	46cb      	mov	fp, r9
 800630c:	f1bb 0f00 	cmp.w	fp, #0
 8006310:	f000 80d9 	beq.w	80064c6 <__sfvwrite_r+0x24e>
 8006314:	b950      	cbnz	r0, 800632c <__sfvwrite_r+0xb4>
 8006316:	465a      	mov	r2, fp
 8006318:	210a      	movs	r1, #10
 800631a:	4650      	mov	r0, sl
 800631c:	f7f9 ff68 	bl	80001f0 <memchr>
 8006320:	2800      	cmp	r0, #0
 8006322:	f000 80d5 	beq.w	80064d0 <__sfvwrite_r+0x258>
 8006326:	3001      	adds	r0, #1
 8006328:	eba0 090a 	sub.w	r9, r0, sl
 800632c:	6820      	ldr	r0, [r4, #0]
 800632e:	6921      	ldr	r1, [r4, #16]
 8006330:	6962      	ldr	r2, [r4, #20]
 8006332:	45d9      	cmp	r9, fp
 8006334:	464b      	mov	r3, r9
 8006336:	bf28      	it	cs
 8006338:	465b      	movcs	r3, fp
 800633a:	4288      	cmp	r0, r1
 800633c:	f240 80cb 	bls.w	80064d6 <__sfvwrite_r+0x25e>
 8006340:	68a5      	ldr	r5, [r4, #8]
 8006342:	4415      	add	r5, r2
 8006344:	42ab      	cmp	r3, r5
 8006346:	f340 80c6 	ble.w	80064d6 <__sfvwrite_r+0x25e>
 800634a:	4651      	mov	r1, sl
 800634c:	462a      	mov	r2, r5
 800634e:	f000 fbba 	bl	8006ac6 <memmove>
 8006352:	6823      	ldr	r3, [r4, #0]
 8006354:	442b      	add	r3, r5
 8006356:	6023      	str	r3, [r4, #0]
 8006358:	4621      	mov	r1, r4
 800635a:	4638      	mov	r0, r7
 800635c:	f7ff fd54 	bl	8005e08 <_fflush_r>
 8006360:	2800      	cmp	r0, #0
 8006362:	d13c      	bne.n	80063de <__sfvwrite_r+0x166>
 8006364:	ebb9 0905 	subs.w	r9, r9, r5
 8006368:	f040 80cf 	bne.w	800650a <__sfvwrite_r+0x292>
 800636c:	4621      	mov	r1, r4
 800636e:	4638      	mov	r0, r7
 8006370:	f7ff fd4a 	bl	8005e08 <_fflush_r>
 8006374:	2800      	cmp	r0, #0
 8006376:	d132      	bne.n	80063de <__sfvwrite_r+0x166>
 8006378:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800637c:	44aa      	add	sl, r5
 800637e:	ebab 0b05 	sub.w	fp, fp, r5
 8006382:	1b5d      	subs	r5, r3, r5
 8006384:	f8c8 5008 	str.w	r5, [r8, #8]
 8006388:	2d00      	cmp	r5, #0
 800638a:	d1bf      	bne.n	800630c <__sfvwrite_r+0x94>
 800638c:	e77b      	b.n	8006286 <__sfvwrite_r+0xe>
 800638e:	4699      	mov	r9, r3
 8006390:	469a      	mov	sl, r3
 8006392:	f1ba 0f00 	cmp.w	sl, #0
 8006396:	d027      	beq.n	80063e8 <__sfvwrite_r+0x170>
 8006398:	89a2      	ldrh	r2, [r4, #12]
 800639a:	68a5      	ldr	r5, [r4, #8]
 800639c:	0591      	lsls	r1, r2, #22
 800639e:	d565      	bpl.n	800646c <__sfvwrite_r+0x1f4>
 80063a0:	45aa      	cmp	sl, r5
 80063a2:	d33b      	bcc.n	800641c <__sfvwrite_r+0x1a4>
 80063a4:	f412 6f90 	tst.w	r2, #1152	; 0x480
 80063a8:	d036      	beq.n	8006418 <__sfvwrite_r+0x1a0>
 80063aa:	6921      	ldr	r1, [r4, #16]
 80063ac:	6823      	ldr	r3, [r4, #0]
 80063ae:	1a5b      	subs	r3, r3, r1
 80063b0:	9301      	str	r3, [sp, #4]
 80063b2:	6963      	ldr	r3, [r4, #20]
 80063b4:	2002      	movs	r0, #2
 80063b6:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80063ba:	fb93 fbf0 	sdiv	fp, r3, r0
 80063be:	9b01      	ldr	r3, [sp, #4]
 80063c0:	1c58      	adds	r0, r3, #1
 80063c2:	4450      	add	r0, sl
 80063c4:	4583      	cmp	fp, r0
 80063c6:	bf38      	it	cc
 80063c8:	4683      	movcc	fp, r0
 80063ca:	0553      	lsls	r3, r2, #21
 80063cc:	d53e      	bpl.n	800644c <__sfvwrite_r+0x1d4>
 80063ce:	4659      	mov	r1, fp
 80063d0:	4638      	mov	r0, r7
 80063d2:	f000 f95f 	bl	8006694 <_malloc_r>
 80063d6:	4605      	mov	r5, r0
 80063d8:	b950      	cbnz	r0, 80063f0 <__sfvwrite_r+0x178>
 80063da:	230c      	movs	r3, #12
 80063dc:	603b      	str	r3, [r7, #0]
 80063de:	89a3      	ldrh	r3, [r4, #12]
 80063e0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80063e4:	81a3      	strh	r3, [r4, #12]
 80063e6:	e782      	b.n	80062ee <__sfvwrite_r+0x76>
 80063e8:	e896 0600 	ldmia.w	r6, {r9, sl}
 80063ec:	3608      	adds	r6, #8
 80063ee:	e7d0      	b.n	8006392 <__sfvwrite_r+0x11a>
 80063f0:	9a01      	ldr	r2, [sp, #4]
 80063f2:	6921      	ldr	r1, [r4, #16]
 80063f4:	f000 fb5c 	bl	8006ab0 <memcpy>
 80063f8:	89a2      	ldrh	r2, [r4, #12]
 80063fa:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
 80063fe:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8006402:	81a2      	strh	r2, [r4, #12]
 8006404:	9b01      	ldr	r3, [sp, #4]
 8006406:	6125      	str	r5, [r4, #16]
 8006408:	441d      	add	r5, r3
 800640a:	ebab 0303 	sub.w	r3, fp, r3
 800640e:	6025      	str	r5, [r4, #0]
 8006410:	f8c4 b014 	str.w	fp, [r4, #20]
 8006414:	4655      	mov	r5, sl
 8006416:	60a3      	str	r3, [r4, #8]
 8006418:	45aa      	cmp	sl, r5
 800641a:	d200      	bcs.n	800641e <__sfvwrite_r+0x1a6>
 800641c:	4655      	mov	r5, sl
 800641e:	462a      	mov	r2, r5
 8006420:	4649      	mov	r1, r9
 8006422:	6820      	ldr	r0, [r4, #0]
 8006424:	f000 fb4f 	bl	8006ac6 <memmove>
 8006428:	68a3      	ldr	r3, [r4, #8]
 800642a:	1b5b      	subs	r3, r3, r5
 800642c:	60a3      	str	r3, [r4, #8]
 800642e:	6823      	ldr	r3, [r4, #0]
 8006430:	441d      	add	r5, r3
 8006432:	6025      	str	r5, [r4, #0]
 8006434:	4655      	mov	r5, sl
 8006436:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800643a:	44a9      	add	r9, r5
 800643c:	ebaa 0a05 	sub.w	sl, sl, r5
 8006440:	1b5d      	subs	r5, r3, r5
 8006442:	f8c8 5008 	str.w	r5, [r8, #8]
 8006446:	2d00      	cmp	r5, #0
 8006448:	d1a3      	bne.n	8006392 <__sfvwrite_r+0x11a>
 800644a:	e71c      	b.n	8006286 <__sfvwrite_r+0xe>
 800644c:	465a      	mov	r2, fp
 800644e:	4638      	mov	r0, r7
 8006450:	f000 fe38 	bl	80070c4 <_realloc_r>
 8006454:	4605      	mov	r5, r0
 8006456:	2800      	cmp	r0, #0
 8006458:	d1d4      	bne.n	8006404 <__sfvwrite_r+0x18c>
 800645a:	6921      	ldr	r1, [r4, #16]
 800645c:	4638      	mov	r0, r7
 800645e:	f7ff fe4f 	bl	8006100 <_free_r>
 8006462:	89a3      	ldrh	r3, [r4, #12]
 8006464:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8006468:	81a3      	strh	r3, [r4, #12]
 800646a:	e7b6      	b.n	80063da <__sfvwrite_r+0x162>
 800646c:	6820      	ldr	r0, [r4, #0]
 800646e:	6923      	ldr	r3, [r4, #16]
 8006470:	4298      	cmp	r0, r3
 8006472:	d802      	bhi.n	800647a <__sfvwrite_r+0x202>
 8006474:	6962      	ldr	r2, [r4, #20]
 8006476:	4592      	cmp	sl, r2
 8006478:	d215      	bcs.n	80064a6 <__sfvwrite_r+0x22e>
 800647a:	4555      	cmp	r5, sl
 800647c:	bf28      	it	cs
 800647e:	4655      	movcs	r5, sl
 8006480:	462a      	mov	r2, r5
 8006482:	4649      	mov	r1, r9
 8006484:	f000 fb1f 	bl	8006ac6 <memmove>
 8006488:	68a3      	ldr	r3, [r4, #8]
 800648a:	6822      	ldr	r2, [r4, #0]
 800648c:	1b5b      	subs	r3, r3, r5
 800648e:	442a      	add	r2, r5
 8006490:	60a3      	str	r3, [r4, #8]
 8006492:	6022      	str	r2, [r4, #0]
 8006494:	2b00      	cmp	r3, #0
 8006496:	d1ce      	bne.n	8006436 <__sfvwrite_r+0x1be>
 8006498:	4621      	mov	r1, r4
 800649a:	4638      	mov	r0, r7
 800649c:	f7ff fcb4 	bl	8005e08 <_fflush_r>
 80064a0:	2800      	cmp	r0, #0
 80064a2:	d0c8      	beq.n	8006436 <__sfvwrite_r+0x1be>
 80064a4:	e79b      	b.n	80063de <__sfvwrite_r+0x166>
 80064a6:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 80064aa:	4553      	cmp	r3, sl
 80064ac:	bf28      	it	cs
 80064ae:	4653      	movcs	r3, sl
 80064b0:	6aa5      	ldr	r5, [r4, #40]	; 0x28
 80064b2:	fb93 f3f2 	sdiv	r3, r3, r2
 80064b6:	6a21      	ldr	r1, [r4, #32]
 80064b8:	4353      	muls	r3, r2
 80064ba:	4638      	mov	r0, r7
 80064bc:	464a      	mov	r2, r9
 80064be:	47a8      	blx	r5
 80064c0:	1e05      	subs	r5, r0, #0
 80064c2:	dcb8      	bgt.n	8006436 <__sfvwrite_r+0x1be>
 80064c4:	e78b      	b.n	80063de <__sfvwrite_r+0x166>
 80064c6:	e896 0c00 	ldmia.w	r6, {sl, fp}
 80064ca:	2000      	movs	r0, #0
 80064cc:	3608      	adds	r6, #8
 80064ce:	e71d      	b.n	800630c <__sfvwrite_r+0x94>
 80064d0:	f10b 0901 	add.w	r9, fp, #1
 80064d4:	e72a      	b.n	800632c <__sfvwrite_r+0xb4>
 80064d6:	4293      	cmp	r3, r2
 80064d8:	db09      	blt.n	80064ee <__sfvwrite_r+0x276>
 80064da:	6aa5      	ldr	r5, [r4, #40]	; 0x28
 80064dc:	6a21      	ldr	r1, [r4, #32]
 80064de:	4613      	mov	r3, r2
 80064e0:	4638      	mov	r0, r7
 80064e2:	4652      	mov	r2, sl
 80064e4:	47a8      	blx	r5
 80064e6:	1e05      	subs	r5, r0, #0
 80064e8:	f73f af3c 	bgt.w	8006364 <__sfvwrite_r+0xec>
 80064ec:	e777      	b.n	80063de <__sfvwrite_r+0x166>
 80064ee:	461a      	mov	r2, r3
 80064f0:	4651      	mov	r1, sl
 80064f2:	9301      	str	r3, [sp, #4]
 80064f4:	f000 fae7 	bl	8006ac6 <memmove>
 80064f8:	9b01      	ldr	r3, [sp, #4]
 80064fa:	68a2      	ldr	r2, [r4, #8]
 80064fc:	1ad2      	subs	r2, r2, r3
 80064fe:	60a2      	str	r2, [r4, #8]
 8006500:	6822      	ldr	r2, [r4, #0]
 8006502:	441a      	add	r2, r3
 8006504:	6022      	str	r2, [r4, #0]
 8006506:	461d      	mov	r5, r3
 8006508:	e72c      	b.n	8006364 <__sfvwrite_r+0xec>
 800650a:	2001      	movs	r0, #1
 800650c:	e734      	b.n	8006378 <__sfvwrite_r+0x100>
 800650e:	bf00      	nop
 8006510:	7ffffc00 	.word	0x7ffffc00

08006514 <_fwalk>:
 8006514:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006518:	4688      	mov	r8, r1
 800651a:	f100 04d8 	add.w	r4, r0, #216	; 0xd8
 800651e:	2600      	movs	r6, #0
 8006520:	b914      	cbnz	r4, 8006528 <_fwalk+0x14>
 8006522:	4630      	mov	r0, r6
 8006524:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006528:	68a5      	ldr	r5, [r4, #8]
 800652a:	6867      	ldr	r7, [r4, #4]
 800652c:	3f01      	subs	r7, #1
 800652e:	d501      	bpl.n	8006534 <_fwalk+0x20>
 8006530:	6824      	ldr	r4, [r4, #0]
 8006532:	e7f5      	b.n	8006520 <_fwalk+0xc>
 8006534:	89ab      	ldrh	r3, [r5, #12]
 8006536:	2b01      	cmp	r3, #1
 8006538:	d906      	bls.n	8006548 <_fwalk+0x34>
 800653a:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800653e:	3301      	adds	r3, #1
 8006540:	d002      	beq.n	8006548 <_fwalk+0x34>
 8006542:	4628      	mov	r0, r5
 8006544:	47c0      	blx	r8
 8006546:	4306      	orrs	r6, r0
 8006548:	3568      	adds	r5, #104	; 0x68
 800654a:	e7ef      	b.n	800652c <_fwalk+0x18>

0800654c <_fwalk_reent>:
 800654c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006550:	4680      	mov	r8, r0
 8006552:	4689      	mov	r9, r1
 8006554:	f100 04d8 	add.w	r4, r0, #216	; 0xd8
 8006558:	2600      	movs	r6, #0
 800655a:	b914      	cbnz	r4, 8006562 <_fwalk_reent+0x16>
 800655c:	4630      	mov	r0, r6
 800655e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006562:	68a5      	ldr	r5, [r4, #8]
 8006564:	6867      	ldr	r7, [r4, #4]
 8006566:	3f01      	subs	r7, #1
 8006568:	d501      	bpl.n	800656e <_fwalk_reent+0x22>
 800656a:	6824      	ldr	r4, [r4, #0]
 800656c:	e7f5      	b.n	800655a <_fwalk_reent+0xe>
 800656e:	89ab      	ldrh	r3, [r5, #12]
 8006570:	2b01      	cmp	r3, #1
 8006572:	d907      	bls.n	8006584 <_fwalk_reent+0x38>
 8006574:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8006578:	3301      	adds	r3, #1
 800657a:	d003      	beq.n	8006584 <_fwalk_reent+0x38>
 800657c:	4629      	mov	r1, r5
 800657e:	4640      	mov	r0, r8
 8006580:	47c8      	blx	r9
 8006582:	4306      	orrs	r6, r0
 8006584:	3568      	adds	r5, #104	; 0x68
 8006586:	e7ee      	b.n	8006566 <_fwalk_reent+0x1a>

08006588 <_localeconv_r>:
 8006588:	4b04      	ldr	r3, [pc, #16]	; (800659c <_localeconv_r+0x14>)
 800658a:	681b      	ldr	r3, [r3, #0]
 800658c:	6a18      	ldr	r0, [r3, #32]
 800658e:	4b04      	ldr	r3, [pc, #16]	; (80065a0 <_localeconv_r+0x18>)
 8006590:	2800      	cmp	r0, #0
 8006592:	bf08      	it	eq
 8006594:	4618      	moveq	r0, r3
 8006596:	30f0      	adds	r0, #240	; 0xf0
 8006598:	4770      	bx	lr
 800659a:	bf00      	nop
 800659c:	20000010 	.word	0x20000010
 80065a0:	20000514 	.word	0x20000514

080065a4 <__retarget_lock_init_recursive>:
 80065a4:	4770      	bx	lr

080065a6 <__retarget_lock_close_recursive>:
 80065a6:	4770      	bx	lr

080065a8 <__retarget_lock_acquire_recursive>:
 80065a8:	4770      	bx	lr

080065aa <__retarget_lock_release_recursive>:
 80065aa:	4770      	bx	lr

080065ac <__swhatbuf_r>:
 80065ac:	b570      	push	{r4, r5, r6, lr}
 80065ae:	460e      	mov	r6, r1
 80065b0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80065b4:	2900      	cmp	r1, #0
 80065b6:	b090      	sub	sp, #64	; 0x40
 80065b8:	4614      	mov	r4, r2
 80065ba:	461d      	mov	r5, r3
 80065bc:	da09      	bge.n	80065d2 <__swhatbuf_r+0x26>
 80065be:	89b3      	ldrh	r3, [r6, #12]
 80065c0:	2200      	movs	r2, #0
 80065c2:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 80065c6:	602a      	str	r2, [r5, #0]
 80065c8:	d116      	bne.n	80065f8 <__swhatbuf_r+0x4c>
 80065ca:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80065ce:	6023      	str	r3, [r4, #0]
 80065d0:	e015      	b.n	80065fe <__swhatbuf_r+0x52>
 80065d2:	aa01      	add	r2, sp, #4
 80065d4:	f001 f9be 	bl	8007954 <_fstat_r>
 80065d8:	2800      	cmp	r0, #0
 80065da:	dbf0      	blt.n	80065be <__swhatbuf_r+0x12>
 80065dc:	9a02      	ldr	r2, [sp, #8]
 80065de:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80065e2:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80065e6:	425a      	negs	r2, r3
 80065e8:	415a      	adcs	r2, r3
 80065ea:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80065ee:	602a      	str	r2, [r5, #0]
 80065f0:	f44f 6000 	mov.w	r0, #2048	; 0x800
 80065f4:	6023      	str	r3, [r4, #0]
 80065f6:	e002      	b.n	80065fe <__swhatbuf_r+0x52>
 80065f8:	2340      	movs	r3, #64	; 0x40
 80065fa:	6023      	str	r3, [r4, #0]
 80065fc:	4610      	mov	r0, r2
 80065fe:	b010      	add	sp, #64	; 0x40
 8006600:	bd70      	pop	{r4, r5, r6, pc}
	...

08006604 <__smakebuf_r>:
 8006604:	898b      	ldrh	r3, [r1, #12]
 8006606:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006608:	079d      	lsls	r5, r3, #30
 800660a:	4606      	mov	r6, r0
 800660c:	460c      	mov	r4, r1
 800660e:	d507      	bpl.n	8006620 <__smakebuf_r+0x1c>
 8006610:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8006614:	6023      	str	r3, [r4, #0]
 8006616:	6123      	str	r3, [r4, #16]
 8006618:	2301      	movs	r3, #1
 800661a:	6163      	str	r3, [r4, #20]
 800661c:	b002      	add	sp, #8
 800661e:	bd70      	pop	{r4, r5, r6, pc}
 8006620:	ab01      	add	r3, sp, #4
 8006622:	466a      	mov	r2, sp
 8006624:	f7ff ffc2 	bl	80065ac <__swhatbuf_r>
 8006628:	9900      	ldr	r1, [sp, #0]
 800662a:	4605      	mov	r5, r0
 800662c:	4630      	mov	r0, r6
 800662e:	f000 f831 	bl	8006694 <_malloc_r>
 8006632:	b948      	cbnz	r0, 8006648 <__smakebuf_r+0x44>
 8006634:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006638:	059a      	lsls	r2, r3, #22
 800663a:	d4ef      	bmi.n	800661c <__smakebuf_r+0x18>
 800663c:	f023 0303 	bic.w	r3, r3, #3
 8006640:	f043 0302 	orr.w	r3, r3, #2
 8006644:	81a3      	strh	r3, [r4, #12]
 8006646:	e7e3      	b.n	8006610 <__smakebuf_r+0xc>
 8006648:	4b0d      	ldr	r3, [pc, #52]	; (8006680 <__smakebuf_r+0x7c>)
 800664a:	62b3      	str	r3, [r6, #40]	; 0x28
 800664c:	89a3      	ldrh	r3, [r4, #12]
 800664e:	6020      	str	r0, [r4, #0]
 8006650:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006654:	81a3      	strh	r3, [r4, #12]
 8006656:	9b00      	ldr	r3, [sp, #0]
 8006658:	6163      	str	r3, [r4, #20]
 800665a:	9b01      	ldr	r3, [sp, #4]
 800665c:	6120      	str	r0, [r4, #16]
 800665e:	b15b      	cbz	r3, 8006678 <__smakebuf_r+0x74>
 8006660:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8006664:	4630      	mov	r0, r6
 8006666:	f001 f987 	bl	8007978 <_isatty_r>
 800666a:	b128      	cbz	r0, 8006678 <__smakebuf_r+0x74>
 800666c:	89a3      	ldrh	r3, [r4, #12]
 800666e:	f023 0303 	bic.w	r3, r3, #3
 8006672:	f043 0301 	orr.w	r3, r3, #1
 8006676:	81a3      	strh	r3, [r4, #12]
 8006678:	89a3      	ldrh	r3, [r4, #12]
 800667a:	431d      	orrs	r5, r3
 800667c:	81a5      	strh	r5, [r4, #12]
 800667e:	e7cd      	b.n	800661c <__smakebuf_r+0x18>
 8006680:	08005ea5 	.word	0x08005ea5

08006684 <malloc>:
 8006684:	4b02      	ldr	r3, [pc, #8]	; (8006690 <malloc+0xc>)
 8006686:	4601      	mov	r1, r0
 8006688:	6818      	ldr	r0, [r3, #0]
 800668a:	f000 b803 	b.w	8006694 <_malloc_r>
 800668e:	bf00      	nop
 8006690:	20000010 	.word	0x20000010

08006694 <_malloc_r>:
 8006694:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006698:	f101 040b 	add.w	r4, r1, #11
 800669c:	2c16      	cmp	r4, #22
 800669e:	4681      	mov	r9, r0
 80066a0:	d907      	bls.n	80066b2 <_malloc_r+0x1e>
 80066a2:	f034 0407 	bics.w	r4, r4, #7
 80066a6:	d505      	bpl.n	80066b4 <_malloc_r+0x20>
 80066a8:	230c      	movs	r3, #12
 80066aa:	f8c9 3000 	str.w	r3, [r9]
 80066ae:	2600      	movs	r6, #0
 80066b0:	e131      	b.n	8006916 <_malloc_r+0x282>
 80066b2:	2410      	movs	r4, #16
 80066b4:	428c      	cmp	r4, r1
 80066b6:	d3f7      	bcc.n	80066a8 <_malloc_r+0x14>
 80066b8:	4648      	mov	r0, r9
 80066ba:	f000 fa27 	bl	8006b0c <__malloc_lock>
 80066be:	f5b4 7ffc 	cmp.w	r4, #504	; 0x1f8
 80066c2:	4d9c      	ldr	r5, [pc, #624]	; (8006934 <_malloc_r+0x2a0>)
 80066c4:	d236      	bcs.n	8006734 <_malloc_r+0xa0>
 80066c6:	f104 0208 	add.w	r2, r4, #8
 80066ca:	442a      	add	r2, r5
 80066cc:	f1a2 0108 	sub.w	r1, r2, #8
 80066d0:	6856      	ldr	r6, [r2, #4]
 80066d2:	428e      	cmp	r6, r1
 80066d4:	ea4f 03d4 	mov.w	r3, r4, lsr #3
 80066d8:	d102      	bne.n	80066e0 <_malloc_r+0x4c>
 80066da:	68d6      	ldr	r6, [r2, #12]
 80066dc:	42b2      	cmp	r2, r6
 80066de:	d010      	beq.n	8006702 <_malloc_r+0x6e>
 80066e0:	6873      	ldr	r3, [r6, #4]
 80066e2:	68f2      	ldr	r2, [r6, #12]
 80066e4:	68b1      	ldr	r1, [r6, #8]
 80066e6:	f023 0303 	bic.w	r3, r3, #3
 80066ea:	60ca      	str	r2, [r1, #12]
 80066ec:	4433      	add	r3, r6
 80066ee:	6091      	str	r1, [r2, #8]
 80066f0:	685a      	ldr	r2, [r3, #4]
 80066f2:	f042 0201 	orr.w	r2, r2, #1
 80066f6:	605a      	str	r2, [r3, #4]
 80066f8:	4648      	mov	r0, r9
 80066fa:	f000 fa0d 	bl	8006b18 <__malloc_unlock>
 80066fe:	3608      	adds	r6, #8
 8006700:	e109      	b.n	8006916 <_malloc_r+0x282>
 8006702:	3302      	adds	r3, #2
 8006704:	4a8c      	ldr	r2, [pc, #560]	; (8006938 <_malloc_r+0x2a4>)
 8006706:	692e      	ldr	r6, [r5, #16]
 8006708:	4296      	cmp	r6, r2
 800670a:	4611      	mov	r1, r2
 800670c:	d06d      	beq.n	80067ea <_malloc_r+0x156>
 800670e:	6870      	ldr	r0, [r6, #4]
 8006710:	f020 0003 	bic.w	r0, r0, #3
 8006714:	1b07      	subs	r7, r0, r4
 8006716:	2f0f      	cmp	r7, #15
 8006718:	dd47      	ble.n	80067aa <_malloc_r+0x116>
 800671a:	1933      	adds	r3, r6, r4
 800671c:	f044 0401 	orr.w	r4, r4, #1
 8006720:	6074      	str	r4, [r6, #4]
 8006722:	616b      	str	r3, [r5, #20]
 8006724:	612b      	str	r3, [r5, #16]
 8006726:	60da      	str	r2, [r3, #12]
 8006728:	609a      	str	r2, [r3, #8]
 800672a:	f047 0201 	orr.w	r2, r7, #1
 800672e:	605a      	str	r2, [r3, #4]
 8006730:	5037      	str	r7, [r6, r0]
 8006732:	e7e1      	b.n	80066f8 <_malloc_r+0x64>
 8006734:	0a63      	lsrs	r3, r4, #9
 8006736:	d02a      	beq.n	800678e <_malloc_r+0xfa>
 8006738:	2b04      	cmp	r3, #4
 800673a:	d812      	bhi.n	8006762 <_malloc_r+0xce>
 800673c:	09a3      	lsrs	r3, r4, #6
 800673e:	3338      	adds	r3, #56	; 0x38
 8006740:	1c5a      	adds	r2, r3, #1
 8006742:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
 8006746:	f1a2 0008 	sub.w	r0, r2, #8
 800674a:	6856      	ldr	r6, [r2, #4]
 800674c:	4286      	cmp	r6, r0
 800674e:	d006      	beq.n	800675e <_malloc_r+0xca>
 8006750:	6872      	ldr	r2, [r6, #4]
 8006752:	f022 0203 	bic.w	r2, r2, #3
 8006756:	1b11      	subs	r1, r2, r4
 8006758:	290f      	cmp	r1, #15
 800675a:	dd1c      	ble.n	8006796 <_malloc_r+0x102>
 800675c:	3b01      	subs	r3, #1
 800675e:	3301      	adds	r3, #1
 8006760:	e7d0      	b.n	8006704 <_malloc_r+0x70>
 8006762:	2b14      	cmp	r3, #20
 8006764:	d801      	bhi.n	800676a <_malloc_r+0xd6>
 8006766:	335b      	adds	r3, #91	; 0x5b
 8006768:	e7ea      	b.n	8006740 <_malloc_r+0xac>
 800676a:	2b54      	cmp	r3, #84	; 0x54
 800676c:	d802      	bhi.n	8006774 <_malloc_r+0xe0>
 800676e:	0b23      	lsrs	r3, r4, #12
 8006770:	336e      	adds	r3, #110	; 0x6e
 8006772:	e7e5      	b.n	8006740 <_malloc_r+0xac>
 8006774:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
 8006778:	d802      	bhi.n	8006780 <_malloc_r+0xec>
 800677a:	0be3      	lsrs	r3, r4, #15
 800677c:	3377      	adds	r3, #119	; 0x77
 800677e:	e7df      	b.n	8006740 <_malloc_r+0xac>
 8006780:	f240 5254 	movw	r2, #1364	; 0x554
 8006784:	4293      	cmp	r3, r2
 8006786:	d804      	bhi.n	8006792 <_malloc_r+0xfe>
 8006788:	0ca3      	lsrs	r3, r4, #18
 800678a:	337c      	adds	r3, #124	; 0x7c
 800678c:	e7d8      	b.n	8006740 <_malloc_r+0xac>
 800678e:	233f      	movs	r3, #63	; 0x3f
 8006790:	e7d6      	b.n	8006740 <_malloc_r+0xac>
 8006792:	237e      	movs	r3, #126	; 0x7e
 8006794:	e7d4      	b.n	8006740 <_malloc_r+0xac>
 8006796:	2900      	cmp	r1, #0
 8006798:	68f1      	ldr	r1, [r6, #12]
 800679a:	db04      	blt.n	80067a6 <_malloc_r+0x112>
 800679c:	68b3      	ldr	r3, [r6, #8]
 800679e:	60d9      	str	r1, [r3, #12]
 80067a0:	608b      	str	r3, [r1, #8]
 80067a2:	18b3      	adds	r3, r6, r2
 80067a4:	e7a4      	b.n	80066f0 <_malloc_r+0x5c>
 80067a6:	460e      	mov	r6, r1
 80067a8:	e7d0      	b.n	800674c <_malloc_r+0xb8>
 80067aa:	2f00      	cmp	r7, #0
 80067ac:	616a      	str	r2, [r5, #20]
 80067ae:	612a      	str	r2, [r5, #16]
 80067b0:	db05      	blt.n	80067be <_malloc_r+0x12a>
 80067b2:	4430      	add	r0, r6
 80067b4:	6843      	ldr	r3, [r0, #4]
 80067b6:	f043 0301 	orr.w	r3, r3, #1
 80067ba:	6043      	str	r3, [r0, #4]
 80067bc:	e79c      	b.n	80066f8 <_malloc_r+0x64>
 80067be:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
 80067c2:	d244      	bcs.n	800684e <_malloc_r+0x1ba>
 80067c4:	08c0      	lsrs	r0, r0, #3
 80067c6:	1087      	asrs	r7, r0, #2
 80067c8:	2201      	movs	r2, #1
 80067ca:	fa02 f707 	lsl.w	r7, r2, r7
 80067ce:	686a      	ldr	r2, [r5, #4]
 80067d0:	3001      	adds	r0, #1
 80067d2:	433a      	orrs	r2, r7
 80067d4:	606a      	str	r2, [r5, #4]
 80067d6:	eb05 02c0 	add.w	r2, r5, r0, lsl #3
 80067da:	f855 7030 	ldr.w	r7, [r5, r0, lsl #3]
 80067de:	60b7      	str	r7, [r6, #8]
 80067e0:	3a08      	subs	r2, #8
 80067e2:	60f2      	str	r2, [r6, #12]
 80067e4:	f845 6030 	str.w	r6, [r5, r0, lsl #3]
 80067e8:	60fe      	str	r6, [r7, #12]
 80067ea:	2001      	movs	r0, #1
 80067ec:	109a      	asrs	r2, r3, #2
 80067ee:	fa00 f202 	lsl.w	r2, r0, r2
 80067f2:	6868      	ldr	r0, [r5, #4]
 80067f4:	4282      	cmp	r2, r0
 80067f6:	f200 80a1 	bhi.w	800693c <_malloc_r+0x2a8>
 80067fa:	4202      	tst	r2, r0
 80067fc:	d106      	bne.n	800680c <_malloc_r+0x178>
 80067fe:	f023 0303 	bic.w	r3, r3, #3
 8006802:	0052      	lsls	r2, r2, #1
 8006804:	4202      	tst	r2, r0
 8006806:	f103 0304 	add.w	r3, r3, #4
 800680a:	d0fa      	beq.n	8006802 <_malloc_r+0x16e>
 800680c:	eb05 0cc3 	add.w	ip, r5, r3, lsl #3
 8006810:	46e0      	mov	r8, ip
 8006812:	469e      	mov	lr, r3
 8006814:	f8d8 600c 	ldr.w	r6, [r8, #12]
 8006818:	4546      	cmp	r6, r8
 800681a:	d153      	bne.n	80068c4 <_malloc_r+0x230>
 800681c:	f10e 0e01 	add.w	lr, lr, #1
 8006820:	f01e 0f03 	tst.w	lr, #3
 8006824:	f108 0808 	add.w	r8, r8, #8
 8006828:	d1f4      	bne.n	8006814 <_malloc_r+0x180>
 800682a:	0798      	lsls	r0, r3, #30
 800682c:	d179      	bne.n	8006922 <_malloc_r+0x28e>
 800682e:	686b      	ldr	r3, [r5, #4]
 8006830:	ea23 0302 	bic.w	r3, r3, r2
 8006834:	606b      	str	r3, [r5, #4]
 8006836:	6868      	ldr	r0, [r5, #4]
 8006838:	0052      	lsls	r2, r2, #1
 800683a:	4282      	cmp	r2, r0
 800683c:	d87e      	bhi.n	800693c <_malloc_r+0x2a8>
 800683e:	2a00      	cmp	r2, #0
 8006840:	d07c      	beq.n	800693c <_malloc_r+0x2a8>
 8006842:	4673      	mov	r3, lr
 8006844:	4202      	tst	r2, r0
 8006846:	d1e1      	bne.n	800680c <_malloc_r+0x178>
 8006848:	3304      	adds	r3, #4
 800684a:	0052      	lsls	r2, r2, #1
 800684c:	e7fa      	b.n	8006844 <_malloc_r+0x1b0>
 800684e:	0a42      	lsrs	r2, r0, #9
 8006850:	2a04      	cmp	r2, #4
 8006852:	d815      	bhi.n	8006880 <_malloc_r+0x1ec>
 8006854:	0982      	lsrs	r2, r0, #6
 8006856:	3238      	adds	r2, #56	; 0x38
 8006858:	1c57      	adds	r7, r2, #1
 800685a:	eb05 0ec2 	add.w	lr, r5, r2, lsl #3
 800685e:	f855 7037 	ldr.w	r7, [r5, r7, lsl #3]
 8006862:	45be      	cmp	lr, r7
 8006864:	d126      	bne.n	80068b4 <_malloc_r+0x220>
 8006866:	2001      	movs	r0, #1
 8006868:	1092      	asrs	r2, r2, #2
 800686a:	fa00 f202 	lsl.w	r2, r0, r2
 800686e:	6868      	ldr	r0, [r5, #4]
 8006870:	4310      	orrs	r0, r2
 8006872:	6068      	str	r0, [r5, #4]
 8006874:	f8c6 e00c 	str.w	lr, [r6, #12]
 8006878:	60b7      	str	r7, [r6, #8]
 800687a:	f8ce 6008 	str.w	r6, [lr, #8]
 800687e:	e7b3      	b.n	80067e8 <_malloc_r+0x154>
 8006880:	2a14      	cmp	r2, #20
 8006882:	d801      	bhi.n	8006888 <_malloc_r+0x1f4>
 8006884:	325b      	adds	r2, #91	; 0x5b
 8006886:	e7e7      	b.n	8006858 <_malloc_r+0x1c4>
 8006888:	2a54      	cmp	r2, #84	; 0x54
 800688a:	d802      	bhi.n	8006892 <_malloc_r+0x1fe>
 800688c:	0b02      	lsrs	r2, r0, #12
 800688e:	326e      	adds	r2, #110	; 0x6e
 8006890:	e7e2      	b.n	8006858 <_malloc_r+0x1c4>
 8006892:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
 8006896:	d802      	bhi.n	800689e <_malloc_r+0x20a>
 8006898:	0bc2      	lsrs	r2, r0, #15
 800689a:	3277      	adds	r2, #119	; 0x77
 800689c:	e7dc      	b.n	8006858 <_malloc_r+0x1c4>
 800689e:	f240 5754 	movw	r7, #1364	; 0x554
 80068a2:	42ba      	cmp	r2, r7
 80068a4:	bf9a      	itte	ls
 80068a6:	0c82      	lsrls	r2, r0, #18
 80068a8:	327c      	addls	r2, #124	; 0x7c
 80068aa:	227e      	movhi	r2, #126	; 0x7e
 80068ac:	e7d4      	b.n	8006858 <_malloc_r+0x1c4>
 80068ae:	68bf      	ldr	r7, [r7, #8]
 80068b0:	45be      	cmp	lr, r7
 80068b2:	d004      	beq.n	80068be <_malloc_r+0x22a>
 80068b4:	687a      	ldr	r2, [r7, #4]
 80068b6:	f022 0203 	bic.w	r2, r2, #3
 80068ba:	4290      	cmp	r0, r2
 80068bc:	d3f7      	bcc.n	80068ae <_malloc_r+0x21a>
 80068be:	f8d7 e00c 	ldr.w	lr, [r7, #12]
 80068c2:	e7d7      	b.n	8006874 <_malloc_r+0x1e0>
 80068c4:	6870      	ldr	r0, [r6, #4]
 80068c6:	68f7      	ldr	r7, [r6, #12]
 80068c8:	f020 0003 	bic.w	r0, r0, #3
 80068cc:	eba0 0a04 	sub.w	sl, r0, r4
 80068d0:	f1ba 0f0f 	cmp.w	sl, #15
 80068d4:	dd10      	ble.n	80068f8 <_malloc_r+0x264>
 80068d6:	68b2      	ldr	r2, [r6, #8]
 80068d8:	1933      	adds	r3, r6, r4
 80068da:	f044 0401 	orr.w	r4, r4, #1
 80068de:	6074      	str	r4, [r6, #4]
 80068e0:	60d7      	str	r7, [r2, #12]
 80068e2:	60ba      	str	r2, [r7, #8]
 80068e4:	f04a 0201 	orr.w	r2, sl, #1
 80068e8:	616b      	str	r3, [r5, #20]
 80068ea:	612b      	str	r3, [r5, #16]
 80068ec:	60d9      	str	r1, [r3, #12]
 80068ee:	6099      	str	r1, [r3, #8]
 80068f0:	605a      	str	r2, [r3, #4]
 80068f2:	f846 a000 	str.w	sl, [r6, r0]
 80068f6:	e6ff      	b.n	80066f8 <_malloc_r+0x64>
 80068f8:	f1ba 0f00 	cmp.w	sl, #0
 80068fc:	db0f      	blt.n	800691e <_malloc_r+0x28a>
 80068fe:	4430      	add	r0, r6
 8006900:	6843      	ldr	r3, [r0, #4]
 8006902:	f043 0301 	orr.w	r3, r3, #1
 8006906:	6043      	str	r3, [r0, #4]
 8006908:	f856 3f08 	ldr.w	r3, [r6, #8]!
 800690c:	4648      	mov	r0, r9
 800690e:	60df      	str	r7, [r3, #12]
 8006910:	60bb      	str	r3, [r7, #8]
 8006912:	f000 f901 	bl	8006b18 <__malloc_unlock>
 8006916:	4630      	mov	r0, r6
 8006918:	b003      	add	sp, #12
 800691a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800691e:	463e      	mov	r6, r7
 8006920:	e77a      	b.n	8006818 <_malloc_r+0x184>
 8006922:	f85c 0908 	ldr.w	r0, [ip], #-8
 8006926:	4584      	cmp	ip, r0
 8006928:	f103 33ff 	add.w	r3, r3, #4294967295
 800692c:	f43f af7d 	beq.w	800682a <_malloc_r+0x196>
 8006930:	e781      	b.n	8006836 <_malloc_r+0x1a2>
 8006932:	bf00      	nop
 8006934:	20000104 	.word	0x20000104
 8006938:	2000010c 	.word	0x2000010c
 800693c:	f8d5 b008 	ldr.w	fp, [r5, #8]
 8006940:	f8db 6004 	ldr.w	r6, [fp, #4]
 8006944:	f026 0603 	bic.w	r6, r6, #3
 8006948:	42b4      	cmp	r4, r6
 800694a:	d803      	bhi.n	8006954 <_malloc_r+0x2c0>
 800694c:	1b33      	subs	r3, r6, r4
 800694e:	2b0f      	cmp	r3, #15
 8006950:	f300 8096 	bgt.w	8006a80 <_malloc_r+0x3ec>
 8006954:	4a4f      	ldr	r2, [pc, #316]	; (8006a94 <_malloc_r+0x400>)
 8006956:	6817      	ldr	r7, [r2, #0]
 8006958:	4a4f      	ldr	r2, [pc, #316]	; (8006a98 <_malloc_r+0x404>)
 800695a:	6811      	ldr	r1, [r2, #0]
 800695c:	3710      	adds	r7, #16
 800695e:	3101      	adds	r1, #1
 8006960:	eb0b 0306 	add.w	r3, fp, r6
 8006964:	4427      	add	r7, r4
 8006966:	d005      	beq.n	8006974 <_malloc_r+0x2e0>
 8006968:	494c      	ldr	r1, [pc, #304]	; (8006a9c <_malloc_r+0x408>)
 800696a:	3901      	subs	r1, #1
 800696c:	440f      	add	r7, r1
 800696e:	3101      	adds	r1, #1
 8006970:	4249      	negs	r1, r1
 8006972:	400f      	ands	r7, r1
 8006974:	4639      	mov	r1, r7
 8006976:	4648      	mov	r0, r9
 8006978:	9201      	str	r2, [sp, #4]
 800697a:	9300      	str	r3, [sp, #0]
 800697c:	f000 fdc2 	bl	8007504 <_sbrk_r>
 8006980:	f1b0 3fff 	cmp.w	r0, #4294967295
 8006984:	4680      	mov	r8, r0
 8006986:	d056      	beq.n	8006a36 <_malloc_r+0x3a2>
 8006988:	9b00      	ldr	r3, [sp, #0]
 800698a:	9a01      	ldr	r2, [sp, #4]
 800698c:	4283      	cmp	r3, r0
 800698e:	d901      	bls.n	8006994 <_malloc_r+0x300>
 8006990:	45ab      	cmp	fp, r5
 8006992:	d150      	bne.n	8006a36 <_malloc_r+0x3a2>
 8006994:	4842      	ldr	r0, [pc, #264]	; (8006aa0 <_malloc_r+0x40c>)
 8006996:	6801      	ldr	r1, [r0, #0]
 8006998:	4543      	cmp	r3, r8
 800699a:	eb07 0e01 	add.w	lr, r7, r1
 800699e:	f8c0 e000 	str.w	lr, [r0]
 80069a2:	4940      	ldr	r1, [pc, #256]	; (8006aa4 <_malloc_r+0x410>)
 80069a4:	4682      	mov	sl, r0
 80069a6:	d113      	bne.n	80069d0 <_malloc_r+0x33c>
 80069a8:	420b      	tst	r3, r1
 80069aa:	d111      	bne.n	80069d0 <_malloc_r+0x33c>
 80069ac:	68ab      	ldr	r3, [r5, #8]
 80069ae:	443e      	add	r6, r7
 80069b0:	f046 0601 	orr.w	r6, r6, #1
 80069b4:	605e      	str	r6, [r3, #4]
 80069b6:	4a3c      	ldr	r2, [pc, #240]	; (8006aa8 <_malloc_r+0x414>)
 80069b8:	f8da 3000 	ldr.w	r3, [sl]
 80069bc:	6811      	ldr	r1, [r2, #0]
 80069be:	428b      	cmp	r3, r1
 80069c0:	bf88      	it	hi
 80069c2:	6013      	strhi	r3, [r2, #0]
 80069c4:	4a39      	ldr	r2, [pc, #228]	; (8006aac <_malloc_r+0x418>)
 80069c6:	6811      	ldr	r1, [r2, #0]
 80069c8:	428b      	cmp	r3, r1
 80069ca:	bf88      	it	hi
 80069cc:	6013      	strhi	r3, [r2, #0]
 80069ce:	e032      	b.n	8006a36 <_malloc_r+0x3a2>
 80069d0:	6810      	ldr	r0, [r2, #0]
 80069d2:	3001      	adds	r0, #1
 80069d4:	bf1b      	ittet	ne
 80069d6:	eba8 0303 	subne.w	r3, r8, r3
 80069da:	4473      	addne	r3, lr
 80069dc:	f8c2 8000 	streq.w	r8, [r2]
 80069e0:	f8ca 3000 	strne.w	r3, [sl]
 80069e4:	f018 0007 	ands.w	r0, r8, #7
 80069e8:	bf1c      	itt	ne
 80069ea:	f1c0 0008 	rsbne	r0, r0, #8
 80069ee:	4480      	addne	r8, r0
 80069f0:	4b2a      	ldr	r3, [pc, #168]	; (8006a9c <_malloc_r+0x408>)
 80069f2:	4447      	add	r7, r8
 80069f4:	4418      	add	r0, r3
 80069f6:	400f      	ands	r7, r1
 80069f8:	1bc7      	subs	r7, r0, r7
 80069fa:	4639      	mov	r1, r7
 80069fc:	4648      	mov	r0, r9
 80069fe:	f000 fd81 	bl	8007504 <_sbrk_r>
 8006a02:	1c43      	adds	r3, r0, #1
 8006a04:	bf08      	it	eq
 8006a06:	4640      	moveq	r0, r8
 8006a08:	f8da 3000 	ldr.w	r3, [sl]
 8006a0c:	f8c5 8008 	str.w	r8, [r5, #8]
 8006a10:	bf08      	it	eq
 8006a12:	2700      	moveq	r7, #0
 8006a14:	eba0 0008 	sub.w	r0, r0, r8
 8006a18:	443b      	add	r3, r7
 8006a1a:	4407      	add	r7, r0
 8006a1c:	f047 0701 	orr.w	r7, r7, #1
 8006a20:	45ab      	cmp	fp, r5
 8006a22:	f8ca 3000 	str.w	r3, [sl]
 8006a26:	f8c8 7004 	str.w	r7, [r8, #4]
 8006a2a:	d0c4      	beq.n	80069b6 <_malloc_r+0x322>
 8006a2c:	2e0f      	cmp	r6, #15
 8006a2e:	d810      	bhi.n	8006a52 <_malloc_r+0x3be>
 8006a30:	2301      	movs	r3, #1
 8006a32:	f8c8 3004 	str.w	r3, [r8, #4]
 8006a36:	68ab      	ldr	r3, [r5, #8]
 8006a38:	685a      	ldr	r2, [r3, #4]
 8006a3a:	f022 0203 	bic.w	r2, r2, #3
 8006a3e:	4294      	cmp	r4, r2
 8006a40:	eba2 0304 	sub.w	r3, r2, r4
 8006a44:	d801      	bhi.n	8006a4a <_malloc_r+0x3b6>
 8006a46:	2b0f      	cmp	r3, #15
 8006a48:	dc1a      	bgt.n	8006a80 <_malloc_r+0x3ec>
 8006a4a:	4648      	mov	r0, r9
 8006a4c:	f000 f864 	bl	8006b18 <__malloc_unlock>
 8006a50:	e62d      	b.n	80066ae <_malloc_r+0x1a>
 8006a52:	f8db 3004 	ldr.w	r3, [fp, #4]
 8006a56:	3e0c      	subs	r6, #12
 8006a58:	f026 0607 	bic.w	r6, r6, #7
 8006a5c:	f003 0301 	and.w	r3, r3, #1
 8006a60:	4333      	orrs	r3, r6
 8006a62:	f8cb 3004 	str.w	r3, [fp, #4]
 8006a66:	eb0b 0306 	add.w	r3, fp, r6
 8006a6a:	2205      	movs	r2, #5
 8006a6c:	2e0f      	cmp	r6, #15
 8006a6e:	605a      	str	r2, [r3, #4]
 8006a70:	609a      	str	r2, [r3, #8]
 8006a72:	d9a0      	bls.n	80069b6 <_malloc_r+0x322>
 8006a74:	f10b 0108 	add.w	r1, fp, #8
 8006a78:	4648      	mov	r0, r9
 8006a7a:	f7ff fb41 	bl	8006100 <_free_r>
 8006a7e:	e79a      	b.n	80069b6 <_malloc_r+0x322>
 8006a80:	68ae      	ldr	r6, [r5, #8]
 8006a82:	f044 0201 	orr.w	r2, r4, #1
 8006a86:	4434      	add	r4, r6
 8006a88:	f043 0301 	orr.w	r3, r3, #1
 8006a8c:	6072      	str	r2, [r6, #4]
 8006a8e:	60ac      	str	r4, [r5, #8]
 8006a90:	6063      	str	r3, [r4, #4]
 8006a92:	e631      	b.n	80066f8 <_malloc_r+0x64>
 8006a94:	200026f4 	.word	0x200026f4
 8006a98:	2000050c 	.word	0x2000050c
 8006a9c:	00000080 	.word	0x00000080
 8006aa0:	200026c4 	.word	0x200026c4
 8006aa4:	0000007f 	.word	0x0000007f
 8006aa8:	200026ec 	.word	0x200026ec
 8006aac:	200026f0 	.word	0x200026f0

08006ab0 <memcpy>:
 8006ab0:	b510      	push	{r4, lr}
 8006ab2:	1e43      	subs	r3, r0, #1
 8006ab4:	440a      	add	r2, r1
 8006ab6:	4291      	cmp	r1, r2
 8006ab8:	d100      	bne.n	8006abc <memcpy+0xc>
 8006aba:	bd10      	pop	{r4, pc}
 8006abc:	f811 4b01 	ldrb.w	r4, [r1], #1
 8006ac0:	f803 4f01 	strb.w	r4, [r3, #1]!
 8006ac4:	e7f7      	b.n	8006ab6 <memcpy+0x6>

08006ac6 <memmove>:
 8006ac6:	4288      	cmp	r0, r1
 8006ac8:	b510      	push	{r4, lr}
 8006aca:	eb01 0302 	add.w	r3, r1, r2
 8006ace:	d803      	bhi.n	8006ad8 <memmove+0x12>
 8006ad0:	1e42      	subs	r2, r0, #1
 8006ad2:	4299      	cmp	r1, r3
 8006ad4:	d10c      	bne.n	8006af0 <memmove+0x2a>
 8006ad6:	bd10      	pop	{r4, pc}
 8006ad8:	4298      	cmp	r0, r3
 8006ada:	d2f9      	bcs.n	8006ad0 <memmove+0xa>
 8006adc:	1881      	adds	r1, r0, r2
 8006ade:	1ad2      	subs	r2, r2, r3
 8006ae0:	42d3      	cmn	r3, r2
 8006ae2:	d100      	bne.n	8006ae6 <memmove+0x20>
 8006ae4:	bd10      	pop	{r4, pc}
 8006ae6:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8006aea:	f801 4d01 	strb.w	r4, [r1, #-1]!
 8006aee:	e7f7      	b.n	8006ae0 <memmove+0x1a>
 8006af0:	f811 4b01 	ldrb.w	r4, [r1], #1
 8006af4:	f802 4f01 	strb.w	r4, [r2, #1]!
 8006af8:	e7eb      	b.n	8006ad2 <memmove+0xc>

08006afa <memset>:
 8006afa:	4402      	add	r2, r0
 8006afc:	4603      	mov	r3, r0
 8006afe:	4293      	cmp	r3, r2
 8006b00:	d100      	bne.n	8006b04 <memset+0xa>
 8006b02:	4770      	bx	lr
 8006b04:	f803 1b01 	strb.w	r1, [r3], #1
 8006b08:	e7f9      	b.n	8006afe <memset+0x4>
	...

08006b0c <__malloc_lock>:
 8006b0c:	4801      	ldr	r0, [pc, #4]	; (8006b14 <__malloc_lock+0x8>)
 8006b0e:	f7ff bd4b 	b.w	80065a8 <__retarget_lock_acquire_recursive>
 8006b12:	bf00      	nop
 8006b14:	20002700 	.word	0x20002700

08006b18 <__malloc_unlock>:
 8006b18:	4801      	ldr	r0, [pc, #4]	; (8006b20 <__malloc_unlock+0x8>)
 8006b1a:	f7ff bd46 	b.w	80065aa <__retarget_lock_release_recursive>
 8006b1e:	bf00      	nop
 8006b20:	20002700 	.word	0x20002700

08006b24 <_Balloc>:
 8006b24:	b570      	push	{r4, r5, r6, lr}
 8006b26:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8006b28:	4604      	mov	r4, r0
 8006b2a:	460e      	mov	r6, r1
 8006b2c:	b93d      	cbnz	r5, 8006b3e <_Balloc+0x1a>
 8006b2e:	2010      	movs	r0, #16
 8006b30:	f7ff fda8 	bl	8006684 <malloc>
 8006b34:	6260      	str	r0, [r4, #36]	; 0x24
 8006b36:	6045      	str	r5, [r0, #4]
 8006b38:	6085      	str	r5, [r0, #8]
 8006b3a:	6005      	str	r5, [r0, #0]
 8006b3c:	60c5      	str	r5, [r0, #12]
 8006b3e:	6a65      	ldr	r5, [r4, #36]	; 0x24
 8006b40:	68eb      	ldr	r3, [r5, #12]
 8006b42:	b183      	cbz	r3, 8006b66 <_Balloc+0x42>
 8006b44:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006b46:	68db      	ldr	r3, [r3, #12]
 8006b48:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 8006b4c:	b9b8      	cbnz	r0, 8006b7e <_Balloc+0x5a>
 8006b4e:	2101      	movs	r1, #1
 8006b50:	fa01 f506 	lsl.w	r5, r1, r6
 8006b54:	1d6a      	adds	r2, r5, #5
 8006b56:	0092      	lsls	r2, r2, #2
 8006b58:	4620      	mov	r0, r4
 8006b5a:	f000 fde7 	bl	800772c <_calloc_r>
 8006b5e:	b160      	cbz	r0, 8006b7a <_Balloc+0x56>
 8006b60:	6046      	str	r6, [r0, #4]
 8006b62:	6085      	str	r5, [r0, #8]
 8006b64:	e00e      	b.n	8006b84 <_Balloc+0x60>
 8006b66:	2221      	movs	r2, #33	; 0x21
 8006b68:	2104      	movs	r1, #4
 8006b6a:	4620      	mov	r0, r4
 8006b6c:	f000 fdde 	bl	800772c <_calloc_r>
 8006b70:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006b72:	60e8      	str	r0, [r5, #12]
 8006b74:	68db      	ldr	r3, [r3, #12]
 8006b76:	2b00      	cmp	r3, #0
 8006b78:	d1e4      	bne.n	8006b44 <_Balloc+0x20>
 8006b7a:	2000      	movs	r0, #0
 8006b7c:	bd70      	pop	{r4, r5, r6, pc}
 8006b7e:	6802      	ldr	r2, [r0, #0]
 8006b80:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
 8006b84:	2300      	movs	r3, #0
 8006b86:	6103      	str	r3, [r0, #16]
 8006b88:	60c3      	str	r3, [r0, #12]
 8006b8a:	bd70      	pop	{r4, r5, r6, pc}

08006b8c <_Bfree>:
 8006b8c:	b570      	push	{r4, r5, r6, lr}
 8006b8e:	6a44      	ldr	r4, [r0, #36]	; 0x24
 8006b90:	4606      	mov	r6, r0
 8006b92:	460d      	mov	r5, r1
 8006b94:	b93c      	cbnz	r4, 8006ba6 <_Bfree+0x1a>
 8006b96:	2010      	movs	r0, #16
 8006b98:	f7ff fd74 	bl	8006684 <malloc>
 8006b9c:	6270      	str	r0, [r6, #36]	; 0x24
 8006b9e:	6044      	str	r4, [r0, #4]
 8006ba0:	6084      	str	r4, [r0, #8]
 8006ba2:	6004      	str	r4, [r0, #0]
 8006ba4:	60c4      	str	r4, [r0, #12]
 8006ba6:	b13d      	cbz	r5, 8006bb8 <_Bfree+0x2c>
 8006ba8:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8006baa:	686a      	ldr	r2, [r5, #4]
 8006bac:	68db      	ldr	r3, [r3, #12]
 8006bae:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8006bb2:	6029      	str	r1, [r5, #0]
 8006bb4:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
 8006bb8:	bd70      	pop	{r4, r5, r6, pc}

08006bba <__multadd>:
 8006bba:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006bbe:	690d      	ldr	r5, [r1, #16]
 8006bc0:	461f      	mov	r7, r3
 8006bc2:	4606      	mov	r6, r0
 8006bc4:	460c      	mov	r4, r1
 8006bc6:	f101 0e14 	add.w	lr, r1, #20
 8006bca:	2300      	movs	r3, #0
 8006bcc:	f8de 0000 	ldr.w	r0, [lr]
 8006bd0:	b281      	uxth	r1, r0
 8006bd2:	fb02 7101 	mla	r1, r2, r1, r7
 8006bd6:	0c0f      	lsrs	r7, r1, #16
 8006bd8:	0c00      	lsrs	r0, r0, #16
 8006bda:	fb02 7000 	mla	r0, r2, r0, r7
 8006bde:	b289      	uxth	r1, r1
 8006be0:	3301      	adds	r3, #1
 8006be2:	eb01 4100 	add.w	r1, r1, r0, lsl #16
 8006be6:	429d      	cmp	r5, r3
 8006be8:	ea4f 4710 	mov.w	r7, r0, lsr #16
 8006bec:	f84e 1b04 	str.w	r1, [lr], #4
 8006bf0:	dcec      	bgt.n	8006bcc <__multadd+0x12>
 8006bf2:	b1d7      	cbz	r7, 8006c2a <__multadd+0x70>
 8006bf4:	68a3      	ldr	r3, [r4, #8]
 8006bf6:	429d      	cmp	r5, r3
 8006bf8:	db12      	blt.n	8006c20 <__multadd+0x66>
 8006bfa:	6861      	ldr	r1, [r4, #4]
 8006bfc:	4630      	mov	r0, r6
 8006bfe:	3101      	adds	r1, #1
 8006c00:	f7ff ff90 	bl	8006b24 <_Balloc>
 8006c04:	6922      	ldr	r2, [r4, #16]
 8006c06:	3202      	adds	r2, #2
 8006c08:	f104 010c 	add.w	r1, r4, #12
 8006c0c:	4680      	mov	r8, r0
 8006c0e:	0092      	lsls	r2, r2, #2
 8006c10:	300c      	adds	r0, #12
 8006c12:	f7ff ff4d 	bl	8006ab0 <memcpy>
 8006c16:	4621      	mov	r1, r4
 8006c18:	4630      	mov	r0, r6
 8006c1a:	f7ff ffb7 	bl	8006b8c <_Bfree>
 8006c1e:	4644      	mov	r4, r8
 8006c20:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8006c24:	3501      	adds	r5, #1
 8006c26:	615f      	str	r7, [r3, #20]
 8006c28:	6125      	str	r5, [r4, #16]
 8006c2a:	4620      	mov	r0, r4
 8006c2c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08006c30 <__hi0bits>:
 8006c30:	0c02      	lsrs	r2, r0, #16
 8006c32:	0412      	lsls	r2, r2, #16
 8006c34:	4603      	mov	r3, r0
 8006c36:	b9b2      	cbnz	r2, 8006c66 <__hi0bits+0x36>
 8006c38:	0403      	lsls	r3, r0, #16
 8006c3a:	2010      	movs	r0, #16
 8006c3c:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8006c40:	bf04      	itt	eq
 8006c42:	021b      	lsleq	r3, r3, #8
 8006c44:	3008      	addeq	r0, #8
 8006c46:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8006c4a:	bf04      	itt	eq
 8006c4c:	011b      	lsleq	r3, r3, #4
 8006c4e:	3004      	addeq	r0, #4
 8006c50:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8006c54:	bf04      	itt	eq
 8006c56:	009b      	lsleq	r3, r3, #2
 8006c58:	3002      	addeq	r0, #2
 8006c5a:	2b00      	cmp	r3, #0
 8006c5c:	db06      	blt.n	8006c6c <__hi0bits+0x3c>
 8006c5e:	005b      	lsls	r3, r3, #1
 8006c60:	d503      	bpl.n	8006c6a <__hi0bits+0x3a>
 8006c62:	3001      	adds	r0, #1
 8006c64:	4770      	bx	lr
 8006c66:	2000      	movs	r0, #0
 8006c68:	e7e8      	b.n	8006c3c <__hi0bits+0xc>
 8006c6a:	2020      	movs	r0, #32
 8006c6c:	4770      	bx	lr

08006c6e <__lo0bits>:
 8006c6e:	6803      	ldr	r3, [r0, #0]
 8006c70:	f013 0207 	ands.w	r2, r3, #7
 8006c74:	4601      	mov	r1, r0
 8006c76:	d00b      	beq.n	8006c90 <__lo0bits+0x22>
 8006c78:	07da      	lsls	r2, r3, #31
 8006c7a:	d423      	bmi.n	8006cc4 <__lo0bits+0x56>
 8006c7c:	0798      	lsls	r0, r3, #30
 8006c7e:	bf49      	itett	mi
 8006c80:	085b      	lsrmi	r3, r3, #1
 8006c82:	089b      	lsrpl	r3, r3, #2
 8006c84:	2001      	movmi	r0, #1
 8006c86:	600b      	strmi	r3, [r1, #0]
 8006c88:	bf5c      	itt	pl
 8006c8a:	600b      	strpl	r3, [r1, #0]
 8006c8c:	2002      	movpl	r0, #2
 8006c8e:	4770      	bx	lr
 8006c90:	b298      	uxth	r0, r3
 8006c92:	b9a8      	cbnz	r0, 8006cc0 <__lo0bits+0x52>
 8006c94:	0c1b      	lsrs	r3, r3, #16
 8006c96:	2010      	movs	r0, #16
 8006c98:	f013 0fff 	tst.w	r3, #255	; 0xff
 8006c9c:	bf04      	itt	eq
 8006c9e:	0a1b      	lsreq	r3, r3, #8
 8006ca0:	3008      	addeq	r0, #8
 8006ca2:	071a      	lsls	r2, r3, #28
 8006ca4:	bf04      	itt	eq
 8006ca6:	091b      	lsreq	r3, r3, #4
 8006ca8:	3004      	addeq	r0, #4
 8006caa:	079a      	lsls	r2, r3, #30
 8006cac:	bf04      	itt	eq
 8006cae:	089b      	lsreq	r3, r3, #2
 8006cb0:	3002      	addeq	r0, #2
 8006cb2:	07da      	lsls	r2, r3, #31
 8006cb4:	d402      	bmi.n	8006cbc <__lo0bits+0x4e>
 8006cb6:	085b      	lsrs	r3, r3, #1
 8006cb8:	d006      	beq.n	8006cc8 <__lo0bits+0x5a>
 8006cba:	3001      	adds	r0, #1
 8006cbc:	600b      	str	r3, [r1, #0]
 8006cbe:	4770      	bx	lr
 8006cc0:	4610      	mov	r0, r2
 8006cc2:	e7e9      	b.n	8006c98 <__lo0bits+0x2a>
 8006cc4:	2000      	movs	r0, #0
 8006cc6:	4770      	bx	lr
 8006cc8:	2020      	movs	r0, #32
 8006cca:	4770      	bx	lr

08006ccc <__i2b>:
 8006ccc:	b510      	push	{r4, lr}
 8006cce:	460c      	mov	r4, r1
 8006cd0:	2101      	movs	r1, #1
 8006cd2:	f7ff ff27 	bl	8006b24 <_Balloc>
 8006cd6:	2201      	movs	r2, #1
 8006cd8:	6144      	str	r4, [r0, #20]
 8006cda:	6102      	str	r2, [r0, #16]
 8006cdc:	bd10      	pop	{r4, pc}

08006cde <__multiply>:
 8006cde:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006ce2:	4614      	mov	r4, r2
 8006ce4:	690a      	ldr	r2, [r1, #16]
 8006ce6:	6923      	ldr	r3, [r4, #16]
 8006ce8:	429a      	cmp	r2, r3
 8006cea:	bfb8      	it	lt
 8006cec:	460b      	movlt	r3, r1
 8006cee:	4689      	mov	r9, r1
 8006cf0:	bfbc      	itt	lt
 8006cf2:	46a1      	movlt	r9, r4
 8006cf4:	461c      	movlt	r4, r3
 8006cf6:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8006cfa:	f8d4 a010 	ldr.w	sl, [r4, #16]
 8006cfe:	f8d9 3008 	ldr.w	r3, [r9, #8]
 8006d02:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8006d06:	eb07 060a 	add.w	r6, r7, sl
 8006d0a:	429e      	cmp	r6, r3
 8006d0c:	bfc8      	it	gt
 8006d0e:	3101      	addgt	r1, #1
 8006d10:	f7ff ff08 	bl	8006b24 <_Balloc>
 8006d14:	f100 0514 	add.w	r5, r0, #20
 8006d18:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8006d1c:	462b      	mov	r3, r5
 8006d1e:	2200      	movs	r2, #0
 8006d20:	4543      	cmp	r3, r8
 8006d22:	d316      	bcc.n	8006d52 <__multiply+0x74>
 8006d24:	f104 0214 	add.w	r2, r4, #20
 8006d28:	f109 0114 	add.w	r1, r9, #20
 8006d2c:	eb02 038a 	add.w	r3, r2, sl, lsl #2
 8006d30:	eb01 0787 	add.w	r7, r1, r7, lsl #2
 8006d34:	9301      	str	r3, [sp, #4]
 8006d36:	9c01      	ldr	r4, [sp, #4]
 8006d38:	4294      	cmp	r4, r2
 8006d3a:	4613      	mov	r3, r2
 8006d3c:	d80c      	bhi.n	8006d58 <__multiply+0x7a>
 8006d3e:	2e00      	cmp	r6, #0
 8006d40:	dd03      	ble.n	8006d4a <__multiply+0x6c>
 8006d42:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8006d46:	2b00      	cmp	r3, #0
 8006d48:	d054      	beq.n	8006df4 <__multiply+0x116>
 8006d4a:	6106      	str	r6, [r0, #16]
 8006d4c:	b003      	add	sp, #12
 8006d4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006d52:	f843 2b04 	str.w	r2, [r3], #4
 8006d56:	e7e3      	b.n	8006d20 <__multiply+0x42>
 8006d58:	f8b3 a000 	ldrh.w	sl, [r3]
 8006d5c:	3204      	adds	r2, #4
 8006d5e:	f1ba 0f00 	cmp.w	sl, #0
 8006d62:	d020      	beq.n	8006da6 <__multiply+0xc8>
 8006d64:	46ae      	mov	lr, r5
 8006d66:	4689      	mov	r9, r1
 8006d68:	f04f 0c00 	mov.w	ip, #0
 8006d6c:	f859 4b04 	ldr.w	r4, [r9], #4
 8006d70:	f8be b000 	ldrh.w	fp, [lr]
 8006d74:	b2a3      	uxth	r3, r4
 8006d76:	fb0a b303 	mla	r3, sl, r3, fp
 8006d7a:	ea4f 4b14 	mov.w	fp, r4, lsr #16
 8006d7e:	f8de 4000 	ldr.w	r4, [lr]
 8006d82:	4463      	add	r3, ip
 8006d84:	ea4f 4c14 	mov.w	ip, r4, lsr #16
 8006d88:	fb0a c40b 	mla	r4, sl, fp, ip
 8006d8c:	eb04 4413 	add.w	r4, r4, r3, lsr #16
 8006d90:	b29b      	uxth	r3, r3
 8006d92:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8006d96:	454f      	cmp	r7, r9
 8006d98:	ea4f 4c14 	mov.w	ip, r4, lsr #16
 8006d9c:	f84e 3b04 	str.w	r3, [lr], #4
 8006da0:	d8e4      	bhi.n	8006d6c <__multiply+0x8e>
 8006da2:	f8ce c000 	str.w	ip, [lr]
 8006da6:	f832 9c02 	ldrh.w	r9, [r2, #-2]
 8006daa:	f1b9 0f00 	cmp.w	r9, #0
 8006dae:	d01f      	beq.n	8006df0 <__multiply+0x112>
 8006db0:	682b      	ldr	r3, [r5, #0]
 8006db2:	46ae      	mov	lr, r5
 8006db4:	468c      	mov	ip, r1
 8006db6:	f04f 0a00 	mov.w	sl, #0
 8006dba:	f8bc 4000 	ldrh.w	r4, [ip]
 8006dbe:	f8be b002 	ldrh.w	fp, [lr, #2]
 8006dc2:	fb09 b404 	mla	r4, r9, r4, fp
 8006dc6:	44a2      	add	sl, r4
 8006dc8:	b29b      	uxth	r3, r3
 8006dca:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
 8006dce:	f84e 3b04 	str.w	r3, [lr], #4
 8006dd2:	f85c 3b04 	ldr.w	r3, [ip], #4
 8006dd6:	f8be 4000 	ldrh.w	r4, [lr]
 8006dda:	0c1b      	lsrs	r3, r3, #16
 8006ddc:	fb09 4303 	mla	r3, r9, r3, r4
 8006de0:	eb03 431a 	add.w	r3, r3, sl, lsr #16
 8006de4:	4567      	cmp	r7, ip
 8006de6:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8006dea:	d8e6      	bhi.n	8006dba <__multiply+0xdc>
 8006dec:	f8ce 3000 	str.w	r3, [lr]
 8006df0:	3504      	adds	r5, #4
 8006df2:	e7a0      	b.n	8006d36 <__multiply+0x58>
 8006df4:	3e01      	subs	r6, #1
 8006df6:	e7a2      	b.n	8006d3e <__multiply+0x60>

08006df8 <__pow5mult>:
 8006df8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006dfc:	4615      	mov	r5, r2
 8006dfe:	f012 0203 	ands.w	r2, r2, #3
 8006e02:	4606      	mov	r6, r0
 8006e04:	460f      	mov	r7, r1
 8006e06:	d007      	beq.n	8006e18 <__pow5mult+0x20>
 8006e08:	3a01      	subs	r2, #1
 8006e0a:	4c21      	ldr	r4, [pc, #132]	; (8006e90 <__pow5mult+0x98>)
 8006e0c:	2300      	movs	r3, #0
 8006e0e:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8006e12:	f7ff fed2 	bl	8006bba <__multadd>
 8006e16:	4607      	mov	r7, r0
 8006e18:	10ad      	asrs	r5, r5, #2
 8006e1a:	d035      	beq.n	8006e88 <__pow5mult+0x90>
 8006e1c:	6a74      	ldr	r4, [r6, #36]	; 0x24
 8006e1e:	b93c      	cbnz	r4, 8006e30 <__pow5mult+0x38>
 8006e20:	2010      	movs	r0, #16
 8006e22:	f7ff fc2f 	bl	8006684 <malloc>
 8006e26:	6270      	str	r0, [r6, #36]	; 0x24
 8006e28:	6044      	str	r4, [r0, #4]
 8006e2a:	6084      	str	r4, [r0, #8]
 8006e2c:	6004      	str	r4, [r0, #0]
 8006e2e:	60c4      	str	r4, [r0, #12]
 8006e30:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 8006e34:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8006e38:	b94c      	cbnz	r4, 8006e4e <__pow5mult+0x56>
 8006e3a:	f240 2171 	movw	r1, #625	; 0x271
 8006e3e:	4630      	mov	r0, r6
 8006e40:	f7ff ff44 	bl	8006ccc <__i2b>
 8006e44:	2300      	movs	r3, #0
 8006e46:	f8c8 0008 	str.w	r0, [r8, #8]
 8006e4a:	4604      	mov	r4, r0
 8006e4c:	6003      	str	r3, [r0, #0]
 8006e4e:	f04f 0800 	mov.w	r8, #0
 8006e52:	07eb      	lsls	r3, r5, #31
 8006e54:	d50a      	bpl.n	8006e6c <__pow5mult+0x74>
 8006e56:	4639      	mov	r1, r7
 8006e58:	4622      	mov	r2, r4
 8006e5a:	4630      	mov	r0, r6
 8006e5c:	f7ff ff3f 	bl	8006cde <__multiply>
 8006e60:	4639      	mov	r1, r7
 8006e62:	4681      	mov	r9, r0
 8006e64:	4630      	mov	r0, r6
 8006e66:	f7ff fe91 	bl	8006b8c <_Bfree>
 8006e6a:	464f      	mov	r7, r9
 8006e6c:	106d      	asrs	r5, r5, #1
 8006e6e:	d00b      	beq.n	8006e88 <__pow5mult+0x90>
 8006e70:	6820      	ldr	r0, [r4, #0]
 8006e72:	b938      	cbnz	r0, 8006e84 <__pow5mult+0x8c>
 8006e74:	4622      	mov	r2, r4
 8006e76:	4621      	mov	r1, r4
 8006e78:	4630      	mov	r0, r6
 8006e7a:	f7ff ff30 	bl	8006cde <__multiply>
 8006e7e:	6020      	str	r0, [r4, #0]
 8006e80:	f8c0 8000 	str.w	r8, [r0]
 8006e84:	4604      	mov	r4, r0
 8006e86:	e7e4      	b.n	8006e52 <__pow5mult+0x5a>
 8006e88:	4638      	mov	r0, r7
 8006e8a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006e8e:	bf00      	nop
 8006e90:	08008600 	.word	0x08008600

08006e94 <__lshift>:
 8006e94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006e98:	460c      	mov	r4, r1
 8006e9a:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8006e9e:	6923      	ldr	r3, [r4, #16]
 8006ea0:	6849      	ldr	r1, [r1, #4]
 8006ea2:	eb0a 0903 	add.w	r9, sl, r3
 8006ea6:	68a3      	ldr	r3, [r4, #8]
 8006ea8:	4607      	mov	r7, r0
 8006eaa:	4616      	mov	r6, r2
 8006eac:	f109 0501 	add.w	r5, r9, #1
 8006eb0:	42ab      	cmp	r3, r5
 8006eb2:	db31      	blt.n	8006f18 <__lshift+0x84>
 8006eb4:	4638      	mov	r0, r7
 8006eb6:	f7ff fe35 	bl	8006b24 <_Balloc>
 8006eba:	2200      	movs	r2, #0
 8006ebc:	4680      	mov	r8, r0
 8006ebe:	f100 0314 	add.w	r3, r0, #20
 8006ec2:	4611      	mov	r1, r2
 8006ec4:	4552      	cmp	r2, sl
 8006ec6:	db2a      	blt.n	8006f1e <__lshift+0x8a>
 8006ec8:	6920      	ldr	r0, [r4, #16]
 8006eca:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8006ece:	f104 0114 	add.w	r1, r4, #20
 8006ed2:	f016 021f 	ands.w	r2, r6, #31
 8006ed6:	eb03 038a 	add.w	r3, r3, sl, lsl #2
 8006eda:	eb01 0e80 	add.w	lr, r1, r0, lsl #2
 8006ede:	d022      	beq.n	8006f26 <__lshift+0x92>
 8006ee0:	f1c2 0c20 	rsb	ip, r2, #32
 8006ee4:	2000      	movs	r0, #0
 8006ee6:	680e      	ldr	r6, [r1, #0]
 8006ee8:	4096      	lsls	r6, r2
 8006eea:	4330      	orrs	r0, r6
 8006eec:	f843 0b04 	str.w	r0, [r3], #4
 8006ef0:	f851 0b04 	ldr.w	r0, [r1], #4
 8006ef4:	458e      	cmp	lr, r1
 8006ef6:	fa20 f00c 	lsr.w	r0, r0, ip
 8006efa:	d8f4      	bhi.n	8006ee6 <__lshift+0x52>
 8006efc:	6018      	str	r0, [r3, #0]
 8006efe:	b108      	cbz	r0, 8006f04 <__lshift+0x70>
 8006f00:	f109 0502 	add.w	r5, r9, #2
 8006f04:	3d01      	subs	r5, #1
 8006f06:	4638      	mov	r0, r7
 8006f08:	f8c8 5010 	str.w	r5, [r8, #16]
 8006f0c:	4621      	mov	r1, r4
 8006f0e:	f7ff fe3d 	bl	8006b8c <_Bfree>
 8006f12:	4640      	mov	r0, r8
 8006f14:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006f18:	3101      	adds	r1, #1
 8006f1a:	005b      	lsls	r3, r3, #1
 8006f1c:	e7c8      	b.n	8006eb0 <__lshift+0x1c>
 8006f1e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8006f22:	3201      	adds	r2, #1
 8006f24:	e7ce      	b.n	8006ec4 <__lshift+0x30>
 8006f26:	3b04      	subs	r3, #4
 8006f28:	f851 2b04 	ldr.w	r2, [r1], #4
 8006f2c:	f843 2f04 	str.w	r2, [r3, #4]!
 8006f30:	458e      	cmp	lr, r1
 8006f32:	d8f9      	bhi.n	8006f28 <__lshift+0x94>
 8006f34:	e7e6      	b.n	8006f04 <__lshift+0x70>

08006f36 <__mcmp>:
 8006f36:	6903      	ldr	r3, [r0, #16]
 8006f38:	690a      	ldr	r2, [r1, #16]
 8006f3a:	1a9b      	subs	r3, r3, r2
 8006f3c:	b530      	push	{r4, r5, lr}
 8006f3e:	d10c      	bne.n	8006f5a <__mcmp+0x24>
 8006f40:	0092      	lsls	r2, r2, #2
 8006f42:	3014      	adds	r0, #20
 8006f44:	3114      	adds	r1, #20
 8006f46:	1884      	adds	r4, r0, r2
 8006f48:	4411      	add	r1, r2
 8006f4a:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8006f4e:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8006f52:	4295      	cmp	r5, r2
 8006f54:	d003      	beq.n	8006f5e <__mcmp+0x28>
 8006f56:	d305      	bcc.n	8006f64 <__mcmp+0x2e>
 8006f58:	2301      	movs	r3, #1
 8006f5a:	4618      	mov	r0, r3
 8006f5c:	bd30      	pop	{r4, r5, pc}
 8006f5e:	42a0      	cmp	r0, r4
 8006f60:	d3f3      	bcc.n	8006f4a <__mcmp+0x14>
 8006f62:	e7fa      	b.n	8006f5a <__mcmp+0x24>
 8006f64:	f04f 33ff 	mov.w	r3, #4294967295
 8006f68:	e7f7      	b.n	8006f5a <__mcmp+0x24>

08006f6a <__mdiff>:
 8006f6a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006f6e:	460d      	mov	r5, r1
 8006f70:	4607      	mov	r7, r0
 8006f72:	4611      	mov	r1, r2
 8006f74:	4628      	mov	r0, r5
 8006f76:	4614      	mov	r4, r2
 8006f78:	f7ff ffdd 	bl	8006f36 <__mcmp>
 8006f7c:	1e06      	subs	r6, r0, #0
 8006f7e:	d108      	bne.n	8006f92 <__mdiff+0x28>
 8006f80:	4631      	mov	r1, r6
 8006f82:	4638      	mov	r0, r7
 8006f84:	f7ff fdce 	bl	8006b24 <_Balloc>
 8006f88:	2301      	movs	r3, #1
 8006f8a:	6103      	str	r3, [r0, #16]
 8006f8c:	6146      	str	r6, [r0, #20]
 8006f8e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006f92:	bfa4      	itt	ge
 8006f94:	4623      	movge	r3, r4
 8006f96:	462c      	movge	r4, r5
 8006f98:	4638      	mov	r0, r7
 8006f9a:	6861      	ldr	r1, [r4, #4]
 8006f9c:	bfa6      	itte	ge
 8006f9e:	461d      	movge	r5, r3
 8006fa0:	2600      	movge	r6, #0
 8006fa2:	2601      	movlt	r6, #1
 8006fa4:	f7ff fdbe 	bl	8006b24 <_Balloc>
 8006fa8:	692b      	ldr	r3, [r5, #16]
 8006faa:	60c6      	str	r6, [r0, #12]
 8006fac:	6926      	ldr	r6, [r4, #16]
 8006fae:	f105 0914 	add.w	r9, r5, #20
 8006fb2:	f104 0214 	add.w	r2, r4, #20
 8006fb6:	eb02 0786 	add.w	r7, r2, r6, lsl #2
 8006fba:	eb09 0883 	add.w	r8, r9, r3, lsl #2
 8006fbe:	f100 0514 	add.w	r5, r0, #20
 8006fc2:	f04f 0c00 	mov.w	ip, #0
 8006fc6:	f852 ab04 	ldr.w	sl, [r2], #4
 8006fca:	f859 4b04 	ldr.w	r4, [r9], #4
 8006fce:	fa1c f18a 	uxtah	r1, ip, sl
 8006fd2:	b2a3      	uxth	r3, r4
 8006fd4:	1ac9      	subs	r1, r1, r3
 8006fd6:	0c23      	lsrs	r3, r4, #16
 8006fd8:	ebc3 431a 	rsb	r3, r3, sl, lsr #16
 8006fdc:	eb03 4321 	add.w	r3, r3, r1, asr #16
 8006fe0:	b289      	uxth	r1, r1
 8006fe2:	ea4f 4c23 	mov.w	ip, r3, asr #16
 8006fe6:	45c8      	cmp	r8, r9
 8006fe8:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8006fec:	4696      	mov	lr, r2
 8006fee:	f845 3b04 	str.w	r3, [r5], #4
 8006ff2:	d8e8      	bhi.n	8006fc6 <__mdiff+0x5c>
 8006ff4:	45be      	cmp	lr, r7
 8006ff6:	d305      	bcc.n	8007004 <__mdiff+0x9a>
 8006ff8:	f855 3d04 	ldr.w	r3, [r5, #-4]!
 8006ffc:	b18b      	cbz	r3, 8007022 <__mdiff+0xb8>
 8006ffe:	6106      	str	r6, [r0, #16]
 8007000:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007004:	f85e 1b04 	ldr.w	r1, [lr], #4
 8007008:	fa1c f381 	uxtah	r3, ip, r1
 800700c:	141a      	asrs	r2, r3, #16
 800700e:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 8007012:	b29b      	uxth	r3, r3
 8007014:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8007018:	ea4f 4c22 	mov.w	ip, r2, asr #16
 800701c:	f845 3b04 	str.w	r3, [r5], #4
 8007020:	e7e8      	b.n	8006ff4 <__mdiff+0x8a>
 8007022:	3e01      	subs	r6, #1
 8007024:	e7e8      	b.n	8006ff8 <__mdiff+0x8e>

08007026 <__d2b>:
 8007026:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800702a:	460e      	mov	r6, r1
 800702c:	2101      	movs	r1, #1
 800702e:	ec59 8b10 	vmov	r8, r9, d0
 8007032:	4615      	mov	r5, r2
 8007034:	f7ff fd76 	bl	8006b24 <_Balloc>
 8007038:	f3c9 540a 	ubfx	r4, r9, #20, #11
 800703c:	4607      	mov	r7, r0
 800703e:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8007042:	bb34      	cbnz	r4, 8007092 <__d2b+0x6c>
 8007044:	9301      	str	r3, [sp, #4]
 8007046:	f1b8 0f00 	cmp.w	r8, #0
 800704a:	d027      	beq.n	800709c <__d2b+0x76>
 800704c:	a802      	add	r0, sp, #8
 800704e:	f840 8d08 	str.w	r8, [r0, #-8]!
 8007052:	f7ff fe0c 	bl	8006c6e <__lo0bits>
 8007056:	9900      	ldr	r1, [sp, #0]
 8007058:	b1f0      	cbz	r0, 8007098 <__d2b+0x72>
 800705a:	9a01      	ldr	r2, [sp, #4]
 800705c:	f1c0 0320 	rsb	r3, r0, #32
 8007060:	fa02 f303 	lsl.w	r3, r2, r3
 8007064:	430b      	orrs	r3, r1
 8007066:	40c2      	lsrs	r2, r0
 8007068:	617b      	str	r3, [r7, #20]
 800706a:	9201      	str	r2, [sp, #4]
 800706c:	9b01      	ldr	r3, [sp, #4]
 800706e:	61bb      	str	r3, [r7, #24]
 8007070:	2b00      	cmp	r3, #0
 8007072:	bf14      	ite	ne
 8007074:	2102      	movne	r1, #2
 8007076:	2101      	moveq	r1, #1
 8007078:	6139      	str	r1, [r7, #16]
 800707a:	b1c4      	cbz	r4, 80070ae <__d2b+0x88>
 800707c:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
 8007080:	4404      	add	r4, r0
 8007082:	6034      	str	r4, [r6, #0]
 8007084:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8007088:	6028      	str	r0, [r5, #0]
 800708a:	4638      	mov	r0, r7
 800708c:	b003      	add	sp, #12
 800708e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8007092:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8007096:	e7d5      	b.n	8007044 <__d2b+0x1e>
 8007098:	6179      	str	r1, [r7, #20]
 800709a:	e7e7      	b.n	800706c <__d2b+0x46>
 800709c:	a801      	add	r0, sp, #4
 800709e:	f7ff fde6 	bl	8006c6e <__lo0bits>
 80070a2:	9b01      	ldr	r3, [sp, #4]
 80070a4:	617b      	str	r3, [r7, #20]
 80070a6:	2101      	movs	r1, #1
 80070a8:	6139      	str	r1, [r7, #16]
 80070aa:	3020      	adds	r0, #32
 80070ac:	e7e5      	b.n	800707a <__d2b+0x54>
 80070ae:	eb07 0381 	add.w	r3, r7, r1, lsl #2
 80070b2:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 80070b6:	6030      	str	r0, [r6, #0]
 80070b8:	6918      	ldr	r0, [r3, #16]
 80070ba:	f7ff fdb9 	bl	8006c30 <__hi0bits>
 80070be:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
 80070c2:	e7e1      	b.n	8007088 <__d2b+0x62>

080070c4 <_realloc_r>:
 80070c4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80070c8:	4682      	mov	sl, r0
 80070ca:	460c      	mov	r4, r1
 80070cc:	b929      	cbnz	r1, 80070da <_realloc_r+0x16>
 80070ce:	4611      	mov	r1, r2
 80070d0:	b003      	add	sp, #12
 80070d2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80070d6:	f7ff badd 	b.w	8006694 <_malloc_r>
 80070da:	9201      	str	r2, [sp, #4]
 80070dc:	f7ff fd16 	bl	8006b0c <__malloc_lock>
 80070e0:	9a01      	ldr	r2, [sp, #4]
 80070e2:	f854 5c04 	ldr.w	r5, [r4, #-4]
 80070e6:	f102 080b 	add.w	r8, r2, #11
 80070ea:	f1b8 0f16 	cmp.w	r8, #22
 80070ee:	f1a4 0908 	sub.w	r9, r4, #8
 80070f2:	f025 0603 	bic.w	r6, r5, #3
 80070f6:	d90a      	bls.n	800710e <_realloc_r+0x4a>
 80070f8:	f038 0807 	bics.w	r8, r8, #7
 80070fc:	d509      	bpl.n	8007112 <_realloc_r+0x4e>
 80070fe:	230c      	movs	r3, #12
 8007100:	f8ca 3000 	str.w	r3, [sl]
 8007104:	2700      	movs	r7, #0
 8007106:	4638      	mov	r0, r7
 8007108:	b003      	add	sp, #12
 800710a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800710e:	f04f 0810 	mov.w	r8, #16
 8007112:	4590      	cmp	r8, r2
 8007114:	d3f3      	bcc.n	80070fe <_realloc_r+0x3a>
 8007116:	45b0      	cmp	r8, r6
 8007118:	f340 8145 	ble.w	80073a6 <_realloc_r+0x2e2>
 800711c:	4ba8      	ldr	r3, [pc, #672]	; (80073c0 <_realloc_r+0x2fc>)
 800711e:	f8d3 e008 	ldr.w	lr, [r3, #8]
 8007122:	eb09 0106 	add.w	r1, r9, r6
 8007126:	4571      	cmp	r1, lr
 8007128:	469b      	mov	fp, r3
 800712a:	684b      	ldr	r3, [r1, #4]
 800712c:	d005      	beq.n	800713a <_realloc_r+0x76>
 800712e:	f023 0001 	bic.w	r0, r3, #1
 8007132:	4408      	add	r0, r1
 8007134:	6840      	ldr	r0, [r0, #4]
 8007136:	07c7      	lsls	r7, r0, #31
 8007138:	d447      	bmi.n	80071ca <_realloc_r+0x106>
 800713a:	f023 0303 	bic.w	r3, r3, #3
 800713e:	4571      	cmp	r1, lr
 8007140:	eb06 0703 	add.w	r7, r6, r3
 8007144:	d119      	bne.n	800717a <_realloc_r+0xb6>
 8007146:	f108 0010 	add.w	r0, r8, #16
 800714a:	4287      	cmp	r7, r0
 800714c:	db3f      	blt.n	80071ce <_realloc_r+0x10a>
 800714e:	eb09 0308 	add.w	r3, r9, r8
 8007152:	eba7 0708 	sub.w	r7, r7, r8
 8007156:	f047 0701 	orr.w	r7, r7, #1
 800715a:	f8cb 3008 	str.w	r3, [fp, #8]
 800715e:	605f      	str	r7, [r3, #4]
 8007160:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8007164:	f003 0301 	and.w	r3, r3, #1
 8007168:	ea43 0308 	orr.w	r3, r3, r8
 800716c:	f844 3c04 	str.w	r3, [r4, #-4]
 8007170:	4650      	mov	r0, sl
 8007172:	f7ff fcd1 	bl	8006b18 <__malloc_unlock>
 8007176:	4627      	mov	r7, r4
 8007178:	e7c5      	b.n	8007106 <_realloc_r+0x42>
 800717a:	45b8      	cmp	r8, r7
 800717c:	dc27      	bgt.n	80071ce <_realloc_r+0x10a>
 800717e:	68cb      	ldr	r3, [r1, #12]
 8007180:	688a      	ldr	r2, [r1, #8]
 8007182:	60d3      	str	r3, [r2, #12]
 8007184:	609a      	str	r2, [r3, #8]
 8007186:	eba7 0008 	sub.w	r0, r7, r8
 800718a:	280f      	cmp	r0, #15
 800718c:	f8d9 3004 	ldr.w	r3, [r9, #4]
 8007190:	eb09 0207 	add.w	r2, r9, r7
 8007194:	f240 8109 	bls.w	80073aa <_realloc_r+0x2e6>
 8007198:	eb09 0108 	add.w	r1, r9, r8
 800719c:	f003 0301 	and.w	r3, r3, #1
 80071a0:	ea43 0308 	orr.w	r3, r3, r8
 80071a4:	f040 0001 	orr.w	r0, r0, #1
 80071a8:	f8c9 3004 	str.w	r3, [r9, #4]
 80071ac:	6048      	str	r0, [r1, #4]
 80071ae:	6853      	ldr	r3, [r2, #4]
 80071b0:	f043 0301 	orr.w	r3, r3, #1
 80071b4:	6053      	str	r3, [r2, #4]
 80071b6:	3108      	adds	r1, #8
 80071b8:	4650      	mov	r0, sl
 80071ba:	f7fe ffa1 	bl	8006100 <_free_r>
 80071be:	4650      	mov	r0, sl
 80071c0:	f7ff fcaa 	bl	8006b18 <__malloc_unlock>
 80071c4:	f109 0708 	add.w	r7, r9, #8
 80071c8:	e79d      	b.n	8007106 <_realloc_r+0x42>
 80071ca:	2300      	movs	r3, #0
 80071cc:	4619      	mov	r1, r3
 80071ce:	07e8      	lsls	r0, r5, #31
 80071d0:	f100 8084 	bmi.w	80072dc <_realloc_r+0x218>
 80071d4:	f854 5c08 	ldr.w	r5, [r4, #-8]
 80071d8:	eba9 0505 	sub.w	r5, r9, r5
 80071dc:	6868      	ldr	r0, [r5, #4]
 80071de:	f020 0003 	bic.w	r0, r0, #3
 80071e2:	4430      	add	r0, r6
 80071e4:	2900      	cmp	r1, #0
 80071e6:	d076      	beq.n	80072d6 <_realloc_r+0x212>
 80071e8:	4571      	cmp	r1, lr
 80071ea:	d150      	bne.n	800728e <_realloc_r+0x1ca>
 80071ec:	4403      	add	r3, r0
 80071ee:	f108 0110 	add.w	r1, r8, #16
 80071f2:	428b      	cmp	r3, r1
 80071f4:	db6f      	blt.n	80072d6 <_realloc_r+0x212>
 80071f6:	462f      	mov	r7, r5
 80071f8:	68ea      	ldr	r2, [r5, #12]
 80071fa:	f857 1f08 	ldr.w	r1, [r7, #8]!
 80071fe:	60ca      	str	r2, [r1, #12]
 8007200:	6091      	str	r1, [r2, #8]
 8007202:	1f32      	subs	r2, r6, #4
 8007204:	2a24      	cmp	r2, #36	; 0x24
 8007206:	d83b      	bhi.n	8007280 <_realloc_r+0x1bc>
 8007208:	2a13      	cmp	r2, #19
 800720a:	d936      	bls.n	800727a <_realloc_r+0x1b6>
 800720c:	6821      	ldr	r1, [r4, #0]
 800720e:	60a9      	str	r1, [r5, #8]
 8007210:	6861      	ldr	r1, [r4, #4]
 8007212:	60e9      	str	r1, [r5, #12]
 8007214:	2a1b      	cmp	r2, #27
 8007216:	d81c      	bhi.n	8007252 <_realloc_r+0x18e>
 8007218:	f105 0210 	add.w	r2, r5, #16
 800721c:	f104 0108 	add.w	r1, r4, #8
 8007220:	6808      	ldr	r0, [r1, #0]
 8007222:	6010      	str	r0, [r2, #0]
 8007224:	6848      	ldr	r0, [r1, #4]
 8007226:	6050      	str	r0, [r2, #4]
 8007228:	6889      	ldr	r1, [r1, #8]
 800722a:	6091      	str	r1, [r2, #8]
 800722c:	eb05 0208 	add.w	r2, r5, r8
 8007230:	eba3 0308 	sub.w	r3, r3, r8
 8007234:	f043 0301 	orr.w	r3, r3, #1
 8007238:	f8cb 2008 	str.w	r2, [fp, #8]
 800723c:	6053      	str	r3, [r2, #4]
 800723e:	686b      	ldr	r3, [r5, #4]
 8007240:	f003 0301 	and.w	r3, r3, #1
 8007244:	ea43 0308 	orr.w	r3, r3, r8
 8007248:	606b      	str	r3, [r5, #4]
 800724a:	4650      	mov	r0, sl
 800724c:	f7ff fc64 	bl	8006b18 <__malloc_unlock>
 8007250:	e759      	b.n	8007106 <_realloc_r+0x42>
 8007252:	68a1      	ldr	r1, [r4, #8]
 8007254:	6129      	str	r1, [r5, #16]
 8007256:	68e1      	ldr	r1, [r4, #12]
 8007258:	6169      	str	r1, [r5, #20]
 800725a:	2a24      	cmp	r2, #36	; 0x24
 800725c:	bf01      	itttt	eq
 800725e:	6922      	ldreq	r2, [r4, #16]
 8007260:	61aa      	streq	r2, [r5, #24]
 8007262:	6960      	ldreq	r0, [r4, #20]
 8007264:	61e8      	streq	r0, [r5, #28]
 8007266:	bf19      	ittee	ne
 8007268:	f105 0218 	addne.w	r2, r5, #24
 800726c:	f104 0110 	addne.w	r1, r4, #16
 8007270:	f105 0220 	addeq.w	r2, r5, #32
 8007274:	f104 0118 	addeq.w	r1, r4, #24
 8007278:	e7d2      	b.n	8007220 <_realloc_r+0x15c>
 800727a:	463a      	mov	r2, r7
 800727c:	4621      	mov	r1, r4
 800727e:	e7cf      	b.n	8007220 <_realloc_r+0x15c>
 8007280:	4621      	mov	r1, r4
 8007282:	4638      	mov	r0, r7
 8007284:	9301      	str	r3, [sp, #4]
 8007286:	f7ff fc1e 	bl	8006ac6 <memmove>
 800728a:	9b01      	ldr	r3, [sp, #4]
 800728c:	e7ce      	b.n	800722c <_realloc_r+0x168>
 800728e:	18c7      	adds	r7, r0, r3
 8007290:	45b8      	cmp	r8, r7
 8007292:	dc20      	bgt.n	80072d6 <_realloc_r+0x212>
 8007294:	68cb      	ldr	r3, [r1, #12]
 8007296:	688a      	ldr	r2, [r1, #8]
 8007298:	60d3      	str	r3, [r2, #12]
 800729a:	609a      	str	r2, [r3, #8]
 800729c:	4628      	mov	r0, r5
 800729e:	68eb      	ldr	r3, [r5, #12]
 80072a0:	f850 2f08 	ldr.w	r2, [r0, #8]!
 80072a4:	60d3      	str	r3, [r2, #12]
 80072a6:	609a      	str	r2, [r3, #8]
 80072a8:	1f32      	subs	r2, r6, #4
 80072aa:	2a24      	cmp	r2, #36	; 0x24
 80072ac:	d842      	bhi.n	8007334 <_realloc_r+0x270>
 80072ae:	2a13      	cmp	r2, #19
 80072b0:	d93e      	bls.n	8007330 <_realloc_r+0x26c>
 80072b2:	6823      	ldr	r3, [r4, #0]
 80072b4:	60ab      	str	r3, [r5, #8]
 80072b6:	6863      	ldr	r3, [r4, #4]
 80072b8:	60eb      	str	r3, [r5, #12]
 80072ba:	2a1b      	cmp	r2, #27
 80072bc:	d824      	bhi.n	8007308 <_realloc_r+0x244>
 80072be:	f105 0010 	add.w	r0, r5, #16
 80072c2:	f104 0308 	add.w	r3, r4, #8
 80072c6:	681a      	ldr	r2, [r3, #0]
 80072c8:	6002      	str	r2, [r0, #0]
 80072ca:	685a      	ldr	r2, [r3, #4]
 80072cc:	6042      	str	r2, [r0, #4]
 80072ce:	689b      	ldr	r3, [r3, #8]
 80072d0:	6083      	str	r3, [r0, #8]
 80072d2:	46a9      	mov	r9, r5
 80072d4:	e757      	b.n	8007186 <_realloc_r+0xc2>
 80072d6:	4580      	cmp	r8, r0
 80072d8:	4607      	mov	r7, r0
 80072da:	dddf      	ble.n	800729c <_realloc_r+0x1d8>
 80072dc:	4611      	mov	r1, r2
 80072de:	4650      	mov	r0, sl
 80072e0:	f7ff f9d8 	bl	8006694 <_malloc_r>
 80072e4:	4607      	mov	r7, r0
 80072e6:	2800      	cmp	r0, #0
 80072e8:	d0af      	beq.n	800724a <_realloc_r+0x186>
 80072ea:	f854 3c04 	ldr.w	r3, [r4, #-4]
 80072ee:	f023 0301 	bic.w	r3, r3, #1
 80072f2:	f1a0 0208 	sub.w	r2, r0, #8
 80072f6:	444b      	add	r3, r9
 80072f8:	429a      	cmp	r2, r3
 80072fa:	d11f      	bne.n	800733c <_realloc_r+0x278>
 80072fc:	f850 7c04 	ldr.w	r7, [r0, #-4]
 8007300:	f027 0703 	bic.w	r7, r7, #3
 8007304:	4437      	add	r7, r6
 8007306:	e73e      	b.n	8007186 <_realloc_r+0xc2>
 8007308:	68a3      	ldr	r3, [r4, #8]
 800730a:	612b      	str	r3, [r5, #16]
 800730c:	68e3      	ldr	r3, [r4, #12]
 800730e:	616b      	str	r3, [r5, #20]
 8007310:	2a24      	cmp	r2, #36	; 0x24
 8007312:	bf01      	itttt	eq
 8007314:	6923      	ldreq	r3, [r4, #16]
 8007316:	61ab      	streq	r3, [r5, #24]
 8007318:	6962      	ldreq	r2, [r4, #20]
 800731a:	61ea      	streq	r2, [r5, #28]
 800731c:	bf19      	ittee	ne
 800731e:	f105 0018 	addne.w	r0, r5, #24
 8007322:	f104 0310 	addne.w	r3, r4, #16
 8007326:	f105 0020 	addeq.w	r0, r5, #32
 800732a:	f104 0318 	addeq.w	r3, r4, #24
 800732e:	e7ca      	b.n	80072c6 <_realloc_r+0x202>
 8007330:	4623      	mov	r3, r4
 8007332:	e7c8      	b.n	80072c6 <_realloc_r+0x202>
 8007334:	4621      	mov	r1, r4
 8007336:	f7ff fbc6 	bl	8006ac6 <memmove>
 800733a:	e7ca      	b.n	80072d2 <_realloc_r+0x20e>
 800733c:	1f32      	subs	r2, r6, #4
 800733e:	2a24      	cmp	r2, #36	; 0x24
 8007340:	d82d      	bhi.n	800739e <_realloc_r+0x2da>
 8007342:	2a13      	cmp	r2, #19
 8007344:	d928      	bls.n	8007398 <_realloc_r+0x2d4>
 8007346:	6823      	ldr	r3, [r4, #0]
 8007348:	6003      	str	r3, [r0, #0]
 800734a:	6863      	ldr	r3, [r4, #4]
 800734c:	6043      	str	r3, [r0, #4]
 800734e:	2a1b      	cmp	r2, #27
 8007350:	d80e      	bhi.n	8007370 <_realloc_r+0x2ac>
 8007352:	f100 0308 	add.w	r3, r0, #8
 8007356:	f104 0208 	add.w	r2, r4, #8
 800735a:	6811      	ldr	r1, [r2, #0]
 800735c:	6019      	str	r1, [r3, #0]
 800735e:	6851      	ldr	r1, [r2, #4]
 8007360:	6059      	str	r1, [r3, #4]
 8007362:	6892      	ldr	r2, [r2, #8]
 8007364:	609a      	str	r2, [r3, #8]
 8007366:	4621      	mov	r1, r4
 8007368:	4650      	mov	r0, sl
 800736a:	f7fe fec9 	bl	8006100 <_free_r>
 800736e:	e76c      	b.n	800724a <_realloc_r+0x186>
 8007370:	68a3      	ldr	r3, [r4, #8]
 8007372:	6083      	str	r3, [r0, #8]
 8007374:	68e3      	ldr	r3, [r4, #12]
 8007376:	60c3      	str	r3, [r0, #12]
 8007378:	2a24      	cmp	r2, #36	; 0x24
 800737a:	bf01      	itttt	eq
 800737c:	6923      	ldreq	r3, [r4, #16]
 800737e:	6103      	streq	r3, [r0, #16]
 8007380:	6961      	ldreq	r1, [r4, #20]
 8007382:	6141      	streq	r1, [r0, #20]
 8007384:	bf19      	ittee	ne
 8007386:	f100 0310 	addne.w	r3, r0, #16
 800738a:	f104 0210 	addne.w	r2, r4, #16
 800738e:	f100 0318 	addeq.w	r3, r0, #24
 8007392:	f104 0218 	addeq.w	r2, r4, #24
 8007396:	e7e0      	b.n	800735a <_realloc_r+0x296>
 8007398:	4603      	mov	r3, r0
 800739a:	4622      	mov	r2, r4
 800739c:	e7dd      	b.n	800735a <_realloc_r+0x296>
 800739e:	4621      	mov	r1, r4
 80073a0:	f7ff fb91 	bl	8006ac6 <memmove>
 80073a4:	e7df      	b.n	8007366 <_realloc_r+0x2a2>
 80073a6:	4637      	mov	r7, r6
 80073a8:	e6ed      	b.n	8007186 <_realloc_r+0xc2>
 80073aa:	f003 0301 	and.w	r3, r3, #1
 80073ae:	431f      	orrs	r7, r3
 80073b0:	f8c9 7004 	str.w	r7, [r9, #4]
 80073b4:	6853      	ldr	r3, [r2, #4]
 80073b6:	f043 0301 	orr.w	r3, r3, #1
 80073ba:	6053      	str	r3, [r2, #4]
 80073bc:	e6ff      	b.n	80071be <_realloc_r+0xfa>
 80073be:	bf00      	nop
 80073c0:	20000104 	.word	0x20000104

080073c4 <lflush>:
 80073c4:	8983      	ldrh	r3, [r0, #12]
 80073c6:	f003 0309 	and.w	r3, r3, #9
 80073ca:	2b09      	cmp	r3, #9
 80073cc:	d101      	bne.n	80073d2 <lflush+0xe>
 80073ce:	f7fe bd57 	b.w	8005e80 <fflush>
 80073d2:	2000      	movs	r0, #0
 80073d4:	4770      	bx	lr
	...

080073d8 <__srefill_r>:
 80073d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80073da:	460c      	mov	r4, r1
 80073dc:	4605      	mov	r5, r0
 80073de:	b118      	cbz	r0, 80073e8 <__srefill_r+0x10>
 80073e0:	6983      	ldr	r3, [r0, #24]
 80073e2:	b90b      	cbnz	r3, 80073e8 <__srefill_r+0x10>
 80073e4:	f7fe fdb6 	bl	8005f54 <__sinit>
 80073e8:	4b41      	ldr	r3, [pc, #260]	; (80074f0 <__srefill_r+0x118>)
 80073ea:	429c      	cmp	r4, r3
 80073ec:	d115      	bne.n	800741a <__srefill_r+0x42>
 80073ee:	686c      	ldr	r4, [r5, #4]
 80073f0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80073f4:	049f      	lsls	r7, r3, #18
 80073f6:	d406      	bmi.n	8007406 <__srefill_r+0x2e>
 80073f8:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80073fc:	81a3      	strh	r3, [r4, #12]
 80073fe:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8007400:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8007404:	6663      	str	r3, [r4, #100]	; 0x64
 8007406:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800740a:	2300      	movs	r3, #0
 800740c:	6063      	str	r3, [r4, #4]
 800740e:	b293      	uxth	r3, r2
 8007410:	069e      	lsls	r6, r3, #26
 8007412:	d50c      	bpl.n	800742e <__srefill_r+0x56>
 8007414:	f04f 30ff 	mov.w	r0, #4294967295
 8007418:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800741a:	4b36      	ldr	r3, [pc, #216]	; (80074f4 <__srefill_r+0x11c>)
 800741c:	429c      	cmp	r4, r3
 800741e:	d101      	bne.n	8007424 <__srefill_r+0x4c>
 8007420:	68ac      	ldr	r4, [r5, #8]
 8007422:	e7e5      	b.n	80073f0 <__srefill_r+0x18>
 8007424:	4b34      	ldr	r3, [pc, #208]	; (80074f8 <__srefill_r+0x120>)
 8007426:	429c      	cmp	r4, r3
 8007428:	bf08      	it	eq
 800742a:	68ec      	ldreq	r4, [r5, #12]
 800742c:	e7e0      	b.n	80073f0 <__srefill_r+0x18>
 800742e:	0758      	lsls	r0, r3, #29
 8007430:	d448      	bmi.n	80074c4 <__srefill_r+0xec>
 8007432:	06d9      	lsls	r1, r3, #27
 8007434:	d405      	bmi.n	8007442 <__srefill_r+0x6a>
 8007436:	2309      	movs	r3, #9
 8007438:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800743c:	602b      	str	r3, [r5, #0]
 800743e:	81a2      	strh	r2, [r4, #12]
 8007440:	e7e8      	b.n	8007414 <__srefill_r+0x3c>
 8007442:	071a      	lsls	r2, r3, #28
 8007444:	d50b      	bpl.n	800745e <__srefill_r+0x86>
 8007446:	4621      	mov	r1, r4
 8007448:	4628      	mov	r0, r5
 800744a:	f7fe fcdd 	bl	8005e08 <_fflush_r>
 800744e:	2800      	cmp	r0, #0
 8007450:	d1e0      	bne.n	8007414 <__srefill_r+0x3c>
 8007452:	89a3      	ldrh	r3, [r4, #12]
 8007454:	60a0      	str	r0, [r4, #8]
 8007456:	f023 0308 	bic.w	r3, r3, #8
 800745a:	81a3      	strh	r3, [r4, #12]
 800745c:	61a0      	str	r0, [r4, #24]
 800745e:	89a3      	ldrh	r3, [r4, #12]
 8007460:	f043 0304 	orr.w	r3, r3, #4
 8007464:	81a3      	strh	r3, [r4, #12]
 8007466:	6923      	ldr	r3, [r4, #16]
 8007468:	b91b      	cbnz	r3, 8007472 <__srefill_r+0x9a>
 800746a:	4621      	mov	r1, r4
 800746c:	4628      	mov	r0, r5
 800746e:	f7ff f8c9 	bl	8006604 <__smakebuf_r>
 8007472:	f9b4 700c 	ldrsh.w	r7, [r4, #12]
 8007476:	b2be      	uxth	r6, r7
 8007478:	07b3      	lsls	r3, r6, #30
 800747a:	d00f      	beq.n	800749c <__srefill_r+0xc4>
 800747c:	2301      	movs	r3, #1
 800747e:	81a3      	strh	r3, [r4, #12]
 8007480:	4b1e      	ldr	r3, [pc, #120]	; (80074fc <__srefill_r+0x124>)
 8007482:	491f      	ldr	r1, [pc, #124]	; (8007500 <__srefill_r+0x128>)
 8007484:	6818      	ldr	r0, [r3, #0]
 8007486:	f006 0609 	and.w	r6, r6, #9
 800748a:	f7ff f843 	bl	8006514 <_fwalk>
 800748e:	2e09      	cmp	r6, #9
 8007490:	81a7      	strh	r7, [r4, #12]
 8007492:	d103      	bne.n	800749c <__srefill_r+0xc4>
 8007494:	4621      	mov	r1, r4
 8007496:	4628      	mov	r0, r5
 8007498:	f7fe fc24 	bl	8005ce4 <__sflush_r>
 800749c:	6922      	ldr	r2, [r4, #16]
 800749e:	6022      	str	r2, [r4, #0]
 80074a0:	6a66      	ldr	r6, [r4, #36]	; 0x24
 80074a2:	6963      	ldr	r3, [r4, #20]
 80074a4:	6a21      	ldr	r1, [r4, #32]
 80074a6:	4628      	mov	r0, r5
 80074a8:	47b0      	blx	r6
 80074aa:	2800      	cmp	r0, #0
 80074ac:	6060      	str	r0, [r4, #4]
 80074ae:	dc1c      	bgt.n	80074ea <__srefill_r+0x112>
 80074b0:	89a3      	ldrh	r3, [r4, #12]
 80074b2:	bf17      	itett	ne
 80074b4:	2200      	movne	r2, #0
 80074b6:	f043 0320 	orreq.w	r3, r3, #32
 80074ba:	f043 0340 	orrne.w	r3, r3, #64	; 0x40
 80074be:	6062      	strne	r2, [r4, #4]
 80074c0:	81a3      	strh	r3, [r4, #12]
 80074c2:	e7a7      	b.n	8007414 <__srefill_r+0x3c>
 80074c4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80074c6:	2900      	cmp	r1, #0
 80074c8:	d0cd      	beq.n	8007466 <__srefill_r+0x8e>
 80074ca:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80074ce:	4299      	cmp	r1, r3
 80074d0:	d002      	beq.n	80074d8 <__srefill_r+0x100>
 80074d2:	4628      	mov	r0, r5
 80074d4:	f7fe fe14 	bl	8006100 <_free_r>
 80074d8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80074da:	6063      	str	r3, [r4, #4]
 80074dc:	2000      	movs	r0, #0
 80074de:	6360      	str	r0, [r4, #52]	; 0x34
 80074e0:	2b00      	cmp	r3, #0
 80074e2:	d0c0      	beq.n	8007466 <__srefill_r+0x8e>
 80074e4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80074e6:	6023      	str	r3, [r4, #0]
 80074e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80074ea:	2000      	movs	r0, #0
 80074ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80074ee:	bf00      	nop
 80074f0:	080084cc 	.word	0x080084cc
 80074f4:	080084ec 	.word	0x080084ec
 80074f8:	080084ac 	.word	0x080084ac
 80074fc:	08008424 	.word	0x08008424
 8007500:	080073c5 	.word	0x080073c5

08007504 <_sbrk_r>:
 8007504:	b538      	push	{r3, r4, r5, lr}
 8007506:	4c06      	ldr	r4, [pc, #24]	; (8007520 <_sbrk_r+0x1c>)
 8007508:	2300      	movs	r3, #0
 800750a:	4605      	mov	r5, r0
 800750c:	4608      	mov	r0, r1
 800750e:	6023      	str	r3, [r4, #0]
 8007510:	f7fb f99a 	bl	8002848 <_sbrk>
 8007514:	1c43      	adds	r3, r0, #1
 8007516:	d102      	bne.n	800751e <_sbrk_r+0x1a>
 8007518:	6823      	ldr	r3, [r4, #0]
 800751a:	b103      	cbz	r3, 800751e <_sbrk_r+0x1a>
 800751c:	602b      	str	r3, [r5, #0]
 800751e:	bd38      	pop	{r3, r4, r5, pc}
 8007520:	200026f8 	.word	0x200026f8

08007524 <__sread>:
 8007524:	b510      	push	{r4, lr}
 8007526:	460c      	mov	r4, r1
 8007528:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800752c:	f000 fa66 	bl	80079fc <_read_r>
 8007530:	2800      	cmp	r0, #0
 8007532:	bfab      	itete	ge
 8007534:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8007536:	89a3      	ldrhlt	r3, [r4, #12]
 8007538:	181b      	addge	r3, r3, r0
 800753a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800753e:	bfac      	ite	ge
 8007540:	6563      	strge	r3, [r4, #84]	; 0x54
 8007542:	81a3      	strhlt	r3, [r4, #12]
 8007544:	bd10      	pop	{r4, pc}

08007546 <__swrite>:
 8007546:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800754a:	461f      	mov	r7, r3
 800754c:	898b      	ldrh	r3, [r1, #12]
 800754e:	05db      	lsls	r3, r3, #23
 8007550:	4605      	mov	r5, r0
 8007552:	460c      	mov	r4, r1
 8007554:	4616      	mov	r6, r2
 8007556:	d505      	bpl.n	8007564 <__swrite+0x1e>
 8007558:	2302      	movs	r3, #2
 800755a:	2200      	movs	r2, #0
 800755c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007560:	f000 fa28 	bl	80079b4 <_lseek_r>
 8007564:	89a3      	ldrh	r3, [r4, #12]
 8007566:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800756a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800756e:	81a3      	strh	r3, [r4, #12]
 8007570:	4632      	mov	r2, r6
 8007572:	463b      	mov	r3, r7
 8007574:	4628      	mov	r0, r5
 8007576:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800757a:	f000 b8c5 	b.w	8007708 <_write_r>

0800757e <__sseek>:
 800757e:	b510      	push	{r4, lr}
 8007580:	460c      	mov	r4, r1
 8007582:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007586:	f000 fa15 	bl	80079b4 <_lseek_r>
 800758a:	1c43      	adds	r3, r0, #1
 800758c:	89a3      	ldrh	r3, [r4, #12]
 800758e:	bf15      	itete	ne
 8007590:	6560      	strne	r0, [r4, #84]	; 0x54
 8007592:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8007596:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800759a:	81a3      	strheq	r3, [r4, #12]
 800759c:	bf18      	it	ne
 800759e:	81a3      	strhne	r3, [r4, #12]
 80075a0:	bd10      	pop	{r4, pc}

080075a2 <__sclose>:
 80075a2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80075a6:	f000 b8ef 	b.w	8007788 <_close_r>

080075aa <__ssprint_r>:
 80075aa:	6893      	ldr	r3, [r2, #8]
 80075ac:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80075b0:	4681      	mov	r9, r0
 80075b2:	460c      	mov	r4, r1
 80075b4:	4617      	mov	r7, r2
 80075b6:	2b00      	cmp	r3, #0
 80075b8:	d060      	beq.n	800767c <__ssprint_r+0xd2>
 80075ba:	f04f 0b00 	mov.w	fp, #0
 80075be:	f8d2 a000 	ldr.w	sl, [r2]
 80075c2:	465e      	mov	r6, fp
 80075c4:	b356      	cbz	r6, 800761c <__ssprint_r+0x72>
 80075c6:	68a3      	ldr	r3, [r4, #8]
 80075c8:	429e      	cmp	r6, r3
 80075ca:	d344      	bcc.n	8007656 <__ssprint_r+0xac>
 80075cc:	89a2      	ldrh	r2, [r4, #12]
 80075ce:	f412 6f90 	tst.w	r2, #1152	; 0x480
 80075d2:	d03e      	beq.n	8007652 <__ssprint_r+0xa8>
 80075d4:	6825      	ldr	r5, [r4, #0]
 80075d6:	6921      	ldr	r1, [r4, #16]
 80075d8:	eba5 0801 	sub.w	r8, r5, r1
 80075dc:	6965      	ldr	r5, [r4, #20]
 80075de:	2302      	movs	r3, #2
 80075e0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80075e4:	fb95 f5f3 	sdiv	r5, r5, r3
 80075e8:	f108 0301 	add.w	r3, r8, #1
 80075ec:	4433      	add	r3, r6
 80075ee:	429d      	cmp	r5, r3
 80075f0:	bf38      	it	cc
 80075f2:	461d      	movcc	r5, r3
 80075f4:	0553      	lsls	r3, r2, #21
 80075f6:	d546      	bpl.n	8007686 <__ssprint_r+0xdc>
 80075f8:	4629      	mov	r1, r5
 80075fa:	4648      	mov	r0, r9
 80075fc:	f7ff f84a 	bl	8006694 <_malloc_r>
 8007600:	b998      	cbnz	r0, 800762a <__ssprint_r+0x80>
 8007602:	230c      	movs	r3, #12
 8007604:	f8c9 3000 	str.w	r3, [r9]
 8007608:	89a3      	ldrh	r3, [r4, #12]
 800760a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800760e:	81a3      	strh	r3, [r4, #12]
 8007610:	2300      	movs	r3, #0
 8007612:	60bb      	str	r3, [r7, #8]
 8007614:	607b      	str	r3, [r7, #4]
 8007616:	f04f 30ff 	mov.w	r0, #4294967295
 800761a:	e031      	b.n	8007680 <__ssprint_r+0xd6>
 800761c:	f8da b000 	ldr.w	fp, [sl]
 8007620:	f8da 6004 	ldr.w	r6, [sl, #4]
 8007624:	f10a 0a08 	add.w	sl, sl, #8
 8007628:	e7cc      	b.n	80075c4 <__ssprint_r+0x1a>
 800762a:	4642      	mov	r2, r8
 800762c:	6921      	ldr	r1, [r4, #16]
 800762e:	9001      	str	r0, [sp, #4]
 8007630:	f7ff fa3e 	bl	8006ab0 <memcpy>
 8007634:	89a2      	ldrh	r2, [r4, #12]
 8007636:	9b01      	ldr	r3, [sp, #4]
 8007638:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
 800763c:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8007640:	81a2      	strh	r2, [r4, #12]
 8007642:	6123      	str	r3, [r4, #16]
 8007644:	6165      	str	r5, [r4, #20]
 8007646:	4443      	add	r3, r8
 8007648:	eba5 0508 	sub.w	r5, r5, r8
 800764c:	6023      	str	r3, [r4, #0]
 800764e:	60a5      	str	r5, [r4, #8]
 8007650:	4633      	mov	r3, r6
 8007652:	429e      	cmp	r6, r3
 8007654:	d200      	bcs.n	8007658 <__ssprint_r+0xae>
 8007656:	4633      	mov	r3, r6
 8007658:	461a      	mov	r2, r3
 800765a:	4659      	mov	r1, fp
 800765c:	6820      	ldr	r0, [r4, #0]
 800765e:	9301      	str	r3, [sp, #4]
 8007660:	f7ff fa31 	bl	8006ac6 <memmove>
 8007664:	68a2      	ldr	r2, [r4, #8]
 8007666:	9b01      	ldr	r3, [sp, #4]
 8007668:	1ad2      	subs	r2, r2, r3
 800766a:	60a2      	str	r2, [r4, #8]
 800766c:	6822      	ldr	r2, [r4, #0]
 800766e:	4413      	add	r3, r2
 8007670:	6023      	str	r3, [r4, #0]
 8007672:	68bb      	ldr	r3, [r7, #8]
 8007674:	1b9e      	subs	r6, r3, r6
 8007676:	60be      	str	r6, [r7, #8]
 8007678:	2e00      	cmp	r6, #0
 800767a:	d1cf      	bne.n	800761c <__ssprint_r+0x72>
 800767c:	2000      	movs	r0, #0
 800767e:	6078      	str	r0, [r7, #4]
 8007680:	b003      	add	sp, #12
 8007682:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007686:	462a      	mov	r2, r5
 8007688:	4648      	mov	r0, r9
 800768a:	f7ff fd1b 	bl	80070c4 <_realloc_r>
 800768e:	4603      	mov	r3, r0
 8007690:	2800      	cmp	r0, #0
 8007692:	d1d6      	bne.n	8007642 <__ssprint_r+0x98>
 8007694:	6921      	ldr	r1, [r4, #16]
 8007696:	4648      	mov	r0, r9
 8007698:	f7fe fd32 	bl	8006100 <_free_r>
 800769c:	e7b1      	b.n	8007602 <__ssprint_r+0x58>

0800769e <__sprint_r>:
 800769e:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80076a2:	6893      	ldr	r3, [r2, #8]
 80076a4:	4680      	mov	r8, r0
 80076a6:	460f      	mov	r7, r1
 80076a8:	4614      	mov	r4, r2
 80076aa:	b91b      	cbnz	r3, 80076b4 <__sprint_r+0x16>
 80076ac:	6053      	str	r3, [r2, #4]
 80076ae:	4618      	mov	r0, r3
 80076b0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80076b4:	6e4b      	ldr	r3, [r1, #100]	; 0x64
 80076b6:	049d      	lsls	r5, r3, #18
 80076b8:	d523      	bpl.n	8007702 <__sprint_r+0x64>
 80076ba:	6815      	ldr	r5, [r2, #0]
 80076bc:	68a0      	ldr	r0, [r4, #8]
 80076be:	3508      	adds	r5, #8
 80076c0:	b920      	cbnz	r0, 80076cc <__sprint_r+0x2e>
 80076c2:	2300      	movs	r3, #0
 80076c4:	60a3      	str	r3, [r4, #8]
 80076c6:	6063      	str	r3, [r4, #4]
 80076c8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80076cc:	f855 6c04 	ldr.w	r6, [r5, #-4]
 80076d0:	f855 bc08 	ldr.w	fp, [r5, #-8]
 80076d4:	ea4f 0a96 	mov.w	sl, r6, lsr #2
 80076d8:	f04f 0900 	mov.w	r9, #0
 80076dc:	45ca      	cmp	sl, r9
 80076de:	dc05      	bgt.n	80076ec <__sprint_r+0x4e>
 80076e0:	68a3      	ldr	r3, [r4, #8]
 80076e2:	f026 0603 	bic.w	r6, r6, #3
 80076e6:	1b9e      	subs	r6, r3, r6
 80076e8:	60a6      	str	r6, [r4, #8]
 80076ea:	e7e7      	b.n	80076bc <__sprint_r+0x1e>
 80076ec:	463a      	mov	r2, r7
 80076ee:	f85b 1029 	ldr.w	r1, [fp, r9, lsl #2]
 80076f2:	4640      	mov	r0, r8
 80076f4:	f000 f905 	bl	8007902 <_fputwc_r>
 80076f8:	1c43      	adds	r3, r0, #1
 80076fa:	d0e2      	beq.n	80076c2 <__sprint_r+0x24>
 80076fc:	f109 0901 	add.w	r9, r9, #1
 8007700:	e7ec      	b.n	80076dc <__sprint_r+0x3e>
 8007702:	f7fe fdb9 	bl	8006278 <__sfvwrite_r>
 8007706:	e7dc      	b.n	80076c2 <__sprint_r+0x24>

08007708 <_write_r>:
 8007708:	b538      	push	{r3, r4, r5, lr}
 800770a:	4c07      	ldr	r4, [pc, #28]	; (8007728 <_write_r+0x20>)
 800770c:	4605      	mov	r5, r0
 800770e:	4608      	mov	r0, r1
 8007710:	4611      	mov	r1, r2
 8007712:	2200      	movs	r2, #0
 8007714:	6022      	str	r2, [r4, #0]
 8007716:	461a      	mov	r2, r3
 8007718:	f7fb f85e 	bl	80027d8 <_write>
 800771c:	1c43      	adds	r3, r0, #1
 800771e:	d102      	bne.n	8007726 <_write_r+0x1e>
 8007720:	6823      	ldr	r3, [r4, #0]
 8007722:	b103      	cbz	r3, 8007726 <_write_r+0x1e>
 8007724:	602b      	str	r3, [r5, #0]
 8007726:	bd38      	pop	{r3, r4, r5, pc}
 8007728:	200026f8 	.word	0x200026f8

0800772c <_calloc_r>:
 800772c:	b510      	push	{r4, lr}
 800772e:	4351      	muls	r1, r2
 8007730:	f7fe ffb0 	bl	8006694 <_malloc_r>
 8007734:	4604      	mov	r4, r0
 8007736:	b198      	cbz	r0, 8007760 <_calloc_r+0x34>
 8007738:	f850 2c04 	ldr.w	r2, [r0, #-4]
 800773c:	f022 0203 	bic.w	r2, r2, #3
 8007740:	3a04      	subs	r2, #4
 8007742:	2a24      	cmp	r2, #36	; 0x24
 8007744:	d81b      	bhi.n	800777e <_calloc_r+0x52>
 8007746:	2a13      	cmp	r2, #19
 8007748:	d917      	bls.n	800777a <_calloc_r+0x4e>
 800774a:	2100      	movs	r1, #0
 800774c:	2a1b      	cmp	r2, #27
 800774e:	6001      	str	r1, [r0, #0]
 8007750:	6041      	str	r1, [r0, #4]
 8007752:	d807      	bhi.n	8007764 <_calloc_r+0x38>
 8007754:	f100 0308 	add.w	r3, r0, #8
 8007758:	2200      	movs	r2, #0
 800775a:	601a      	str	r2, [r3, #0]
 800775c:	605a      	str	r2, [r3, #4]
 800775e:	609a      	str	r2, [r3, #8]
 8007760:	4620      	mov	r0, r4
 8007762:	bd10      	pop	{r4, pc}
 8007764:	2a24      	cmp	r2, #36	; 0x24
 8007766:	6081      	str	r1, [r0, #8]
 8007768:	60c1      	str	r1, [r0, #12]
 800776a:	bf11      	iteee	ne
 800776c:	f100 0310 	addne.w	r3, r0, #16
 8007770:	6101      	streq	r1, [r0, #16]
 8007772:	f100 0318 	addeq.w	r3, r0, #24
 8007776:	6141      	streq	r1, [r0, #20]
 8007778:	e7ee      	b.n	8007758 <_calloc_r+0x2c>
 800777a:	4603      	mov	r3, r0
 800777c:	e7ec      	b.n	8007758 <_calloc_r+0x2c>
 800777e:	2100      	movs	r1, #0
 8007780:	f7ff f9bb 	bl	8006afa <memset>
 8007784:	e7ec      	b.n	8007760 <_calloc_r+0x34>
	...

08007788 <_close_r>:
 8007788:	b538      	push	{r3, r4, r5, lr}
 800778a:	4c06      	ldr	r4, [pc, #24]	; (80077a4 <_close_r+0x1c>)
 800778c:	2300      	movs	r3, #0
 800778e:	4605      	mov	r5, r0
 8007790:	4608      	mov	r0, r1
 8007792:	6023      	str	r3, [r4, #0]
 8007794:	f7fb f878 	bl	8002888 <_close>
 8007798:	1c43      	adds	r3, r0, #1
 800779a:	d102      	bne.n	80077a2 <_close_r+0x1a>
 800779c:	6823      	ldr	r3, [r4, #0]
 800779e:	b103      	cbz	r3, 80077a2 <_close_r+0x1a>
 80077a0:	602b      	str	r3, [r5, #0]
 80077a2:	bd38      	pop	{r3, r4, r5, pc}
 80077a4:	200026f8 	.word	0x200026f8

080077a8 <_fclose_r>:
 80077a8:	b570      	push	{r4, r5, r6, lr}
 80077aa:	4605      	mov	r5, r0
 80077ac:	460c      	mov	r4, r1
 80077ae:	b911      	cbnz	r1, 80077b6 <_fclose_r+0xe>
 80077b0:	2600      	movs	r6, #0
 80077b2:	4630      	mov	r0, r6
 80077b4:	bd70      	pop	{r4, r5, r6, pc}
 80077b6:	b118      	cbz	r0, 80077c0 <_fclose_r+0x18>
 80077b8:	6983      	ldr	r3, [r0, #24]
 80077ba:	b90b      	cbnz	r3, 80077c0 <_fclose_r+0x18>
 80077bc:	f7fe fbca 	bl	8005f54 <__sinit>
 80077c0:	4b2c      	ldr	r3, [pc, #176]	; (8007874 <_fclose_r+0xcc>)
 80077c2:	429c      	cmp	r4, r3
 80077c4:	d114      	bne.n	80077f0 <_fclose_r+0x48>
 80077c6:	686c      	ldr	r4, [r5, #4]
 80077c8:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80077ca:	07d8      	lsls	r0, r3, #31
 80077cc:	d405      	bmi.n	80077da <_fclose_r+0x32>
 80077ce:	89a3      	ldrh	r3, [r4, #12]
 80077d0:	0599      	lsls	r1, r3, #22
 80077d2:	d402      	bmi.n	80077da <_fclose_r+0x32>
 80077d4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80077d6:	f7fe fee7 	bl	80065a8 <__retarget_lock_acquire_recursive>
 80077da:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80077de:	b98b      	cbnz	r3, 8007804 <_fclose_r+0x5c>
 80077e0:	6e66      	ldr	r6, [r4, #100]	; 0x64
 80077e2:	f016 0601 	ands.w	r6, r6, #1
 80077e6:	d1e3      	bne.n	80077b0 <_fclose_r+0x8>
 80077e8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80077ea:	f7fe fede 	bl	80065aa <__retarget_lock_release_recursive>
 80077ee:	e7e0      	b.n	80077b2 <_fclose_r+0xa>
 80077f0:	4b21      	ldr	r3, [pc, #132]	; (8007878 <_fclose_r+0xd0>)
 80077f2:	429c      	cmp	r4, r3
 80077f4:	d101      	bne.n	80077fa <_fclose_r+0x52>
 80077f6:	68ac      	ldr	r4, [r5, #8]
 80077f8:	e7e6      	b.n	80077c8 <_fclose_r+0x20>
 80077fa:	4b20      	ldr	r3, [pc, #128]	; (800787c <_fclose_r+0xd4>)
 80077fc:	429c      	cmp	r4, r3
 80077fe:	bf08      	it	eq
 8007800:	68ec      	ldreq	r4, [r5, #12]
 8007802:	e7e1      	b.n	80077c8 <_fclose_r+0x20>
 8007804:	4621      	mov	r1, r4
 8007806:	4628      	mov	r0, r5
 8007808:	f7fe fa6c 	bl	8005ce4 <__sflush_r>
 800780c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800780e:	4606      	mov	r6, r0
 8007810:	b133      	cbz	r3, 8007820 <_fclose_r+0x78>
 8007812:	6a21      	ldr	r1, [r4, #32]
 8007814:	4628      	mov	r0, r5
 8007816:	4798      	blx	r3
 8007818:	2800      	cmp	r0, #0
 800781a:	bfb8      	it	lt
 800781c:	f04f 36ff 	movlt.w	r6, #4294967295
 8007820:	89a3      	ldrh	r3, [r4, #12]
 8007822:	061a      	lsls	r2, r3, #24
 8007824:	d503      	bpl.n	800782e <_fclose_r+0x86>
 8007826:	6921      	ldr	r1, [r4, #16]
 8007828:	4628      	mov	r0, r5
 800782a:	f7fe fc69 	bl	8006100 <_free_r>
 800782e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8007830:	b141      	cbz	r1, 8007844 <_fclose_r+0x9c>
 8007832:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8007836:	4299      	cmp	r1, r3
 8007838:	d002      	beq.n	8007840 <_fclose_r+0x98>
 800783a:	4628      	mov	r0, r5
 800783c:	f7fe fc60 	bl	8006100 <_free_r>
 8007840:	2300      	movs	r3, #0
 8007842:	6363      	str	r3, [r4, #52]	; 0x34
 8007844:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8007846:	b121      	cbz	r1, 8007852 <_fclose_r+0xaa>
 8007848:	4628      	mov	r0, r5
 800784a:	f7fe fc59 	bl	8006100 <_free_r>
 800784e:	2300      	movs	r3, #0
 8007850:	64a3      	str	r3, [r4, #72]	; 0x48
 8007852:	f7fe fb67 	bl	8005f24 <__sfp_lock_acquire>
 8007856:	2300      	movs	r3, #0
 8007858:	81a3      	strh	r3, [r4, #12]
 800785a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800785c:	07db      	lsls	r3, r3, #31
 800785e:	d402      	bmi.n	8007866 <_fclose_r+0xbe>
 8007860:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8007862:	f7fe fea2 	bl	80065aa <__retarget_lock_release_recursive>
 8007866:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8007868:	f7fe fe9d 	bl	80065a6 <__retarget_lock_close_recursive>
 800786c:	f7fe fb60 	bl	8005f30 <__sfp_lock_release>
 8007870:	e79f      	b.n	80077b2 <_fclose_r+0xa>
 8007872:	bf00      	nop
 8007874:	080084cc 	.word	0x080084cc
 8007878:	080084ec 	.word	0x080084ec
 800787c:	080084ac 	.word	0x080084ac

08007880 <__fputwc>:
 8007880:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8007884:	4680      	mov	r8, r0
 8007886:	460e      	mov	r6, r1
 8007888:	4614      	mov	r4, r2
 800788a:	f000 f885 	bl	8007998 <__locale_mb_cur_max>
 800788e:	2801      	cmp	r0, #1
 8007890:	d11c      	bne.n	80078cc <__fputwc+0x4c>
 8007892:	1e73      	subs	r3, r6, #1
 8007894:	2bfe      	cmp	r3, #254	; 0xfe
 8007896:	d819      	bhi.n	80078cc <__fputwc+0x4c>
 8007898:	f88d 6004 	strb.w	r6, [sp, #4]
 800789c:	4605      	mov	r5, r0
 800789e:	2700      	movs	r7, #0
 80078a0:	f10d 0904 	add.w	r9, sp, #4
 80078a4:	42af      	cmp	r7, r5
 80078a6:	d020      	beq.n	80078ea <__fputwc+0x6a>
 80078a8:	68a3      	ldr	r3, [r4, #8]
 80078aa:	f817 1009 	ldrb.w	r1, [r7, r9]
 80078ae:	3b01      	subs	r3, #1
 80078b0:	2b00      	cmp	r3, #0
 80078b2:	60a3      	str	r3, [r4, #8]
 80078b4:	da04      	bge.n	80078c0 <__fputwc+0x40>
 80078b6:	69a2      	ldr	r2, [r4, #24]
 80078b8:	4293      	cmp	r3, r2
 80078ba:	db1a      	blt.n	80078f2 <__fputwc+0x72>
 80078bc:	290a      	cmp	r1, #10
 80078be:	d018      	beq.n	80078f2 <__fputwc+0x72>
 80078c0:	6823      	ldr	r3, [r4, #0]
 80078c2:	1c5a      	adds	r2, r3, #1
 80078c4:	6022      	str	r2, [r4, #0]
 80078c6:	7019      	strb	r1, [r3, #0]
 80078c8:	3701      	adds	r7, #1
 80078ca:	e7eb      	b.n	80078a4 <__fputwc+0x24>
 80078cc:	4632      	mov	r2, r6
 80078ce:	f104 035c 	add.w	r3, r4, #92	; 0x5c
 80078d2:	a901      	add	r1, sp, #4
 80078d4:	4640      	mov	r0, r8
 80078d6:	f000 f8a3 	bl	8007a20 <_wcrtomb_r>
 80078da:	1c42      	adds	r2, r0, #1
 80078dc:	4605      	mov	r5, r0
 80078de:	d1de      	bne.n	800789e <__fputwc+0x1e>
 80078e0:	89a3      	ldrh	r3, [r4, #12]
 80078e2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80078e6:	81a3      	strh	r3, [r4, #12]
 80078e8:	4606      	mov	r6, r0
 80078ea:	4630      	mov	r0, r6
 80078ec:	b003      	add	sp, #12
 80078ee:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80078f2:	4622      	mov	r2, r4
 80078f4:	4640      	mov	r0, r8
 80078f6:	f7fd facf 	bl	8004e98 <__swbuf_r>
 80078fa:	1c43      	adds	r3, r0, #1
 80078fc:	d1e4      	bne.n	80078c8 <__fputwc+0x48>
 80078fe:	4606      	mov	r6, r0
 8007900:	e7f3      	b.n	80078ea <__fputwc+0x6a>

08007902 <_fputwc_r>:
 8007902:	6e53      	ldr	r3, [r2, #100]	; 0x64
 8007904:	07db      	lsls	r3, r3, #31
 8007906:	b570      	push	{r4, r5, r6, lr}
 8007908:	4605      	mov	r5, r0
 800790a:	460e      	mov	r6, r1
 800790c:	4614      	mov	r4, r2
 800790e:	d405      	bmi.n	800791c <_fputwc_r+0x1a>
 8007910:	8993      	ldrh	r3, [r2, #12]
 8007912:	0598      	lsls	r0, r3, #22
 8007914:	d402      	bmi.n	800791c <_fputwc_r+0x1a>
 8007916:	6d90      	ldr	r0, [r2, #88]	; 0x58
 8007918:	f7fe fe46 	bl	80065a8 <__retarget_lock_acquire_recursive>
 800791c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8007920:	0499      	lsls	r1, r3, #18
 8007922:	d406      	bmi.n	8007932 <_fputwc_r+0x30>
 8007924:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8007928:	81a3      	strh	r3, [r4, #12]
 800792a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800792c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8007930:	6663      	str	r3, [r4, #100]	; 0x64
 8007932:	4622      	mov	r2, r4
 8007934:	4628      	mov	r0, r5
 8007936:	4631      	mov	r1, r6
 8007938:	f7ff ffa2 	bl	8007880 <__fputwc>
 800793c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800793e:	07da      	lsls	r2, r3, #31
 8007940:	4605      	mov	r5, r0
 8007942:	d405      	bmi.n	8007950 <_fputwc_r+0x4e>
 8007944:	89a3      	ldrh	r3, [r4, #12]
 8007946:	059b      	lsls	r3, r3, #22
 8007948:	d402      	bmi.n	8007950 <_fputwc_r+0x4e>
 800794a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800794c:	f7fe fe2d 	bl	80065aa <__retarget_lock_release_recursive>
 8007950:	4628      	mov	r0, r5
 8007952:	bd70      	pop	{r4, r5, r6, pc}

08007954 <_fstat_r>:
 8007954:	b538      	push	{r3, r4, r5, lr}
 8007956:	4c07      	ldr	r4, [pc, #28]	; (8007974 <_fstat_r+0x20>)
 8007958:	2300      	movs	r3, #0
 800795a:	4605      	mov	r5, r0
 800795c:	4608      	mov	r0, r1
 800795e:	4611      	mov	r1, r2
 8007960:	6023      	str	r3, [r4, #0]
 8007962:	f7fa ffa3 	bl	80028ac <_fstat>
 8007966:	1c43      	adds	r3, r0, #1
 8007968:	d102      	bne.n	8007970 <_fstat_r+0x1c>
 800796a:	6823      	ldr	r3, [r4, #0]
 800796c:	b103      	cbz	r3, 8007970 <_fstat_r+0x1c>
 800796e:	602b      	str	r3, [r5, #0]
 8007970:	bd38      	pop	{r3, r4, r5, pc}
 8007972:	bf00      	nop
 8007974:	200026f8 	.word	0x200026f8

08007978 <_isatty_r>:
 8007978:	b538      	push	{r3, r4, r5, lr}
 800797a:	4c06      	ldr	r4, [pc, #24]	; (8007994 <_isatty_r+0x1c>)
 800797c:	2300      	movs	r3, #0
 800797e:	4605      	mov	r5, r0
 8007980:	4608      	mov	r0, r1
 8007982:	6023      	str	r3, [r4, #0]
 8007984:	f7fa ffa4 	bl	80028d0 <_isatty>
 8007988:	1c43      	adds	r3, r0, #1
 800798a:	d102      	bne.n	8007992 <_isatty_r+0x1a>
 800798c:	6823      	ldr	r3, [r4, #0]
 800798e:	b103      	cbz	r3, 8007992 <_isatty_r+0x1a>
 8007990:	602b      	str	r3, [r5, #0]
 8007992:	bd38      	pop	{r3, r4, r5, pc}
 8007994:	200026f8 	.word	0x200026f8

08007998 <__locale_mb_cur_max>:
 8007998:	4b04      	ldr	r3, [pc, #16]	; (80079ac <__locale_mb_cur_max+0x14>)
 800799a:	4a05      	ldr	r2, [pc, #20]	; (80079b0 <__locale_mb_cur_max+0x18>)
 800799c:	681b      	ldr	r3, [r3, #0]
 800799e:	6a1b      	ldr	r3, [r3, #32]
 80079a0:	2b00      	cmp	r3, #0
 80079a2:	bf08      	it	eq
 80079a4:	4613      	moveq	r3, r2
 80079a6:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
 80079aa:	4770      	bx	lr
 80079ac:	20000010 	.word	0x20000010
 80079b0:	20000514 	.word	0x20000514

080079b4 <_lseek_r>:
 80079b4:	b538      	push	{r3, r4, r5, lr}
 80079b6:	4c07      	ldr	r4, [pc, #28]	; (80079d4 <_lseek_r+0x20>)
 80079b8:	4605      	mov	r5, r0
 80079ba:	4608      	mov	r0, r1
 80079bc:	4611      	mov	r1, r2
 80079be:	2200      	movs	r2, #0
 80079c0:	6022      	str	r2, [r4, #0]
 80079c2:	461a      	mov	r2, r3
 80079c4:	f7fa ff94 	bl	80028f0 <_lseek>
 80079c8:	1c43      	adds	r3, r0, #1
 80079ca:	d102      	bne.n	80079d2 <_lseek_r+0x1e>
 80079cc:	6823      	ldr	r3, [r4, #0]
 80079ce:	b103      	cbz	r3, 80079d2 <_lseek_r+0x1e>
 80079d0:	602b      	str	r3, [r5, #0]
 80079d2:	bd38      	pop	{r3, r4, r5, pc}
 80079d4:	200026f8 	.word	0x200026f8

080079d8 <__ascii_mbtowc>:
 80079d8:	b082      	sub	sp, #8
 80079da:	b901      	cbnz	r1, 80079de <__ascii_mbtowc+0x6>
 80079dc:	a901      	add	r1, sp, #4
 80079de:	b142      	cbz	r2, 80079f2 <__ascii_mbtowc+0x1a>
 80079e0:	b14b      	cbz	r3, 80079f6 <__ascii_mbtowc+0x1e>
 80079e2:	7813      	ldrb	r3, [r2, #0]
 80079e4:	600b      	str	r3, [r1, #0]
 80079e6:	7812      	ldrb	r2, [r2, #0]
 80079e8:	1c10      	adds	r0, r2, #0
 80079ea:	bf18      	it	ne
 80079ec:	2001      	movne	r0, #1
 80079ee:	b002      	add	sp, #8
 80079f0:	4770      	bx	lr
 80079f2:	4610      	mov	r0, r2
 80079f4:	e7fb      	b.n	80079ee <__ascii_mbtowc+0x16>
 80079f6:	f06f 0001 	mvn.w	r0, #1
 80079fa:	e7f8      	b.n	80079ee <__ascii_mbtowc+0x16>

080079fc <_read_r>:
 80079fc:	b538      	push	{r3, r4, r5, lr}
 80079fe:	4c07      	ldr	r4, [pc, #28]	; (8007a1c <_read_r+0x20>)
 8007a00:	4605      	mov	r5, r0
 8007a02:	4608      	mov	r0, r1
 8007a04:	4611      	mov	r1, r2
 8007a06:	2200      	movs	r2, #0
 8007a08:	6022      	str	r2, [r4, #0]
 8007a0a:	461a      	mov	r2, r3
 8007a0c:	f7fa ff06 	bl	800281c <_read>
 8007a10:	1c43      	adds	r3, r0, #1
 8007a12:	d102      	bne.n	8007a1a <_read_r+0x1e>
 8007a14:	6823      	ldr	r3, [r4, #0]
 8007a16:	b103      	cbz	r3, 8007a1a <_read_r+0x1e>
 8007a18:	602b      	str	r3, [r5, #0]
 8007a1a:	bd38      	pop	{r3, r4, r5, pc}
 8007a1c:	200026f8 	.word	0x200026f8

08007a20 <_wcrtomb_r>:
 8007a20:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007a22:	4605      	mov	r5, r0
 8007a24:	b085      	sub	sp, #20
 8007a26:	461e      	mov	r6, r3
 8007a28:	460f      	mov	r7, r1
 8007a2a:	4c0f      	ldr	r4, [pc, #60]	; (8007a68 <_wcrtomb_r+0x48>)
 8007a2c:	b991      	cbnz	r1, 8007a54 <_wcrtomb_r+0x34>
 8007a2e:	6822      	ldr	r2, [r4, #0]
 8007a30:	490e      	ldr	r1, [pc, #56]	; (8007a6c <_wcrtomb_r+0x4c>)
 8007a32:	6a12      	ldr	r2, [r2, #32]
 8007a34:	2a00      	cmp	r2, #0
 8007a36:	bf08      	it	eq
 8007a38:	460a      	moveq	r2, r1
 8007a3a:	a901      	add	r1, sp, #4
 8007a3c:	f8d2 40e0 	ldr.w	r4, [r2, #224]	; 0xe0
 8007a40:	463a      	mov	r2, r7
 8007a42:	47a0      	blx	r4
 8007a44:	1c43      	adds	r3, r0, #1
 8007a46:	bf01      	itttt	eq
 8007a48:	2300      	moveq	r3, #0
 8007a4a:	6033      	streq	r3, [r6, #0]
 8007a4c:	238a      	moveq	r3, #138	; 0x8a
 8007a4e:	602b      	streq	r3, [r5, #0]
 8007a50:	b005      	add	sp, #20
 8007a52:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007a54:	6824      	ldr	r4, [r4, #0]
 8007a56:	4f05      	ldr	r7, [pc, #20]	; (8007a6c <_wcrtomb_r+0x4c>)
 8007a58:	6a24      	ldr	r4, [r4, #32]
 8007a5a:	2c00      	cmp	r4, #0
 8007a5c:	bf08      	it	eq
 8007a5e:	463c      	moveq	r4, r7
 8007a60:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
 8007a64:	e7ed      	b.n	8007a42 <_wcrtomb_r+0x22>
 8007a66:	bf00      	nop
 8007a68:	20000010 	.word	0x20000010
 8007a6c:	20000514 	.word	0x20000514

08007a70 <__ascii_wctomb>:
 8007a70:	b149      	cbz	r1, 8007a86 <__ascii_wctomb+0x16>
 8007a72:	2aff      	cmp	r2, #255	; 0xff
 8007a74:	bf85      	ittet	hi
 8007a76:	238a      	movhi	r3, #138	; 0x8a
 8007a78:	6003      	strhi	r3, [r0, #0]
 8007a7a:	700a      	strbls	r2, [r1, #0]
 8007a7c:	f04f 30ff 	movhi.w	r0, #4294967295
 8007a80:	bf98      	it	ls
 8007a82:	2001      	movls	r0, #1
 8007a84:	4770      	bx	lr
 8007a86:	4608      	mov	r0, r1
 8007a88:	4770      	bx	lr
	...

08007a8c <_init>:
 8007a8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007a8e:	bf00      	nop
 8007a90:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007a92:	bc08      	pop	{r3}
 8007a94:	469e      	mov	lr, r3
 8007a96:	4770      	bx	lr

08007a98 <_fini>:
 8007a98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007a9a:	bf00      	nop
 8007a9c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007a9e:	bc08      	pop	{r3}
 8007aa0:	469e      	mov	lr, r3
 8007aa2:	4770      	bx	lr
