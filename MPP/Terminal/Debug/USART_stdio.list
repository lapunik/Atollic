
C:\Users\petr\Documents\STM32F411\TrueSTUDIO\USART_stdio\Debug\USART_stdio.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000010cc  08000198  08000198  00010198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000078  08001264  08001264  00011264  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .init_array   00000004  080012dc  080012dc  000112dc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .fini_array   00000004  080012e0  080012e0  000112e0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .data         00000064  20000000  080012e4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .bss          0000002c  20000064  08001348  00020064  2**2
                  ALLOC
  7 ._user_heap_stack 00000400  20000090  08001348  00020090  2**0
                  ALLOC
  8 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
  9 .debug_info   000019d1  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00000523  00000000  00000000  00021a65  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00000168  00000000  00000000  00021f88  2**3
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000120  00000000  00000000  000220f0  2**3
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00000a52  00000000  00000000  00022210  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    000009cc  00000000  00000000  00022c62  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .comment      0000007e  00000000  00000000  0002362e  2**0
                  CONTENTS, READONLY
 16 .debug_frame  00000b08  00000000  00000000  000236ac  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	; (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	; (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000064 	.word	0x20000064
 80001b4:	00000000 	.word	0x00000000
 80001b8:	0800124c 	.word	0x0800124c

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	; (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	; (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	; (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000068 	.word	0x20000068
 80001d4:	0800124c 	.word	0x0800124c

080001d8 <__sputc_r>:
#else
#define __sgetc_r(__ptr, __p) __sgetc_raw_r(__ptr, __p)
#endif

#ifdef __GNUC__
_ELIDABLE_INLINE int __sputc_r(struct _reent *_ptr, int _c, FILE *_p) {
 80001d8:	b580      	push	{r7, lr}
 80001da:	b084      	sub	sp, #16
 80001dc:	af00      	add	r7, sp, #0
 80001de:	60f8      	str	r0, [r7, #12]
 80001e0:	60b9      	str	r1, [r7, #8]
 80001e2:	607a      	str	r2, [r7, #4]
#ifdef __SCLE
	if ((_p->_flags & __SCLE) && _c == '\n')
	  __sputc_r (_ptr, '\r', _p);
#endif
	if (--_p->_w >= 0 || (_p->_w >= _p->_lbfsize && (char)_c != '\n'))
 80001e4:	687b      	ldr	r3, [r7, #4]
 80001e6:	689b      	ldr	r3, [r3, #8]
 80001e8:	1e5a      	subs	r2, r3, #1
 80001ea:	687b      	ldr	r3, [r7, #4]
 80001ec:	609a      	str	r2, [r3, #8]
 80001ee:	687b      	ldr	r3, [r7, #4]
 80001f0:	689b      	ldr	r3, [r3, #8]
 80001f2:	2b00      	cmp	r3, #0
 80001f4:	da09      	bge.n	800020a <__sputc_r+0x32>
 80001f6:	687b      	ldr	r3, [r7, #4]
 80001f8:	689a      	ldr	r2, [r3, #8]
 80001fa:	687b      	ldr	r3, [r7, #4]
 80001fc:	699b      	ldr	r3, [r3, #24]
 80001fe:	429a      	cmp	r2, r3
 8000200:	db0d      	blt.n	800021e <__sputc_r+0x46>
 8000202:	68bb      	ldr	r3, [r7, #8]
 8000204:	b2db      	uxtb	r3, r3
 8000206:	2b0a      	cmp	r3, #10
 8000208:	d009      	beq.n	800021e <__sputc_r+0x46>
		return (*_p->_p++ = _c);
 800020a:	687b      	ldr	r3, [r7, #4]
 800020c:	681b      	ldr	r3, [r3, #0]
 800020e:	1c59      	adds	r1, r3, #1
 8000210:	687a      	ldr	r2, [r7, #4]
 8000212:	6011      	str	r1, [r2, #0]
 8000214:	68ba      	ldr	r2, [r7, #8]
 8000216:	b2d2      	uxtb	r2, r2
 8000218:	701a      	strb	r2, [r3, #0]
 800021a:	781b      	ldrb	r3, [r3, #0]
 800021c:	e005      	b.n	800022a <__sputc_r+0x52>
	else
		return (__swbuf_r(_ptr, _c, _p));
 800021e:	687a      	ldr	r2, [r7, #4]
 8000220:	68b9      	ldr	r1, [r7, #8]
 8000222:	68f8      	ldr	r0, [r7, #12]
 8000224:	f000 fb3a 	bl	800089c <__swbuf_r>
 8000228:	4603      	mov	r3, r0
}
 800022a:	4618      	mov	r0, r3
 800022c:	3710      	adds	r7, #16
 800022e:	46bd      	mov	sp, r7
 8000230:	bd80      	pop	{r7, pc}
 8000232:	bf00      	nop

08000234 <main>:
**  Abstract: main program
**
**===========================================================================
*/
int main(void)
{
 8000234:	b580      	push	{r7, lr}
 8000236:	b082      	sub	sp, #8
 8000238:	af00      	add	r7, sp, #0

  /* TODO - Add your application code here */

  unsigned int keycode;

  if(!(RCC->APB1ENR & RCC_APB1ENR_USART2EN))
 800023a:	4b50      	ldr	r3, [pc, #320]	; (800037c <main+0x148>)
 800023c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800023e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000242:	2b00      	cmp	r3, #0
 8000244:	d112      	bne.n	800026c <main+0x38>
  {
    RCC->APB1ENR |= RCC_APB1ENR_USART2EN;
 8000246:	4a4d      	ldr	r2, [pc, #308]	; (800037c <main+0x148>)
 8000248:	4b4c      	ldr	r3, [pc, #304]	; (800037c <main+0x148>)
 800024a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800024c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000250:	6413      	str	r3, [r2, #64]	; 0x40
    RCC->APB1RSTR |= RCC_APB1RSTR_USART2RST;
 8000252:	4a4a      	ldr	r2, [pc, #296]	; (800037c <main+0x148>)
 8000254:	4b49      	ldr	r3, [pc, #292]	; (800037c <main+0x148>)
 8000256:	6a1b      	ldr	r3, [r3, #32]
 8000258:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800025c:	6213      	str	r3, [r2, #32]
  \brief   No Operation
  \details No Operation does nothing. This instruction can be used for code alignment purposes.
 */
__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
{
  __ASM volatile ("nop");
 800025e:	bf00      	nop
    __NOP();
    RCC->APB1RSTR &= ~RCC_APB1RSTR_USART2RST;
 8000260:	4a46      	ldr	r2, [pc, #280]	; (800037c <main+0x148>)
 8000262:	4b46      	ldr	r3, [pc, #280]	; (800037c <main+0x148>)
 8000264:	6a1b      	ldr	r3, [r3, #32]
 8000266:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 800026a:	6213      	str	r3, [r2, #32]
  }

  USART2->CR1 = USART_CR1_TE | USART_CR1_RE;
 800026c:	4b44      	ldr	r3, [pc, #272]	; (8000380 <main+0x14c>)
 800026e:	220c      	movs	r2, #12
 8000270:	60da      	str	r2, [r3, #12]
  USART2->CR2 = 0U;
 8000272:	4b43      	ldr	r3, [pc, #268]	; (8000380 <main+0x14c>)
 8000274:	2200      	movs	r2, #0
 8000276:	611a      	str	r2, [r3, #16]
  USART2->CR3 = 0U;
 8000278:	4b41      	ldr	r3, [pc, #260]	; (8000380 <main+0x14c>)
 800027a:	2200      	movs	r2, #0
 800027c:	615a      	str	r2, [r3, #20]
  USART2->BRR = BIT_RATE_38400_16MHz;
 800027e:	4b40      	ldr	r3, [pc, #256]	; (8000380 <main+0x14c>)
 8000280:	f240 12a1 	movw	r2, #417	; 0x1a1
 8000284:	609a      	str	r2, [r3, #8]
  USART2->CR1 |= USART_CR1_UE;
 8000286:	4a3e      	ldr	r2, [pc, #248]	; (8000380 <main+0x14c>)
 8000288:	4b3d      	ldr	r3, [pc, #244]	; (8000380 <main+0x14c>)
 800028a:	68db      	ldr	r3, [r3, #12]
 800028c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000290:	60d3      	str	r3, [r2, #12]


  if(!(RCC->AHB1ENR & RCC_AHB1ENR_GPIOAEN))
 8000292:	4b3a      	ldr	r3, [pc, #232]	; (800037c <main+0x148>)
 8000294:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000296:	f003 0301 	and.w	r3, r3, #1
 800029a:	2b00      	cmp	r3, #0
 800029c:	d112      	bne.n	80002c4 <main+0x90>
  {
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN;
 800029e:	4a37      	ldr	r2, [pc, #220]	; (800037c <main+0x148>)
 80002a0:	4b36      	ldr	r3, [pc, #216]	; (800037c <main+0x148>)
 80002a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002a4:	f043 0301 	orr.w	r3, r3, #1
 80002a8:	6313      	str	r3, [r2, #48]	; 0x30
    RCC->AHB1RSTR |= RCC_AHB1RSTR_GPIOARST;
 80002aa:	4a34      	ldr	r2, [pc, #208]	; (800037c <main+0x148>)
 80002ac:	4b33      	ldr	r3, [pc, #204]	; (800037c <main+0x148>)
 80002ae:	691b      	ldr	r3, [r3, #16]
 80002b0:	f043 0301 	orr.w	r3, r3, #1
 80002b4:	6113      	str	r3, [r2, #16]
 80002b6:	bf00      	nop
    __NOP();
    RCC->AHB1RSTR &= ~RCC_AHB1RSTR_GPIOARST;
 80002b8:	4a30      	ldr	r2, [pc, #192]	; (800037c <main+0x148>)
 80002ba:	4b30      	ldr	r3, [pc, #192]	; (800037c <main+0x148>)
 80002bc:	691b      	ldr	r3, [r3, #16]
 80002be:	f023 0301 	bic.w	r3, r3, #1
 80002c2:	6113      	str	r3, [r2, #16]
  }

  GPIOA->MODER = ((GPIOA->MODER & ~(GPIO_MODER_MODER3 | GPIO_MODER_MODER2)) | GPIO_MODER_MODER3_1 | GPIO_MODER_MODER2_1 );
 80002c4:	4a2f      	ldr	r2, [pc, #188]	; (8000384 <main+0x150>)
 80002c6:	4b2f      	ldr	r3, [pc, #188]	; (8000384 <main+0x150>)
 80002c8:	681b      	ldr	r3, [r3, #0]
 80002ca:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80002ce:	f043 03a0 	orr.w	r3, r3, #160	; 0xa0
 80002d2:	6013      	str	r3, [r2, #0]
  GPIOA->OTYPER &= ~ GPIO_OTYPER_OT_2;
 80002d4:	4a2b      	ldr	r2, [pc, #172]	; (8000384 <main+0x150>)
 80002d6:	4b2b      	ldr	r3, [pc, #172]	; (8000384 <main+0x150>)
 80002d8:	685b      	ldr	r3, [r3, #4]
 80002da:	f023 0304 	bic.w	r3, r3, #4
 80002de:	6053      	str	r3, [r2, #4]
  GPIOA->OSPEEDR |= GPIO_OSPEEDER_OSPEEDR2;
 80002e0:	4a28      	ldr	r2, [pc, #160]	; (8000384 <main+0x150>)
 80002e2:	4b28      	ldr	r3, [pc, #160]	; (8000384 <main+0x150>)
 80002e4:	689b      	ldr	r3, [r3, #8]
 80002e6:	f043 0330 	orr.w	r3, r3, #48	; 0x30
 80002ea:	6093      	str	r3, [r2, #8]
  GPIOA->PUPDR &= ~(GPIO_PUPDR_PUPDR3 | GPIO_PUPDR_PUPDR2);
 80002ec:	4a25      	ldr	r2, [pc, #148]	; (8000384 <main+0x150>)
 80002ee:	4b25      	ldr	r3, [pc, #148]	; (8000384 <main+0x150>)
 80002f0:	68db      	ldr	r3, [r3, #12]
 80002f2:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80002f6:	60d3      	str	r3, [r2, #12]
  GPIOA->AFR[0] = (GPIOA->AFR[0] & 0xFFFF00FF) | 0x00007700;
 80002f8:	4a22      	ldr	r2, [pc, #136]	; (8000384 <main+0x150>)
 80002fa:	4b22      	ldr	r3, [pc, #136]	; (8000384 <main+0x150>)
 80002fc:	6a1b      	ldr	r3, [r3, #32]
 80002fe:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8000302:	f443 43ee 	orr.w	r3, r3, #30464	; 0x7700
 8000306:	6213      	str	r3, [r2, #32]

  setvbuf(stdout, NULL, _IONBF, 0);
 8000308:	4b1f      	ldr	r3, [pc, #124]	; (8000388 <main+0x154>)
 800030a:	681b      	ldr	r3, [r3, #0]
 800030c:	6898      	ldr	r0, [r3, #8]
 800030e:	2300      	movs	r3, #0
 8000310:	2202      	movs	r2, #2
 8000312:	2100      	movs	r1, #0
 8000314:	f000 fa18 	bl	8000748 <setvbuf>
  setvbuf(stdin, NULL, _IONBF, 0);
 8000318:	4b1b      	ldr	r3, [pc, #108]	; (8000388 <main+0x154>)
 800031a:	681b      	ldr	r3, [r3, #0]
 800031c:	6858      	ldr	r0, [r3, #4]
 800031e:	2300      	movs	r3, #0
 8000320:	2202      	movs	r2, #2
 8000322:	2100      	movs	r1, #0
 8000324:	f000 fa10 	bl	8000748 <setvbuf>

  puts("Test stdio ...");
 8000328:	4818      	ldr	r0, [pc, #96]	; (800038c <main+0x158>)
 800032a:	f000 f9d9 	bl	80006e0 <puts>

  while(1)
  {
    keycode = getchar();
 800032e:	4b16      	ldr	r3, [pc, #88]	; (8000388 <main+0x154>)
 8000330:	681b      	ldr	r3, [r3, #0]
 8000332:	685b      	ldr	r3, [r3, #4]
 8000334:	685a      	ldr	r2, [r3, #4]
 8000336:	3a01      	subs	r2, #1
 8000338:	605a      	str	r2, [r3, #4]
 800033a:	685b      	ldr	r3, [r3, #4]
 800033c:	2b00      	cmp	r3, #0
 800033e:	da0a      	bge.n	8000356 <main+0x122>
 8000340:	4b11      	ldr	r3, [pc, #68]	; (8000388 <main+0x154>)
 8000342:	681a      	ldr	r2, [r3, #0]
 8000344:	4b10      	ldr	r3, [pc, #64]	; (8000388 <main+0x154>)
 8000346:	681b      	ldr	r3, [r3, #0]
 8000348:	685b      	ldr	r3, [r3, #4]
 800034a:	4619      	mov	r1, r3
 800034c:	4610      	mov	r0, r2
 800034e:	f000 f9cf 	bl	80006f0 <__srget_r>
 8000352:	4603      	mov	r3, r0
 8000354:	e006      	b.n	8000364 <main+0x130>
 8000356:	4b0c      	ldr	r3, [pc, #48]	; (8000388 <main+0x154>)
 8000358:	681b      	ldr	r3, [r3, #0]
 800035a:	685a      	ldr	r2, [r3, #4]
 800035c:	6813      	ldr	r3, [r2, #0]
 800035e:	1c59      	adds	r1, r3, #1
 8000360:	6011      	str	r1, [r2, #0]
 8000362:	781b      	ldrb	r3, [r3, #0]
 8000364:	607b      	str	r3, [r7, #4]
    putchar(keycode);
 8000366:	4b08      	ldr	r3, [pc, #32]	; (8000388 <main+0x154>)
 8000368:	6818      	ldr	r0, [r3, #0]
 800036a:	6879      	ldr	r1, [r7, #4]
 800036c:	4b06      	ldr	r3, [pc, #24]	; (8000388 <main+0x154>)
 800036e:	681b      	ldr	r3, [r3, #0]
 8000370:	689b      	ldr	r3, [r3, #8]
 8000372:	461a      	mov	r2, r3
 8000374:	f7ff ff30 	bl	80001d8 <__sputc_r>
  }
 8000378:	e7d9      	b.n	800032e <main+0xfa>
 800037a:	bf00      	nop
 800037c:	40023800 	.word	0x40023800
 8000380:	40004400 	.word	0x40004400
 8000384:	40020000 	.word	0x40020000
 8000388:	20000060 	.word	0x20000060
 800038c:	08001264 	.word	0x08001264

08000390 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack    		 /* set stack pointer */
 8000390:	f8df d034 	ldr.w	sp, [pc, #52]	; 80003c8 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000394:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000396:	e003      	b.n	80003a0 <LoopCopyDataInit>

08000398 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000398:	4b0c      	ldr	r3, [pc, #48]	; (80003cc <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 800039a:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 800039c:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800039e:	3104      	adds	r1, #4

080003a0 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80003a0:	480b      	ldr	r0, [pc, #44]	; (80003d0 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80003a2:	4b0c      	ldr	r3, [pc, #48]	; (80003d4 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80003a4:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80003a6:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80003a8:	d3f6      	bcc.n	8000398 <CopyDataInit>
  ldr  r2, =_sbss
 80003aa:	4a0b      	ldr	r2, [pc, #44]	; (80003d8 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80003ac:	e002      	b.n	80003b4 <LoopFillZerobss>

080003ae <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80003ae:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80003b0:	f842 3b04 	str.w	r3, [r2], #4

080003b4 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80003b4:	4b09      	ldr	r3, [pc, #36]	; (80003dc <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80003b6:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80003b8:	d3f9      	bcc.n	80003ae <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80003ba:	f000 f8db 	bl	8000574 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80003be:	f000 f90f 	bl	80005e0 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80003c2:	f7ff ff37 	bl	8000234 <main>
  bx  lr    
 80003c6:	4770      	bx	lr

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack    		 /* set stack pointer */
 80003c8:	20020000 	.word	0x20020000
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
  b  LoopCopyDataInit

CopyDataInit:
  ldr  r3, =_sidata
 80003cc:	080012e4 	.word	0x080012e4
  ldr  r3, [r3, r1]
  str  r3, [r0, r1]
  adds  r1, r1, #4
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80003d0:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80003d4:	20000064 	.word	0x20000064
  adds  r2, r0, r1
  cmp  r2, r3
  bcc  CopyDataInit
  ldr  r2, =_sbss
 80003d8:	20000064 	.word	0x20000064
FillZerobss:
  movs  r3, #0
  str  r3, [r2], #4
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80003dc:	20000090 	.word	0x20000090

080003e0 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80003e0:	e7fe      	b.n	80003e0 <ADC_IRQHandler>
	...

080003e4 <__io_putchar>:
#include "stm32f4xx.h"


  void __io_putchar(char ch)
  {
 80003e4:	b480      	push	{r7}
 80003e6:	b083      	sub	sp, #12
 80003e8:	af00      	add	r7, sp, #0
 80003ea:	4603      	mov	r3, r0
 80003ec:	71fb      	strb	r3, [r7, #7]
     while(!(USART2->SR & USART_SR_TXE))    // Wait for transmit buffer empty
 80003ee:	bf00      	nop
 80003f0:	4b07      	ldr	r3, [pc, #28]	; (8000410 <__io_putchar+0x2c>)
 80003f2:	681b      	ldr	r3, [r3, #0]
 80003f4:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80003f8:	2b00      	cmp	r3, #0
 80003fa:	d0f9      	beq.n	80003f0 <__io_putchar+0xc>
     {
     }       
     USART2->DR = ch; 
 80003fc:	4a04      	ldr	r2, [pc, #16]	; (8000410 <__io_putchar+0x2c>)
 80003fe:	79fb      	ldrb	r3, [r7, #7]
 8000400:	6053      	str	r3, [r2, #4]

   }
 8000402:	bf00      	nop
 8000404:	370c      	adds	r7, #12
 8000406:	46bd      	mov	sp, r7
 8000408:	f85d 7b04 	ldr.w	r7, [sp], #4
 800040c:	4770      	bx	lr
 800040e:	bf00      	nop
 8000410:	40004400 	.word	0x40004400

08000414 <__io_getchar>:



  int __io_getchar(void)
  {
 8000414:	b480      	push	{r7}
 8000416:	af00      	add	r7, sp, #0
   while(!(USART2->SR & USART_SR_RXNE))  // Wait for receive buffer not empty
 8000418:	bf00      	nop
 800041a:	4b06      	ldr	r3, [pc, #24]	; (8000434 <__io_getchar+0x20>)
 800041c:	681b      	ldr	r3, [r3, #0]
 800041e:	f003 0320 	and.w	r3, r3, #32
 8000422:	2b00      	cmp	r3, #0
 8000424:	d0f9      	beq.n	800041a <__io_getchar+0x6>
   {
   }       

   return USART2->DR;                    // Return received character
 8000426:	4b03      	ldr	r3, [pc, #12]	; (8000434 <__io_getchar+0x20>)
 8000428:	685b      	ldr	r3, [r3, #4]
  }
 800042a:	4618      	mov	r0, r3
 800042c:	46bd      	mov	sp, r7
 800042e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000432:	4770      	bx	lr
 8000434:	40004400 	.word	0x40004400

08000438 <_write>:


/* Functions */

int _write(int32_t file, uint8_t *ptr, int32_t len)
{
 8000438:	b580      	push	{r7, lr}
 800043a:	b086      	sub	sp, #24
 800043c:	af00      	add	r7, sp, #0
 800043e:	60f8      	str	r0, [r7, #12]
 8000440:	60b9      	str	r1, [r7, #8]
 8000442:	607a      	str	r2, [r7, #4]
  int32_t length = len;
 8000444:	687b      	ldr	r3, [r7, #4]
 8000446:	617b      	str	r3, [r7, #20]

  while(length--)
 8000448:	e006      	b.n	8000458 <_write+0x20>
  {
    __io_putchar(*ptr++);
 800044a:	68bb      	ldr	r3, [r7, #8]
 800044c:	1c5a      	adds	r2, r3, #1
 800044e:	60ba      	str	r2, [r7, #8]
 8000450:	781b      	ldrb	r3, [r3, #0]
 8000452:	4618      	mov	r0, r3
 8000454:	f7ff ffc6 	bl	80003e4 <__io_putchar>

int _write(int32_t file, uint8_t *ptr, int32_t len)
{
  int32_t length = len;

  while(length--)
 8000458:	697b      	ldr	r3, [r7, #20]
 800045a:	1e5a      	subs	r2, r3, #1
 800045c:	617a      	str	r2, [r7, #20]
 800045e:	2b00      	cmp	r3, #0
 8000460:	d1f3      	bne.n	800044a <_write+0x12>
  {
    __io_putchar(*ptr++);
  }

  errno = 0;
 8000462:	4b04      	ldr	r3, [pc, #16]	; (8000474 <_write+0x3c>)
 8000464:	2200      	movs	r2, #0
 8000466:	601a      	str	r2, [r3, #0]
  return len;
 8000468:	687b      	ldr	r3, [r7, #4]
}
 800046a:	4618      	mov	r0, r3
 800046c:	3718      	adds	r7, #24
 800046e:	46bd      	mov	sp, r7
 8000470:	bd80      	pop	{r7, pc}
 8000472:	bf00      	nop
 8000474:	2000008c 	.word	0x2000008c

08000478 <_read>:


int _read(int32_t file, uint8_t *ptr, int32_t len)
{
 8000478:	b580      	push	{r7, lr}
 800047a:	b084      	sub	sp, #16
 800047c:	af00      	add	r7, sp, #0
 800047e:	60f8      	str	r0, [r7, #12]
 8000480:	60b9      	str	r1, [r7, #8]
 8000482:	607a      	str	r2, [r7, #4]
  *ptr = __io_getchar();
 8000484:	f7ff ffc6 	bl	8000414 <__io_getchar>
 8000488:	4603      	mov	r3, r0
 800048a:	b2da      	uxtb	r2, r3
 800048c:	68bb      	ldr	r3, [r7, #8]
 800048e:	701a      	strb	r2, [r3, #0]

  errno = 0;
 8000490:	4b03      	ldr	r3, [pc, #12]	; (80004a0 <_read+0x28>)
 8000492:	2200      	movs	r2, #0
 8000494:	601a      	str	r2, [r3, #0]
  return 1;
 8000496:	2301      	movs	r3, #1
}
 8000498:	4618      	mov	r0, r3
 800049a:	3710      	adds	r7, #16
 800049c:	46bd      	mov	sp, r7
 800049e:	bd80      	pop	{r7, pc}
 80004a0:	2000008c 	.word	0x2000008c

080004a4 <_sbrk>:
	while (1) {}		/* Make sure we hang here */
}


void * _sbrk(int32_t incr)
{
 80004a4:	b480      	push	{r7}
 80004a6:	b085      	sub	sp, #20
 80004a8:	af00      	add	r7, sp, #0
 80004aa:	6078      	str	r0, [r7, #4]
	extern char   end; /* Set by linker.  */
	static char * heap_end;
	char *        prev_heap_end;

	if (heap_end == 0) {
 80004ac:	4b0b      	ldr	r3, [pc, #44]	; (80004dc <_sbrk+0x38>)
 80004ae:	681b      	ldr	r3, [r3, #0]
 80004b0:	2b00      	cmp	r3, #0
 80004b2:	d102      	bne.n	80004ba <_sbrk+0x16>
		heap_end = & end;
 80004b4:	4b09      	ldr	r3, [pc, #36]	; (80004dc <_sbrk+0x38>)
 80004b6:	4a0a      	ldr	r2, [pc, #40]	; (80004e0 <_sbrk+0x3c>)
 80004b8:	601a      	str	r2, [r3, #0]
	}

	prev_heap_end = heap_end;
 80004ba:	4b08      	ldr	r3, [pc, #32]	; (80004dc <_sbrk+0x38>)
 80004bc:	681b      	ldr	r3, [r3, #0]
 80004be:	60fb      	str	r3, [r7, #12]
	heap_end += incr;
 80004c0:	4b06      	ldr	r3, [pc, #24]	; (80004dc <_sbrk+0x38>)
 80004c2:	681a      	ldr	r2, [r3, #0]
 80004c4:	687b      	ldr	r3, [r7, #4]
 80004c6:	4413      	add	r3, r2
 80004c8:	4a04      	ldr	r2, [pc, #16]	; (80004dc <_sbrk+0x38>)
 80004ca:	6013      	str	r3, [r2, #0]

	return (void *) prev_heap_end;
 80004cc:	68fb      	ldr	r3, [r7, #12]
}
 80004ce:	4618      	mov	r0, r3
 80004d0:	3714      	adds	r7, #20
 80004d2:	46bd      	mov	sp, r7
 80004d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004d8:	4770      	bx	lr
 80004da:	bf00      	nop
 80004dc:	20000080 	.word	0x20000080
 80004e0:	20000090 	.word	0x20000090

080004e4 <_close>:

int _close(int32_t file)
{
 80004e4:	b480      	push	{r7}
 80004e6:	b083      	sub	sp, #12
 80004e8:	af00      	add	r7, sp, #0
 80004ea:	6078      	str	r0, [r7, #4]
	errno = ENOSYS;
 80004ec:	4b05      	ldr	r3, [pc, #20]	; (8000504 <_close+0x20>)
 80004ee:	2258      	movs	r2, #88	; 0x58
 80004f0:	601a      	str	r2, [r3, #0]
	return -1;
 80004f2:	f04f 33ff 	mov.w	r3, #4294967295
}
 80004f6:	4618      	mov	r0, r3
 80004f8:	370c      	adds	r7, #12
 80004fa:	46bd      	mov	sp, r7
 80004fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000500:	4770      	bx	lr
 8000502:	bf00      	nop
 8000504:	2000008c 	.word	0x2000008c

08000508 <_fstat>:


int _fstat(int32_t file, struct stat *st)
{
 8000508:	b480      	push	{r7}
 800050a:	b083      	sub	sp, #12
 800050c:	af00      	add	r7, sp, #0
 800050e:	6078      	str	r0, [r7, #4]
 8000510:	6039      	str	r1, [r7, #0]
	errno = ENOSYS;
 8000512:	4b05      	ldr	r3, [pc, #20]	; (8000528 <_fstat+0x20>)
 8000514:	2258      	movs	r2, #88	; 0x58
 8000516:	601a      	str	r2, [r3, #0]
	return -1;
 8000518:	f04f 33ff 	mov.w	r3, #4294967295
}
 800051c:	4618      	mov	r0, r3
 800051e:	370c      	adds	r7, #12
 8000520:	46bd      	mov	sp, r7
 8000522:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000526:	4770      	bx	lr
 8000528:	2000008c 	.word	0x2000008c

0800052c <_isatty>:

int _isatty(int32_t file)
{
 800052c:	b480      	push	{r7}
 800052e:	b083      	sub	sp, #12
 8000530:	af00      	add	r7, sp, #0
 8000532:	6078      	str	r0, [r7, #4]
	errno = ENOSYS;
 8000534:	4b04      	ldr	r3, [pc, #16]	; (8000548 <_isatty+0x1c>)
 8000536:	2258      	movs	r2, #88	; 0x58
 8000538:	601a      	str	r2, [r3, #0]
	return 0;
 800053a:	2300      	movs	r3, #0
}
 800053c:	4618      	mov	r0, r3
 800053e:	370c      	adds	r7, #12
 8000540:	46bd      	mov	sp, r7
 8000542:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000546:	4770      	bx	lr
 8000548:	2000008c 	.word	0x2000008c

0800054c <_lseek>:

int _lseek(int32_t file, int32_t ptr, int32_t dir)
{
 800054c:	b480      	push	{r7}
 800054e:	b085      	sub	sp, #20
 8000550:	af00      	add	r7, sp, #0
 8000552:	60f8      	str	r0, [r7, #12]
 8000554:	60b9      	str	r1, [r7, #8]
 8000556:	607a      	str	r2, [r7, #4]
	errno = ENOSYS;
 8000558:	4b05      	ldr	r3, [pc, #20]	; (8000570 <_lseek+0x24>)
 800055a:	2258      	movs	r2, #88	; 0x58
 800055c:	601a      	str	r2, [r3, #0]
	return -1;
 800055e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000562:	4618      	mov	r0, r3
 8000564:	3714      	adds	r7, #20
 8000566:	46bd      	mov	sp, r7
 8000568:	f85d 7b04 	ldr.w	r7, [sp], #4
 800056c:	4770      	bx	lr
 800056e:	bf00      	nop
 8000570:	2000008c 	.word	0x2000008c

08000574 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8000574:	b480      	push	{r7}
 8000576:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8000578:	4a16      	ldr	r2, [pc, #88]	; (80005d4 <SystemInit+0x60>)
 800057a:	4b16      	ldr	r3, [pc, #88]	; (80005d4 <SystemInit+0x60>)
 800057c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8000580:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8000584:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
  #endif
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;
 8000588:	4a13      	ldr	r2, [pc, #76]	; (80005d8 <SystemInit+0x64>)
 800058a:	4b13      	ldr	r3, [pc, #76]	; (80005d8 <SystemInit+0x64>)
 800058c:	681b      	ldr	r3, [r3, #0]
 800058e:	f043 0301 	orr.w	r3, r3, #1
 8000592:	6013      	str	r3, [r2, #0]

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
 8000594:	4b10      	ldr	r3, [pc, #64]	; (80005d8 <SystemInit+0x64>)
 8000596:	2200      	movs	r2, #0
 8000598:	609a      	str	r2, [r3, #8]

  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xFEF6FFFF;
 800059a:	4a0f      	ldr	r2, [pc, #60]	; (80005d8 <SystemInit+0x64>)
 800059c:	4b0e      	ldr	r3, [pc, #56]	; (80005d8 <SystemInit+0x64>)
 800059e:	681b      	ldr	r3, [r3, #0]
 80005a0:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 80005a4:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80005a8:	6013      	str	r3, [r2, #0]

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x24003010;
 80005aa:	4b0b      	ldr	r3, [pc, #44]	; (80005d8 <SystemInit+0x64>)
 80005ac:	4a0b      	ldr	r2, [pc, #44]	; (80005dc <SystemInit+0x68>)
 80005ae:	605a      	str	r2, [r3, #4]

  /* Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFF;
 80005b0:	4a09      	ldr	r2, [pc, #36]	; (80005d8 <SystemInit+0x64>)
 80005b2:	4b09      	ldr	r3, [pc, #36]	; (80005d8 <SystemInit+0x64>)
 80005b4:	681b      	ldr	r3, [r3, #0]
 80005b6:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80005ba:	6013      	str	r3, [r2, #0]

  /* Disable all interrupts */
  RCC->CIR = 0x00000000;
 80005bc:	4b06      	ldr	r3, [pc, #24]	; (80005d8 <SystemInit+0x64>)
 80005be:	2200      	movs	r2, #0
 80005c0:	60da      	str	r2, [r3, #12]

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 80005c2:	4b04      	ldr	r3, [pc, #16]	; (80005d4 <SystemInit+0x60>)
 80005c4:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80005c8:	609a      	str	r2, [r3, #8]
#endif
}
 80005ca:	bf00      	nop
 80005cc:	46bd      	mov	sp, r7
 80005ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005d2:	4770      	bx	lr
 80005d4:	e000ed00 	.word	0xe000ed00
 80005d8:	40023800 	.word	0x40023800
 80005dc:	24003010 	.word	0x24003010

080005e0 <__libc_init_array>:
 80005e0:	b570      	push	{r4, r5, r6, lr}
 80005e2:	4b0e      	ldr	r3, [pc, #56]	; (800061c <__libc_init_array+0x3c>)
 80005e4:	4c0e      	ldr	r4, [pc, #56]	; (8000620 <__libc_init_array+0x40>)
 80005e6:	1ae4      	subs	r4, r4, r3
 80005e8:	10a4      	asrs	r4, r4, #2
 80005ea:	2500      	movs	r5, #0
 80005ec:	461e      	mov	r6, r3
 80005ee:	42a5      	cmp	r5, r4
 80005f0:	d004      	beq.n	80005fc <__libc_init_array+0x1c>
 80005f2:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80005f6:	4798      	blx	r3
 80005f8:	3501      	adds	r5, #1
 80005fa:	e7f8      	b.n	80005ee <__libc_init_array+0xe>
 80005fc:	f000 fe26 	bl	800124c <_init>
 8000600:	4c08      	ldr	r4, [pc, #32]	; (8000624 <__libc_init_array+0x44>)
 8000602:	4b09      	ldr	r3, [pc, #36]	; (8000628 <__libc_init_array+0x48>)
 8000604:	1ae4      	subs	r4, r4, r3
 8000606:	10a4      	asrs	r4, r4, #2
 8000608:	2500      	movs	r5, #0
 800060a:	461e      	mov	r6, r3
 800060c:	42a5      	cmp	r5, r4
 800060e:	d004      	beq.n	800061a <__libc_init_array+0x3a>
 8000610:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000614:	4798      	blx	r3
 8000616:	3501      	adds	r5, #1
 8000618:	e7f8      	b.n	800060c <__libc_init_array+0x2c>
 800061a:	bd70      	pop	{r4, r5, r6, pc}
 800061c:	080012dc 	.word	0x080012dc
 8000620:	080012dc 	.word	0x080012dc
 8000624:	080012e0 	.word	0x080012e0
 8000628:	080012dc 	.word	0x080012dc

0800062c <_puts_r>:
 800062c:	b570      	push	{r4, r5, r6, lr}
 800062e:	460e      	mov	r6, r1
 8000630:	4605      	mov	r5, r0
 8000632:	b118      	cbz	r0, 800063c <_puts_r+0x10>
 8000634:	6983      	ldr	r3, [r0, #24]
 8000636:	b90b      	cbnz	r3, 800063c <_puts_r+0x10>
 8000638:	f000 faf6 	bl	8000c28 <__sinit>
 800063c:	69ab      	ldr	r3, [r5, #24]
 800063e:	68ac      	ldr	r4, [r5, #8]
 8000640:	b913      	cbnz	r3, 8000648 <_puts_r+0x1c>
 8000642:	4628      	mov	r0, r5
 8000644:	f000 faf0 	bl	8000c28 <__sinit>
 8000648:	4b22      	ldr	r3, [pc, #136]	; (80006d4 <_puts_r+0xa8>)
 800064a:	429c      	cmp	r4, r3
 800064c:	d101      	bne.n	8000652 <_puts_r+0x26>
 800064e:	686c      	ldr	r4, [r5, #4]
 8000650:	e008      	b.n	8000664 <_puts_r+0x38>
 8000652:	4b21      	ldr	r3, [pc, #132]	; (80006d8 <_puts_r+0xac>)
 8000654:	429c      	cmp	r4, r3
 8000656:	d101      	bne.n	800065c <_puts_r+0x30>
 8000658:	68ac      	ldr	r4, [r5, #8]
 800065a:	e003      	b.n	8000664 <_puts_r+0x38>
 800065c:	4b1f      	ldr	r3, [pc, #124]	; (80006dc <_puts_r+0xb0>)
 800065e:	429c      	cmp	r4, r3
 8000660:	bf08      	it	eq
 8000662:	68ec      	ldreq	r4, [r5, #12]
 8000664:	89a3      	ldrh	r3, [r4, #12]
 8000666:	071b      	lsls	r3, r3, #28
 8000668:	d501      	bpl.n	800066e <_puts_r+0x42>
 800066a:	6923      	ldr	r3, [r4, #16]
 800066c:	b93b      	cbnz	r3, 800067e <_puts_r+0x52>
 800066e:	4621      	mov	r1, r4
 8000670:	4628      	mov	r0, r5
 8000672:	f000 f967 	bl	8000944 <__swsetup_r>
 8000676:	b110      	cbz	r0, 800067e <_puts_r+0x52>
 8000678:	f04f 30ff 	mov.w	r0, #4294967295
 800067c:	bd70      	pop	{r4, r5, r6, pc}
 800067e:	3e01      	subs	r6, #1
 8000680:	68a3      	ldr	r3, [r4, #8]
 8000682:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000686:	3b01      	subs	r3, #1
 8000688:	60a3      	str	r3, [r4, #8]
 800068a:	b191      	cbz	r1, 80006b2 <_puts_r+0x86>
 800068c:	2b00      	cmp	r3, #0
 800068e:	da04      	bge.n	800069a <_puts_r+0x6e>
 8000690:	69a2      	ldr	r2, [r4, #24]
 8000692:	4293      	cmp	r3, r2
 8000694:	db06      	blt.n	80006a4 <_puts_r+0x78>
 8000696:	290a      	cmp	r1, #10
 8000698:	d004      	beq.n	80006a4 <_puts_r+0x78>
 800069a:	6823      	ldr	r3, [r4, #0]
 800069c:	1c5a      	adds	r2, r3, #1
 800069e:	6022      	str	r2, [r4, #0]
 80006a0:	7019      	strb	r1, [r3, #0]
 80006a2:	e7ed      	b.n	8000680 <_puts_r+0x54>
 80006a4:	4622      	mov	r2, r4
 80006a6:	4628      	mov	r0, r5
 80006a8:	f000 f8f8 	bl	800089c <__swbuf_r>
 80006ac:	3001      	adds	r0, #1
 80006ae:	d1e7      	bne.n	8000680 <_puts_r+0x54>
 80006b0:	e7e2      	b.n	8000678 <_puts_r+0x4c>
 80006b2:	2b00      	cmp	r3, #0
 80006b4:	da08      	bge.n	80006c8 <_puts_r+0x9c>
 80006b6:	4622      	mov	r2, r4
 80006b8:	210a      	movs	r1, #10
 80006ba:	4628      	mov	r0, r5
 80006bc:	f000 f8ee 	bl	800089c <__swbuf_r>
 80006c0:	3001      	adds	r0, #1
 80006c2:	d0d9      	beq.n	8000678 <_puts_r+0x4c>
 80006c4:	200a      	movs	r0, #10
 80006c6:	bd70      	pop	{r4, r5, r6, pc}
 80006c8:	6823      	ldr	r3, [r4, #0]
 80006ca:	200a      	movs	r0, #10
 80006cc:	1c5a      	adds	r2, r3, #1
 80006ce:	6022      	str	r2, [r4, #0]
 80006d0:	7018      	strb	r0, [r3, #0]
 80006d2:	bd70      	pop	{r4, r5, r6, pc}
 80006d4:	0800127c 	.word	0x0800127c
 80006d8:	0800129c 	.word	0x0800129c
 80006dc:	080012bc 	.word	0x080012bc

080006e0 <puts>:
 80006e0:	4b02      	ldr	r3, [pc, #8]	; (80006ec <puts+0xc>)
 80006e2:	4601      	mov	r1, r0
 80006e4:	6818      	ldr	r0, [r3, #0]
 80006e6:	f7ff bfa1 	b.w	800062c <_puts_r>
 80006ea:	bf00      	nop
 80006ec:	20000060 	.word	0x20000060

080006f0 <__srget_r>:
 80006f0:	b538      	push	{r3, r4, r5, lr}
 80006f2:	460c      	mov	r4, r1
 80006f4:	4605      	mov	r5, r0
 80006f6:	b118      	cbz	r0, 8000700 <__srget_r+0x10>
 80006f8:	6983      	ldr	r3, [r0, #24]
 80006fa:	b90b      	cbnz	r3, 8000700 <__srget_r+0x10>
 80006fc:	f000 fa94 	bl	8000c28 <__sinit>
 8000700:	4b0e      	ldr	r3, [pc, #56]	; (800073c <__srget_r+0x4c>)
 8000702:	429c      	cmp	r4, r3
 8000704:	d101      	bne.n	800070a <__srget_r+0x1a>
 8000706:	686c      	ldr	r4, [r5, #4]
 8000708:	e008      	b.n	800071c <__srget_r+0x2c>
 800070a:	4b0d      	ldr	r3, [pc, #52]	; (8000740 <__srget_r+0x50>)
 800070c:	429c      	cmp	r4, r3
 800070e:	d101      	bne.n	8000714 <__srget_r+0x24>
 8000710:	68ac      	ldr	r4, [r5, #8]
 8000712:	e003      	b.n	800071c <__srget_r+0x2c>
 8000714:	4b0b      	ldr	r3, [pc, #44]	; (8000744 <__srget_r+0x54>)
 8000716:	429c      	cmp	r4, r3
 8000718:	bf08      	it	eq
 800071a:	68ec      	ldreq	r4, [r5, #12]
 800071c:	4621      	mov	r1, r4
 800071e:	4628      	mov	r0, r5
 8000720:	f000 fc4e 	bl	8000fc0 <__srefill_r>
 8000724:	b938      	cbnz	r0, 8000736 <__srget_r+0x46>
 8000726:	6863      	ldr	r3, [r4, #4]
 8000728:	3b01      	subs	r3, #1
 800072a:	6063      	str	r3, [r4, #4]
 800072c:	6823      	ldr	r3, [r4, #0]
 800072e:	1c5a      	adds	r2, r3, #1
 8000730:	6022      	str	r2, [r4, #0]
 8000732:	7818      	ldrb	r0, [r3, #0]
 8000734:	bd38      	pop	{r3, r4, r5, pc}
 8000736:	f04f 30ff 	mov.w	r0, #4294967295
 800073a:	bd38      	pop	{r3, r4, r5, pc}
 800073c:	0800127c 	.word	0x0800127c
 8000740:	0800129c 	.word	0x0800129c
 8000744:	080012bc 	.word	0x080012bc

08000748 <setvbuf>:
 8000748:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800074c:	461d      	mov	r5, r3
 800074e:	4b4f      	ldr	r3, [pc, #316]	; (800088c <setvbuf+0x144>)
 8000750:	681e      	ldr	r6, [r3, #0]
 8000752:	4604      	mov	r4, r0
 8000754:	460f      	mov	r7, r1
 8000756:	4690      	mov	r8, r2
 8000758:	b126      	cbz	r6, 8000764 <setvbuf+0x1c>
 800075a:	69b3      	ldr	r3, [r6, #24]
 800075c:	b913      	cbnz	r3, 8000764 <setvbuf+0x1c>
 800075e:	4630      	mov	r0, r6
 8000760:	f000 fa62 	bl	8000c28 <__sinit>
 8000764:	4b4a      	ldr	r3, [pc, #296]	; (8000890 <setvbuf+0x148>)
 8000766:	429c      	cmp	r4, r3
 8000768:	d101      	bne.n	800076e <setvbuf+0x26>
 800076a:	6874      	ldr	r4, [r6, #4]
 800076c:	e008      	b.n	8000780 <setvbuf+0x38>
 800076e:	4b49      	ldr	r3, [pc, #292]	; (8000894 <setvbuf+0x14c>)
 8000770:	429c      	cmp	r4, r3
 8000772:	d101      	bne.n	8000778 <setvbuf+0x30>
 8000774:	68b4      	ldr	r4, [r6, #8]
 8000776:	e003      	b.n	8000780 <setvbuf+0x38>
 8000778:	4b47      	ldr	r3, [pc, #284]	; (8000898 <setvbuf+0x150>)
 800077a:	429c      	cmp	r4, r3
 800077c:	bf08      	it	eq
 800077e:	68f4      	ldreq	r4, [r6, #12]
 8000780:	f1b8 0f02 	cmp.w	r8, #2
 8000784:	d004      	beq.n	8000790 <setvbuf+0x48>
 8000786:	f1b8 0f01 	cmp.w	r8, #1
 800078a:	d879      	bhi.n	8000880 <setvbuf+0x138>
 800078c:	2d00      	cmp	r5, #0
 800078e:	db77      	blt.n	8000880 <setvbuf+0x138>
 8000790:	4621      	mov	r1, r4
 8000792:	4630      	mov	r0, r6
 8000794:	f000 f9cc 	bl	8000b30 <_fflush_r>
 8000798:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800079a:	b141      	cbz	r1, 80007ae <setvbuf+0x66>
 800079c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80007a0:	4299      	cmp	r1, r3
 80007a2:	d002      	beq.n	80007aa <setvbuf+0x62>
 80007a4:	4630      	mov	r0, r6
 80007a6:	f000 fb55 	bl	8000e54 <_free_r>
 80007aa:	2300      	movs	r3, #0
 80007ac:	6363      	str	r3, [r4, #52]	; 0x34
 80007ae:	2300      	movs	r3, #0
 80007b0:	61a3      	str	r3, [r4, #24]
 80007b2:	6063      	str	r3, [r4, #4]
 80007b4:	89a3      	ldrh	r3, [r4, #12]
 80007b6:	061b      	lsls	r3, r3, #24
 80007b8:	d503      	bpl.n	80007c2 <setvbuf+0x7a>
 80007ba:	6921      	ldr	r1, [r4, #16]
 80007bc:	4630      	mov	r0, r6
 80007be:	f000 fb49 	bl	8000e54 <_free_r>
 80007c2:	89a3      	ldrh	r3, [r4, #12]
 80007c4:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
 80007c8:	f023 0303 	bic.w	r3, r3, #3
 80007cc:	f1b8 0f02 	cmp.w	r8, #2
 80007d0:	81a3      	strh	r3, [r4, #12]
 80007d2:	d01e      	beq.n	8000812 <setvbuf+0xca>
 80007d4:	ab01      	add	r3, sp, #4
 80007d6:	466a      	mov	r2, sp
 80007d8:	4621      	mov	r1, r4
 80007da:	4630      	mov	r0, r6
 80007dc:	f000 faca 	bl	8000d74 <__swhatbuf_r>
 80007e0:	89a3      	ldrh	r3, [r4, #12]
 80007e2:	4318      	orrs	r0, r3
 80007e4:	81a0      	strh	r0, [r4, #12]
 80007e6:	b90d      	cbnz	r5, 80007ec <setvbuf+0xa4>
 80007e8:	9d00      	ldr	r5, [sp, #0]
 80007ea:	e000      	b.n	80007ee <setvbuf+0xa6>
 80007ec:	bb2f      	cbnz	r7, 800083a <setvbuf+0xf2>
 80007ee:	4628      	mov	r0, r5
 80007f0:	f000 fb20 	bl	8000e34 <malloc>
 80007f4:	4607      	mov	r7, r0
 80007f6:	b9d0      	cbnz	r0, 800082e <setvbuf+0xe6>
 80007f8:	f8dd 9000 	ldr.w	r9, [sp]
 80007fc:	45a9      	cmp	r9, r5
 80007fe:	d102      	bne.n	8000806 <setvbuf+0xbe>
 8000800:	f04f 30ff 	mov.w	r0, #4294967295
 8000804:	e006      	b.n	8000814 <setvbuf+0xcc>
 8000806:	4648      	mov	r0, r9
 8000808:	f000 fb14 	bl	8000e34 <malloc>
 800080c:	4607      	mov	r7, r0
 800080e:	b978      	cbnz	r0, 8000830 <setvbuf+0xe8>
 8000810:	e7f6      	b.n	8000800 <setvbuf+0xb8>
 8000812:	2000      	movs	r0, #0
 8000814:	89a3      	ldrh	r3, [r4, #12]
 8000816:	f043 0302 	orr.w	r3, r3, #2
 800081a:	81a3      	strh	r3, [r4, #12]
 800081c:	2300      	movs	r3, #0
 800081e:	60a3      	str	r3, [r4, #8]
 8000820:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000824:	6023      	str	r3, [r4, #0]
 8000826:	6123      	str	r3, [r4, #16]
 8000828:	2301      	movs	r3, #1
 800082a:	6163      	str	r3, [r4, #20]
 800082c:	e02a      	b.n	8000884 <setvbuf+0x13c>
 800082e:	46a9      	mov	r9, r5
 8000830:	89a3      	ldrh	r3, [r4, #12]
 8000832:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000836:	81a3      	strh	r3, [r4, #12]
 8000838:	464d      	mov	r5, r9
 800083a:	69b3      	ldr	r3, [r6, #24]
 800083c:	b913      	cbnz	r3, 8000844 <setvbuf+0xfc>
 800083e:	4630      	mov	r0, r6
 8000840:	f000 f9f2 	bl	8000c28 <__sinit>
 8000844:	f1b8 0f01 	cmp.w	r8, #1
 8000848:	bf08      	it	eq
 800084a:	89a3      	ldrheq	r3, [r4, #12]
 800084c:	6027      	str	r7, [r4, #0]
 800084e:	bf04      	itt	eq
 8000850:	f043 0301 	orreq.w	r3, r3, #1
 8000854:	81a3      	strheq	r3, [r4, #12]
 8000856:	89a3      	ldrh	r3, [r4, #12]
 8000858:	6127      	str	r7, [r4, #16]
 800085a:	f003 0008 	and.w	r0, r3, #8
 800085e:	b280      	uxth	r0, r0
 8000860:	6165      	str	r5, [r4, #20]
 8000862:	b158      	cbz	r0, 800087c <setvbuf+0x134>
 8000864:	f013 0301 	ands.w	r3, r3, #1
 8000868:	f04f 0000 	mov.w	r0, #0
 800086c:	bf1d      	ittte	ne
 800086e:	426d      	negne	r5, r5
 8000870:	60a0      	strne	r0, [r4, #8]
 8000872:	61a5      	strne	r5, [r4, #24]
 8000874:	60a5      	streq	r5, [r4, #8]
 8000876:	bf08      	it	eq
 8000878:	4618      	moveq	r0, r3
 800087a:	e003      	b.n	8000884 <setvbuf+0x13c>
 800087c:	60a0      	str	r0, [r4, #8]
 800087e:	e001      	b.n	8000884 <setvbuf+0x13c>
 8000880:	f04f 30ff 	mov.w	r0, #4294967295
 8000884:	b003      	add	sp, #12
 8000886:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800088a:	bf00      	nop
 800088c:	20000060 	.word	0x20000060
 8000890:	0800127c 	.word	0x0800127c
 8000894:	0800129c 	.word	0x0800129c
 8000898:	080012bc 	.word	0x080012bc

0800089c <__swbuf_r>:
 800089c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800089e:	460f      	mov	r7, r1
 80008a0:	4614      	mov	r4, r2
 80008a2:	4606      	mov	r6, r0
 80008a4:	b118      	cbz	r0, 80008ae <__swbuf_r+0x12>
 80008a6:	6983      	ldr	r3, [r0, #24]
 80008a8:	b90b      	cbnz	r3, 80008ae <__swbuf_r+0x12>
 80008aa:	f000 f9bd 	bl	8000c28 <__sinit>
 80008ae:	4b22      	ldr	r3, [pc, #136]	; (8000938 <__swbuf_r+0x9c>)
 80008b0:	429c      	cmp	r4, r3
 80008b2:	d101      	bne.n	80008b8 <__swbuf_r+0x1c>
 80008b4:	6874      	ldr	r4, [r6, #4]
 80008b6:	e008      	b.n	80008ca <__swbuf_r+0x2e>
 80008b8:	4b20      	ldr	r3, [pc, #128]	; (800093c <__swbuf_r+0xa0>)
 80008ba:	429c      	cmp	r4, r3
 80008bc:	d101      	bne.n	80008c2 <__swbuf_r+0x26>
 80008be:	68b4      	ldr	r4, [r6, #8]
 80008c0:	e003      	b.n	80008ca <__swbuf_r+0x2e>
 80008c2:	4b1f      	ldr	r3, [pc, #124]	; (8000940 <__swbuf_r+0xa4>)
 80008c4:	429c      	cmp	r4, r3
 80008c6:	bf08      	it	eq
 80008c8:	68f4      	ldreq	r4, [r6, #12]
 80008ca:	69a3      	ldr	r3, [r4, #24]
 80008cc:	60a3      	str	r3, [r4, #8]
 80008ce:	89a3      	ldrh	r3, [r4, #12]
 80008d0:	071a      	lsls	r2, r3, #28
 80008d2:	d509      	bpl.n	80008e8 <__swbuf_r+0x4c>
 80008d4:	6923      	ldr	r3, [r4, #16]
 80008d6:	b13b      	cbz	r3, 80008e8 <__swbuf_r+0x4c>
 80008d8:	6823      	ldr	r3, [r4, #0]
 80008da:	6920      	ldr	r0, [r4, #16]
 80008dc:	1a18      	subs	r0, r3, r0
 80008de:	6963      	ldr	r3, [r4, #20]
 80008e0:	4298      	cmp	r0, r3
 80008e2:	b2fd      	uxtb	r5, r7
 80008e4:	db0f      	blt.n	8000906 <__swbuf_r+0x6a>
 80008e6:	e008      	b.n	80008fa <__swbuf_r+0x5e>
 80008e8:	4621      	mov	r1, r4
 80008ea:	4630      	mov	r0, r6
 80008ec:	f000 f82a 	bl	8000944 <__swsetup_r>
 80008f0:	2800      	cmp	r0, #0
 80008f2:	d0f1      	beq.n	80008d8 <__swbuf_r+0x3c>
 80008f4:	f04f 30ff 	mov.w	r0, #4294967295
 80008f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80008fa:	4621      	mov	r1, r4
 80008fc:	4630      	mov	r0, r6
 80008fe:	f000 f917 	bl	8000b30 <_fflush_r>
 8000902:	2800      	cmp	r0, #0
 8000904:	d1f6      	bne.n	80008f4 <__swbuf_r+0x58>
 8000906:	68a3      	ldr	r3, [r4, #8]
 8000908:	3b01      	subs	r3, #1
 800090a:	60a3      	str	r3, [r4, #8]
 800090c:	6823      	ldr	r3, [r4, #0]
 800090e:	1c5a      	adds	r2, r3, #1
 8000910:	6022      	str	r2, [r4, #0]
 8000912:	701f      	strb	r7, [r3, #0]
 8000914:	6962      	ldr	r2, [r4, #20]
 8000916:	1c43      	adds	r3, r0, #1
 8000918:	4293      	cmp	r3, r2
 800091a:	d004      	beq.n	8000926 <__swbuf_r+0x8a>
 800091c:	89a3      	ldrh	r3, [r4, #12]
 800091e:	07db      	lsls	r3, r3, #31
 8000920:	d507      	bpl.n	8000932 <__swbuf_r+0x96>
 8000922:	2d0a      	cmp	r5, #10
 8000924:	d105      	bne.n	8000932 <__swbuf_r+0x96>
 8000926:	4621      	mov	r1, r4
 8000928:	4630      	mov	r0, r6
 800092a:	f000 f901 	bl	8000b30 <_fflush_r>
 800092e:	2800      	cmp	r0, #0
 8000930:	d1e0      	bne.n	80008f4 <__swbuf_r+0x58>
 8000932:	4628      	mov	r0, r5
 8000934:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000936:	bf00      	nop
 8000938:	0800127c 	.word	0x0800127c
 800093c:	0800129c 	.word	0x0800129c
 8000940:	080012bc 	.word	0x080012bc

08000944 <__swsetup_r>:
 8000944:	4b32      	ldr	r3, [pc, #200]	; (8000a10 <__swsetup_r+0xcc>)
 8000946:	b570      	push	{r4, r5, r6, lr}
 8000948:	681d      	ldr	r5, [r3, #0]
 800094a:	4606      	mov	r6, r0
 800094c:	460c      	mov	r4, r1
 800094e:	b125      	cbz	r5, 800095a <__swsetup_r+0x16>
 8000950:	69ab      	ldr	r3, [r5, #24]
 8000952:	b913      	cbnz	r3, 800095a <__swsetup_r+0x16>
 8000954:	4628      	mov	r0, r5
 8000956:	f000 f967 	bl	8000c28 <__sinit>
 800095a:	4b2e      	ldr	r3, [pc, #184]	; (8000a14 <__swsetup_r+0xd0>)
 800095c:	429c      	cmp	r4, r3
 800095e:	d101      	bne.n	8000964 <__swsetup_r+0x20>
 8000960:	686c      	ldr	r4, [r5, #4]
 8000962:	e008      	b.n	8000976 <__swsetup_r+0x32>
 8000964:	4b2c      	ldr	r3, [pc, #176]	; (8000a18 <__swsetup_r+0xd4>)
 8000966:	429c      	cmp	r4, r3
 8000968:	d101      	bne.n	800096e <__swsetup_r+0x2a>
 800096a:	68ac      	ldr	r4, [r5, #8]
 800096c:	e003      	b.n	8000976 <__swsetup_r+0x32>
 800096e:	4b2b      	ldr	r3, [pc, #172]	; (8000a1c <__swsetup_r+0xd8>)
 8000970:	429c      	cmp	r4, r3
 8000972:	bf08      	it	eq
 8000974:	68ec      	ldreq	r4, [r5, #12]
 8000976:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800097a:	b29a      	uxth	r2, r3
 800097c:	0715      	lsls	r5, r2, #28
 800097e:	d41d      	bmi.n	80009bc <__swsetup_r+0x78>
 8000980:	06d0      	lsls	r0, r2, #27
 8000982:	d402      	bmi.n	800098a <__swsetup_r+0x46>
 8000984:	2209      	movs	r2, #9
 8000986:	6032      	str	r2, [r6, #0]
 8000988:	e03a      	b.n	8000a00 <__swsetup_r+0xbc>
 800098a:	0751      	lsls	r1, r2, #29
 800098c:	d512      	bpl.n	80009b4 <__swsetup_r+0x70>
 800098e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000990:	b141      	cbz	r1, 80009a4 <__swsetup_r+0x60>
 8000992:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000996:	4299      	cmp	r1, r3
 8000998:	d002      	beq.n	80009a0 <__swsetup_r+0x5c>
 800099a:	4630      	mov	r0, r6
 800099c:	f000 fa5a 	bl	8000e54 <_free_r>
 80009a0:	2300      	movs	r3, #0
 80009a2:	6363      	str	r3, [r4, #52]	; 0x34
 80009a4:	89a3      	ldrh	r3, [r4, #12]
 80009a6:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80009aa:	81a3      	strh	r3, [r4, #12]
 80009ac:	2300      	movs	r3, #0
 80009ae:	6063      	str	r3, [r4, #4]
 80009b0:	6923      	ldr	r3, [r4, #16]
 80009b2:	6023      	str	r3, [r4, #0]
 80009b4:	89a3      	ldrh	r3, [r4, #12]
 80009b6:	f043 0308 	orr.w	r3, r3, #8
 80009ba:	81a3      	strh	r3, [r4, #12]
 80009bc:	6923      	ldr	r3, [r4, #16]
 80009be:	b94b      	cbnz	r3, 80009d4 <__swsetup_r+0x90>
 80009c0:	89a3      	ldrh	r3, [r4, #12]
 80009c2:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80009c6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80009ca:	d003      	beq.n	80009d4 <__swsetup_r+0x90>
 80009cc:	4621      	mov	r1, r4
 80009ce:	4630      	mov	r0, r6
 80009d0:	f000 f9f4 	bl	8000dbc <__smakebuf_r>
 80009d4:	89a2      	ldrh	r2, [r4, #12]
 80009d6:	f012 0301 	ands.w	r3, r2, #1
 80009da:	d005      	beq.n	80009e8 <__swsetup_r+0xa4>
 80009dc:	2300      	movs	r3, #0
 80009de:	60a3      	str	r3, [r4, #8]
 80009e0:	6963      	ldr	r3, [r4, #20]
 80009e2:	425b      	negs	r3, r3
 80009e4:	61a3      	str	r3, [r4, #24]
 80009e6:	e003      	b.n	80009f0 <__swsetup_r+0xac>
 80009e8:	0792      	lsls	r2, r2, #30
 80009ea:	bf58      	it	pl
 80009ec:	6963      	ldrpl	r3, [r4, #20]
 80009ee:	60a3      	str	r3, [r4, #8]
 80009f0:	6923      	ldr	r3, [r4, #16]
 80009f2:	b95b      	cbnz	r3, 8000a0c <__swsetup_r+0xc8>
 80009f4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80009f8:	f003 0080 	and.w	r0, r3, #128	; 0x80
 80009fc:	b280      	uxth	r0, r0
 80009fe:	b130      	cbz	r0, 8000a0e <__swsetup_r+0xca>
 8000a00:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000a04:	81a3      	strh	r3, [r4, #12]
 8000a06:	f04f 30ff 	mov.w	r0, #4294967295
 8000a0a:	bd70      	pop	{r4, r5, r6, pc}
 8000a0c:	2000      	movs	r0, #0
 8000a0e:	bd70      	pop	{r4, r5, r6, pc}
 8000a10:	20000060 	.word	0x20000060
 8000a14:	0800127c 	.word	0x0800127c
 8000a18:	0800129c 	.word	0x0800129c
 8000a1c:	080012bc 	.word	0x080012bc

08000a20 <__sflush_r>:
 8000a20:	898a      	ldrh	r2, [r1, #12]
 8000a22:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000a26:	4605      	mov	r5, r0
 8000a28:	0710      	lsls	r0, r2, #28
 8000a2a:	460c      	mov	r4, r1
 8000a2c:	d459      	bmi.n	8000ae2 <__sflush_r+0xc2>
 8000a2e:	684b      	ldr	r3, [r1, #4]
 8000a30:	2b00      	cmp	r3, #0
 8000a32:	dc02      	bgt.n	8000a3a <__sflush_r+0x1a>
 8000a34:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000a36:	2b00      	cmp	r3, #0
 8000a38:	dd17      	ble.n	8000a6a <__sflush_r+0x4a>
 8000a3a:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000a3c:	b1ae      	cbz	r6, 8000a6a <__sflush_r+0x4a>
 8000a3e:	f402 5280 	and.w	r2, r2, #4096	; 0x1000
 8000a42:	2300      	movs	r3, #0
 8000a44:	b292      	uxth	r2, r2
 8000a46:	682f      	ldr	r7, [r5, #0]
 8000a48:	602b      	str	r3, [r5, #0]
 8000a4a:	b10a      	cbz	r2, 8000a50 <__sflush_r+0x30>
 8000a4c:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000a4e:	e015      	b.n	8000a7c <__sflush_r+0x5c>
 8000a50:	6a21      	ldr	r1, [r4, #32]
 8000a52:	2301      	movs	r3, #1
 8000a54:	4628      	mov	r0, r5
 8000a56:	47b0      	blx	r6
 8000a58:	1c41      	adds	r1, r0, #1
 8000a5a:	d10f      	bne.n	8000a7c <__sflush_r+0x5c>
 8000a5c:	682b      	ldr	r3, [r5, #0]
 8000a5e:	b16b      	cbz	r3, 8000a7c <__sflush_r+0x5c>
 8000a60:	2b1d      	cmp	r3, #29
 8000a62:	d001      	beq.n	8000a68 <__sflush_r+0x48>
 8000a64:	2b16      	cmp	r3, #22
 8000a66:	d103      	bne.n	8000a70 <__sflush_r+0x50>
 8000a68:	602f      	str	r7, [r5, #0]
 8000a6a:	2000      	movs	r0, #0
 8000a6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000a70:	89a3      	ldrh	r3, [r4, #12]
 8000a72:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000a76:	81a3      	strh	r3, [r4, #12]
 8000a78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000a7c:	89a3      	ldrh	r3, [r4, #12]
 8000a7e:	075a      	lsls	r2, r3, #29
 8000a80:	d505      	bpl.n	8000a8e <__sflush_r+0x6e>
 8000a82:	6863      	ldr	r3, [r4, #4]
 8000a84:	1ac0      	subs	r0, r0, r3
 8000a86:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000a88:	b10b      	cbz	r3, 8000a8e <__sflush_r+0x6e>
 8000a8a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000a8c:	1ac0      	subs	r0, r0, r3
 8000a8e:	2300      	movs	r3, #0
 8000a90:	4602      	mov	r2, r0
 8000a92:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000a94:	6a21      	ldr	r1, [r4, #32]
 8000a96:	4628      	mov	r0, r5
 8000a98:	47b0      	blx	r6
 8000a9a:	1c43      	adds	r3, r0, #1
 8000a9c:	89a3      	ldrh	r3, [r4, #12]
 8000a9e:	d106      	bne.n	8000aae <__sflush_r+0x8e>
 8000aa0:	6829      	ldr	r1, [r5, #0]
 8000aa2:	291d      	cmp	r1, #29
 8000aa4:	d83a      	bhi.n	8000b1c <__sflush_r+0xfc>
 8000aa6:	4a21      	ldr	r2, [pc, #132]	; (8000b2c <__sflush_r+0x10c>)
 8000aa8:	40ca      	lsrs	r2, r1
 8000aaa:	07d6      	lsls	r6, r2, #31
 8000aac:	d536      	bpl.n	8000b1c <__sflush_r+0xfc>
 8000aae:	2200      	movs	r2, #0
 8000ab0:	6062      	str	r2, [r4, #4]
 8000ab2:	04d9      	lsls	r1, r3, #19
 8000ab4:	6922      	ldr	r2, [r4, #16]
 8000ab6:	6022      	str	r2, [r4, #0]
 8000ab8:	d504      	bpl.n	8000ac4 <__sflush_r+0xa4>
 8000aba:	1c42      	adds	r2, r0, #1
 8000abc:	d101      	bne.n	8000ac2 <__sflush_r+0xa2>
 8000abe:	682b      	ldr	r3, [r5, #0]
 8000ac0:	b903      	cbnz	r3, 8000ac4 <__sflush_r+0xa4>
 8000ac2:	6560      	str	r0, [r4, #84]	; 0x54
 8000ac4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000ac6:	602f      	str	r7, [r5, #0]
 8000ac8:	2900      	cmp	r1, #0
 8000aca:	d0ce      	beq.n	8000a6a <__sflush_r+0x4a>
 8000acc:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000ad0:	4299      	cmp	r1, r3
 8000ad2:	d002      	beq.n	8000ada <__sflush_r+0xba>
 8000ad4:	4628      	mov	r0, r5
 8000ad6:	f000 f9bd 	bl	8000e54 <_free_r>
 8000ada:	2000      	movs	r0, #0
 8000adc:	6360      	str	r0, [r4, #52]	; 0x34
 8000ade:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000ae2:	690f      	ldr	r7, [r1, #16]
 8000ae4:	2f00      	cmp	r7, #0
 8000ae6:	d0c0      	beq.n	8000a6a <__sflush_r+0x4a>
 8000ae8:	0793      	lsls	r3, r2, #30
 8000aea:	680e      	ldr	r6, [r1, #0]
 8000aec:	bf08      	it	eq
 8000aee:	694b      	ldreq	r3, [r1, #20]
 8000af0:	600f      	str	r7, [r1, #0]
 8000af2:	bf18      	it	ne
 8000af4:	2300      	movne	r3, #0
 8000af6:	ebc7 0806 	rsb	r8, r7, r6
 8000afa:	608b      	str	r3, [r1, #8]
 8000afc:	e002      	b.n	8000b04 <__sflush_r+0xe4>
 8000afe:	4407      	add	r7, r0
 8000b00:	ebc0 0808 	rsb	r8, r0, r8
 8000b04:	f1b8 0f00 	cmp.w	r8, #0
 8000b08:	ddaf      	ble.n	8000a6a <__sflush_r+0x4a>
 8000b0a:	4643      	mov	r3, r8
 8000b0c:	463a      	mov	r2, r7
 8000b0e:	6a21      	ldr	r1, [r4, #32]
 8000b10:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000b12:	4628      	mov	r0, r5
 8000b14:	47b0      	blx	r6
 8000b16:	2800      	cmp	r0, #0
 8000b18:	dcf1      	bgt.n	8000afe <__sflush_r+0xde>
 8000b1a:	89a3      	ldrh	r3, [r4, #12]
 8000b1c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000b20:	81a3      	strh	r3, [r4, #12]
 8000b22:	f04f 30ff 	mov.w	r0, #4294967295
 8000b26:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000b2a:	bf00      	nop
 8000b2c:	20400001 	.word	0x20400001

08000b30 <_fflush_r>:
 8000b30:	b538      	push	{r3, r4, r5, lr}
 8000b32:	690b      	ldr	r3, [r1, #16]
 8000b34:	4605      	mov	r5, r0
 8000b36:	460c      	mov	r4, r1
 8000b38:	b1db      	cbz	r3, 8000b72 <_fflush_r+0x42>
 8000b3a:	b118      	cbz	r0, 8000b44 <_fflush_r+0x14>
 8000b3c:	6983      	ldr	r3, [r0, #24]
 8000b3e:	b90b      	cbnz	r3, 8000b44 <_fflush_r+0x14>
 8000b40:	f000 f872 	bl	8000c28 <__sinit>
 8000b44:	4b0c      	ldr	r3, [pc, #48]	; (8000b78 <_fflush_r+0x48>)
 8000b46:	429c      	cmp	r4, r3
 8000b48:	d101      	bne.n	8000b4e <_fflush_r+0x1e>
 8000b4a:	686c      	ldr	r4, [r5, #4]
 8000b4c:	e008      	b.n	8000b60 <_fflush_r+0x30>
 8000b4e:	4b0b      	ldr	r3, [pc, #44]	; (8000b7c <_fflush_r+0x4c>)
 8000b50:	429c      	cmp	r4, r3
 8000b52:	d101      	bne.n	8000b58 <_fflush_r+0x28>
 8000b54:	68ac      	ldr	r4, [r5, #8]
 8000b56:	e003      	b.n	8000b60 <_fflush_r+0x30>
 8000b58:	4b09      	ldr	r3, [pc, #36]	; (8000b80 <_fflush_r+0x50>)
 8000b5a:	429c      	cmp	r4, r3
 8000b5c:	bf08      	it	eq
 8000b5e:	68ec      	ldreq	r4, [r5, #12]
 8000b60:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000b64:	b12b      	cbz	r3, 8000b72 <_fflush_r+0x42>
 8000b66:	4621      	mov	r1, r4
 8000b68:	4628      	mov	r0, r5
 8000b6a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000b6e:	f7ff bf57 	b.w	8000a20 <__sflush_r>
 8000b72:	2000      	movs	r0, #0
 8000b74:	bd38      	pop	{r3, r4, r5, pc}
 8000b76:	bf00      	nop
 8000b78:	0800127c 	.word	0x0800127c
 8000b7c:	0800129c 	.word	0x0800129c
 8000b80:	080012bc 	.word	0x080012bc

08000b84 <fflush>:
 8000b84:	4601      	mov	r1, r0
 8000b86:	b920      	cbnz	r0, 8000b92 <fflush+0xe>
 8000b88:	4b04      	ldr	r3, [pc, #16]	; (8000b9c <fflush+0x18>)
 8000b8a:	4905      	ldr	r1, [pc, #20]	; (8000ba0 <fflush+0x1c>)
 8000b8c:	6818      	ldr	r0, [r3, #0]
 8000b8e:	f000 b8d3 	b.w	8000d38 <_fwalk_reent>
 8000b92:	4b04      	ldr	r3, [pc, #16]	; (8000ba4 <fflush+0x20>)
 8000b94:	6818      	ldr	r0, [r3, #0]
 8000b96:	f7ff bfcb 	b.w	8000b30 <_fflush_r>
 8000b9a:	bf00      	nop
 8000b9c:	08001278 	.word	0x08001278
 8000ba0:	08000b31 	.word	0x08000b31
 8000ba4:	20000060 	.word	0x20000060

08000ba8 <_cleanup_r>:
 8000ba8:	4901      	ldr	r1, [pc, #4]	; (8000bb0 <_cleanup_r+0x8>)
 8000baa:	f000 b8c5 	b.w	8000d38 <_fwalk_reent>
 8000bae:	bf00      	nop
 8000bb0:	08000b31 	.word	0x08000b31

08000bb4 <std.isra.0>:
 8000bb4:	2300      	movs	r3, #0
 8000bb6:	b510      	push	{r4, lr}
 8000bb8:	4604      	mov	r4, r0
 8000bba:	6003      	str	r3, [r0, #0]
 8000bbc:	6043      	str	r3, [r0, #4]
 8000bbe:	6083      	str	r3, [r0, #8]
 8000bc0:	8181      	strh	r1, [r0, #12]
 8000bc2:	6643      	str	r3, [r0, #100]	; 0x64
 8000bc4:	81c2      	strh	r2, [r0, #14]
 8000bc6:	6103      	str	r3, [r0, #16]
 8000bc8:	6143      	str	r3, [r0, #20]
 8000bca:	6183      	str	r3, [r0, #24]
 8000bcc:	4619      	mov	r1, r3
 8000bce:	2208      	movs	r2, #8
 8000bd0:	305c      	adds	r0, #92	; 0x5c
 8000bd2:	f000 f937 	bl	8000e44 <memset>
 8000bd6:	4b05      	ldr	r3, [pc, #20]	; (8000bec <std.isra.0+0x38>)
 8000bd8:	6263      	str	r3, [r4, #36]	; 0x24
 8000bda:	4b05      	ldr	r3, [pc, #20]	; (8000bf0 <std.isra.0+0x3c>)
 8000bdc:	62a3      	str	r3, [r4, #40]	; 0x28
 8000bde:	4b05      	ldr	r3, [pc, #20]	; (8000bf4 <std.isra.0+0x40>)
 8000be0:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000be2:	4b05      	ldr	r3, [pc, #20]	; (8000bf8 <std.isra.0+0x44>)
 8000be4:	6224      	str	r4, [r4, #32]
 8000be6:	6323      	str	r3, [r4, #48]	; 0x30
 8000be8:	bd10      	pop	{r4, pc}
 8000bea:	bf00      	nop
 8000bec:	080010f1 	.word	0x080010f1
 8000bf0:	08001113 	.word	0x08001113
 8000bf4:	0800114b 	.word	0x0800114b
 8000bf8:	0800116f 	.word	0x0800116f

08000bfc <__sfmoreglue>:
 8000bfc:	b570      	push	{r4, r5, r6, lr}
 8000bfe:	2368      	movs	r3, #104	; 0x68
 8000c00:	1e4d      	subs	r5, r1, #1
 8000c02:	435d      	muls	r5, r3
 8000c04:	460e      	mov	r6, r1
 8000c06:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000c0a:	f000 f971 	bl	8000ef0 <_malloc_r>
 8000c0e:	4604      	mov	r4, r0
 8000c10:	b140      	cbz	r0, 8000c24 <__sfmoreglue+0x28>
 8000c12:	2100      	movs	r1, #0
 8000c14:	e880 0042 	stmia.w	r0, {r1, r6}
 8000c18:	300c      	adds	r0, #12
 8000c1a:	60a0      	str	r0, [r4, #8]
 8000c1c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000c20:	f000 f910 	bl	8000e44 <memset>
 8000c24:	4620      	mov	r0, r4
 8000c26:	bd70      	pop	{r4, r5, r6, pc}

08000c28 <__sinit>:
 8000c28:	6983      	ldr	r3, [r0, #24]
 8000c2a:	b510      	push	{r4, lr}
 8000c2c:	4604      	mov	r4, r0
 8000c2e:	bb33      	cbnz	r3, 8000c7e <__sinit+0x56>
 8000c30:	6483      	str	r3, [r0, #72]	; 0x48
 8000c32:	64c3      	str	r3, [r0, #76]	; 0x4c
 8000c34:	6503      	str	r3, [r0, #80]	; 0x50
 8000c36:	4b12      	ldr	r3, [pc, #72]	; (8000c80 <__sinit+0x58>)
 8000c38:	4a12      	ldr	r2, [pc, #72]	; (8000c84 <__sinit+0x5c>)
 8000c3a:	681b      	ldr	r3, [r3, #0]
 8000c3c:	6282      	str	r2, [r0, #40]	; 0x28
 8000c3e:	4298      	cmp	r0, r3
 8000c40:	bf04      	itt	eq
 8000c42:	2301      	moveq	r3, #1
 8000c44:	6183      	streq	r3, [r0, #24]
 8000c46:	f000 f81f 	bl	8000c88 <__sfp>
 8000c4a:	6060      	str	r0, [r4, #4]
 8000c4c:	4620      	mov	r0, r4
 8000c4e:	f000 f81b 	bl	8000c88 <__sfp>
 8000c52:	60a0      	str	r0, [r4, #8]
 8000c54:	4620      	mov	r0, r4
 8000c56:	f000 f817 	bl	8000c88 <__sfp>
 8000c5a:	2200      	movs	r2, #0
 8000c5c:	60e0      	str	r0, [r4, #12]
 8000c5e:	2104      	movs	r1, #4
 8000c60:	6860      	ldr	r0, [r4, #4]
 8000c62:	f7ff ffa7 	bl	8000bb4 <std.isra.0>
 8000c66:	2201      	movs	r2, #1
 8000c68:	2109      	movs	r1, #9
 8000c6a:	68a0      	ldr	r0, [r4, #8]
 8000c6c:	f7ff ffa2 	bl	8000bb4 <std.isra.0>
 8000c70:	2202      	movs	r2, #2
 8000c72:	2112      	movs	r1, #18
 8000c74:	68e0      	ldr	r0, [r4, #12]
 8000c76:	f7ff ff9d 	bl	8000bb4 <std.isra.0>
 8000c7a:	2301      	movs	r3, #1
 8000c7c:	61a3      	str	r3, [r4, #24]
 8000c7e:	bd10      	pop	{r4, pc}
 8000c80:	08001278 	.word	0x08001278
 8000c84:	08000ba9 	.word	0x08000ba9

08000c88 <__sfp>:
 8000c88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c8a:	4b1c      	ldr	r3, [pc, #112]	; (8000cfc <__sfp+0x74>)
 8000c8c:	681e      	ldr	r6, [r3, #0]
 8000c8e:	69b3      	ldr	r3, [r6, #24]
 8000c90:	4607      	mov	r7, r0
 8000c92:	b913      	cbnz	r3, 8000c9a <__sfp+0x12>
 8000c94:	4630      	mov	r0, r6
 8000c96:	f7ff ffc7 	bl	8000c28 <__sinit>
 8000c9a:	3648      	adds	r6, #72	; 0x48
 8000c9c:	68b4      	ldr	r4, [r6, #8]
 8000c9e:	6873      	ldr	r3, [r6, #4]
 8000ca0:	3b01      	subs	r3, #1
 8000ca2:	d404      	bmi.n	8000cae <__sfp+0x26>
 8000ca4:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000ca8:	b17d      	cbz	r5, 8000cca <__sfp+0x42>
 8000caa:	3468      	adds	r4, #104	; 0x68
 8000cac:	e7f8      	b.n	8000ca0 <__sfp+0x18>
 8000cae:	6833      	ldr	r3, [r6, #0]
 8000cb0:	b10b      	cbz	r3, 8000cb6 <__sfp+0x2e>
 8000cb2:	6836      	ldr	r6, [r6, #0]
 8000cb4:	e7f2      	b.n	8000c9c <__sfp+0x14>
 8000cb6:	2104      	movs	r1, #4
 8000cb8:	4638      	mov	r0, r7
 8000cba:	f7ff ff9f 	bl	8000bfc <__sfmoreglue>
 8000cbe:	6030      	str	r0, [r6, #0]
 8000cc0:	2800      	cmp	r0, #0
 8000cc2:	d1f6      	bne.n	8000cb2 <__sfp+0x2a>
 8000cc4:	230c      	movs	r3, #12
 8000cc6:	603b      	str	r3, [r7, #0]
 8000cc8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000cca:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8000cce:	81e3      	strh	r3, [r4, #14]
 8000cd0:	2301      	movs	r3, #1
 8000cd2:	81a3      	strh	r3, [r4, #12]
 8000cd4:	6665      	str	r5, [r4, #100]	; 0x64
 8000cd6:	6025      	str	r5, [r4, #0]
 8000cd8:	60a5      	str	r5, [r4, #8]
 8000cda:	6065      	str	r5, [r4, #4]
 8000cdc:	6125      	str	r5, [r4, #16]
 8000cde:	6165      	str	r5, [r4, #20]
 8000ce0:	61a5      	str	r5, [r4, #24]
 8000ce2:	2208      	movs	r2, #8
 8000ce4:	4629      	mov	r1, r5
 8000ce6:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000cea:	f000 f8ab 	bl	8000e44 <memset>
 8000cee:	6365      	str	r5, [r4, #52]	; 0x34
 8000cf0:	63a5      	str	r5, [r4, #56]	; 0x38
 8000cf2:	64a5      	str	r5, [r4, #72]	; 0x48
 8000cf4:	64e5      	str	r5, [r4, #76]	; 0x4c
 8000cf6:	4620      	mov	r0, r4
 8000cf8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000cfa:	bf00      	nop
 8000cfc:	08001278 	.word	0x08001278

08000d00 <_fwalk>:
 8000d00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000d04:	4688      	mov	r8, r1
 8000d06:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000d0a:	2600      	movs	r6, #0
 8000d0c:	b18c      	cbz	r4, 8000d32 <_fwalk+0x32>
 8000d0e:	68a5      	ldr	r5, [r4, #8]
 8000d10:	6867      	ldr	r7, [r4, #4]
 8000d12:	3f01      	subs	r7, #1
 8000d14:	d40b      	bmi.n	8000d2e <_fwalk+0x2e>
 8000d16:	89ab      	ldrh	r3, [r5, #12]
 8000d18:	2b01      	cmp	r3, #1
 8000d1a:	d906      	bls.n	8000d2a <_fwalk+0x2a>
 8000d1c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000d20:	3301      	adds	r3, #1
 8000d22:	d002      	beq.n	8000d2a <_fwalk+0x2a>
 8000d24:	4628      	mov	r0, r5
 8000d26:	47c0      	blx	r8
 8000d28:	4306      	orrs	r6, r0
 8000d2a:	3568      	adds	r5, #104	; 0x68
 8000d2c:	e7f1      	b.n	8000d12 <_fwalk+0x12>
 8000d2e:	6824      	ldr	r4, [r4, #0]
 8000d30:	e7ec      	b.n	8000d0c <_fwalk+0xc>
 8000d32:	4630      	mov	r0, r6
 8000d34:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08000d38 <_fwalk_reent>:
 8000d38:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000d3c:	4680      	mov	r8, r0
 8000d3e:	4689      	mov	r9, r1
 8000d40:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000d44:	2600      	movs	r6, #0
 8000d46:	b194      	cbz	r4, 8000d6e <_fwalk_reent+0x36>
 8000d48:	68a5      	ldr	r5, [r4, #8]
 8000d4a:	6867      	ldr	r7, [r4, #4]
 8000d4c:	3f01      	subs	r7, #1
 8000d4e:	d40c      	bmi.n	8000d6a <_fwalk_reent+0x32>
 8000d50:	89ab      	ldrh	r3, [r5, #12]
 8000d52:	2b01      	cmp	r3, #1
 8000d54:	d907      	bls.n	8000d66 <_fwalk_reent+0x2e>
 8000d56:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000d5a:	3301      	adds	r3, #1
 8000d5c:	d003      	beq.n	8000d66 <_fwalk_reent+0x2e>
 8000d5e:	4629      	mov	r1, r5
 8000d60:	4640      	mov	r0, r8
 8000d62:	47c8      	blx	r9
 8000d64:	4306      	orrs	r6, r0
 8000d66:	3568      	adds	r5, #104	; 0x68
 8000d68:	e7f0      	b.n	8000d4c <_fwalk_reent+0x14>
 8000d6a:	6824      	ldr	r4, [r4, #0]
 8000d6c:	e7eb      	b.n	8000d46 <_fwalk_reent+0xe>
 8000d6e:	4630      	mov	r0, r6
 8000d70:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08000d74 <__swhatbuf_r>:
 8000d74:	b570      	push	{r4, r5, r6, lr}
 8000d76:	460e      	mov	r6, r1
 8000d78:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000d7c:	2900      	cmp	r1, #0
 8000d7e:	b090      	sub	sp, #64	; 0x40
 8000d80:	4614      	mov	r4, r2
 8000d82:	461d      	mov	r5, r3
 8000d84:	da06      	bge.n	8000d94 <__swhatbuf_r+0x20>
 8000d86:	2300      	movs	r3, #0
 8000d88:	602b      	str	r3, [r5, #0]
 8000d8a:	89b3      	ldrh	r3, [r6, #12]
 8000d8c:	061a      	lsls	r2, r3, #24
 8000d8e:	d50e      	bpl.n	8000dae <__swhatbuf_r+0x3a>
 8000d90:	2340      	movs	r3, #64	; 0x40
 8000d92:	e00e      	b.n	8000db2 <__swhatbuf_r+0x3e>
 8000d94:	aa01      	add	r2, sp, #4
 8000d96:	f000 fa11 	bl	80011bc <_fstat_r>
 8000d9a:	2800      	cmp	r0, #0
 8000d9c:	dbf3      	blt.n	8000d86 <__swhatbuf_r+0x12>
 8000d9e:	9a02      	ldr	r2, [sp, #8]
 8000da0:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000da4:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000da8:	425a      	negs	r2, r3
 8000daa:	415a      	adcs	r2, r3
 8000dac:	602a      	str	r2, [r5, #0]
 8000dae:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000db2:	2000      	movs	r0, #0
 8000db4:	6023      	str	r3, [r4, #0]
 8000db6:	b010      	add	sp, #64	; 0x40
 8000db8:	bd70      	pop	{r4, r5, r6, pc}
	...

08000dbc <__smakebuf_r>:
 8000dbc:	898b      	ldrh	r3, [r1, #12]
 8000dbe:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000dc0:	079e      	lsls	r6, r3, #30
 8000dc2:	4605      	mov	r5, r0
 8000dc4:	460c      	mov	r4, r1
 8000dc6:	d410      	bmi.n	8000dea <__smakebuf_r+0x2e>
 8000dc8:	ab01      	add	r3, sp, #4
 8000dca:	466a      	mov	r2, sp
 8000dcc:	f7ff ffd2 	bl	8000d74 <__swhatbuf_r>
 8000dd0:	9900      	ldr	r1, [sp, #0]
 8000dd2:	4606      	mov	r6, r0
 8000dd4:	4628      	mov	r0, r5
 8000dd6:	f000 f88b 	bl	8000ef0 <_malloc_r>
 8000dda:	b968      	cbnz	r0, 8000df8 <__smakebuf_r+0x3c>
 8000ddc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000de0:	059a      	lsls	r2, r3, #22
 8000de2:	d422      	bmi.n	8000e2a <__smakebuf_r+0x6e>
 8000de4:	f043 0302 	orr.w	r3, r3, #2
 8000de8:	81a3      	strh	r3, [r4, #12]
 8000dea:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000dee:	6023      	str	r3, [r4, #0]
 8000df0:	6123      	str	r3, [r4, #16]
 8000df2:	2301      	movs	r3, #1
 8000df4:	6163      	str	r3, [r4, #20]
 8000df6:	e018      	b.n	8000e2a <__smakebuf_r+0x6e>
 8000df8:	4b0d      	ldr	r3, [pc, #52]	; (8000e30 <__smakebuf_r+0x74>)
 8000dfa:	62ab      	str	r3, [r5, #40]	; 0x28
 8000dfc:	89a3      	ldrh	r3, [r4, #12]
 8000dfe:	6020      	str	r0, [r4, #0]
 8000e00:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000e04:	81a3      	strh	r3, [r4, #12]
 8000e06:	9b00      	ldr	r3, [sp, #0]
 8000e08:	6163      	str	r3, [r4, #20]
 8000e0a:	9b01      	ldr	r3, [sp, #4]
 8000e0c:	6120      	str	r0, [r4, #16]
 8000e0e:	b14b      	cbz	r3, 8000e24 <__smakebuf_r+0x68>
 8000e10:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000e14:	4628      	mov	r0, r5
 8000e16:	f000 f9e3 	bl	80011e0 <_isatty_r>
 8000e1a:	b118      	cbz	r0, 8000e24 <__smakebuf_r+0x68>
 8000e1c:	89a3      	ldrh	r3, [r4, #12]
 8000e1e:	f043 0301 	orr.w	r3, r3, #1
 8000e22:	81a3      	strh	r3, [r4, #12]
 8000e24:	89a0      	ldrh	r0, [r4, #12]
 8000e26:	4330      	orrs	r0, r6
 8000e28:	81a0      	strh	r0, [r4, #12]
 8000e2a:	b002      	add	sp, #8
 8000e2c:	bd70      	pop	{r4, r5, r6, pc}
 8000e2e:	bf00      	nop
 8000e30:	08000ba9 	.word	0x08000ba9

08000e34 <malloc>:
 8000e34:	4b02      	ldr	r3, [pc, #8]	; (8000e40 <malloc+0xc>)
 8000e36:	4601      	mov	r1, r0
 8000e38:	6818      	ldr	r0, [r3, #0]
 8000e3a:	f000 b859 	b.w	8000ef0 <_malloc_r>
 8000e3e:	bf00      	nop
 8000e40:	20000060 	.word	0x20000060

08000e44 <memset>:
 8000e44:	4402      	add	r2, r0
 8000e46:	4603      	mov	r3, r0
 8000e48:	4293      	cmp	r3, r2
 8000e4a:	d002      	beq.n	8000e52 <memset+0xe>
 8000e4c:	f803 1b01 	strb.w	r1, [r3], #1
 8000e50:	e7fa      	b.n	8000e48 <memset+0x4>
 8000e52:	4770      	bx	lr

08000e54 <_free_r>:
 8000e54:	b538      	push	{r3, r4, r5, lr}
 8000e56:	4605      	mov	r5, r0
 8000e58:	2900      	cmp	r1, #0
 8000e5a:	d046      	beq.n	8000eea <_free_r+0x96>
 8000e5c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000e60:	1f0c      	subs	r4, r1, #4
 8000e62:	2b00      	cmp	r3, #0
 8000e64:	bfb8      	it	lt
 8000e66:	18e4      	addlt	r4, r4, r3
 8000e68:	f000 f9dc 	bl	8001224 <__malloc_lock>
 8000e6c:	4a1f      	ldr	r2, [pc, #124]	; (8000eec <_free_r+0x98>)
 8000e6e:	6813      	ldr	r3, [r2, #0]
 8000e70:	4611      	mov	r1, r2
 8000e72:	b913      	cbnz	r3, 8000e7a <_free_r+0x26>
 8000e74:	6063      	str	r3, [r4, #4]
 8000e76:	6014      	str	r4, [r2, #0]
 8000e78:	e032      	b.n	8000ee0 <_free_r+0x8c>
 8000e7a:	42a3      	cmp	r3, r4
 8000e7c:	d90e      	bls.n	8000e9c <_free_r+0x48>
 8000e7e:	6822      	ldr	r2, [r4, #0]
 8000e80:	18a0      	adds	r0, r4, r2
 8000e82:	4283      	cmp	r3, r0
 8000e84:	bf04      	itt	eq
 8000e86:	6818      	ldreq	r0, [r3, #0]
 8000e88:	685b      	ldreq	r3, [r3, #4]
 8000e8a:	6063      	str	r3, [r4, #4]
 8000e8c:	bf04      	itt	eq
 8000e8e:	1812      	addeq	r2, r2, r0
 8000e90:	6022      	streq	r2, [r4, #0]
 8000e92:	600c      	str	r4, [r1, #0]
 8000e94:	e024      	b.n	8000ee0 <_free_r+0x8c>
 8000e96:	42a2      	cmp	r2, r4
 8000e98:	d803      	bhi.n	8000ea2 <_free_r+0x4e>
 8000e9a:	4613      	mov	r3, r2
 8000e9c:	685a      	ldr	r2, [r3, #4]
 8000e9e:	2a00      	cmp	r2, #0
 8000ea0:	d1f9      	bne.n	8000e96 <_free_r+0x42>
 8000ea2:	6818      	ldr	r0, [r3, #0]
 8000ea4:	1819      	adds	r1, r3, r0
 8000ea6:	42a1      	cmp	r1, r4
 8000ea8:	d10b      	bne.n	8000ec2 <_free_r+0x6e>
 8000eaa:	6821      	ldr	r1, [r4, #0]
 8000eac:	4401      	add	r1, r0
 8000eae:	1858      	adds	r0, r3, r1
 8000eb0:	4282      	cmp	r2, r0
 8000eb2:	6019      	str	r1, [r3, #0]
 8000eb4:	d114      	bne.n	8000ee0 <_free_r+0x8c>
 8000eb6:	6810      	ldr	r0, [r2, #0]
 8000eb8:	6852      	ldr	r2, [r2, #4]
 8000eba:	605a      	str	r2, [r3, #4]
 8000ebc:	4401      	add	r1, r0
 8000ebe:	6019      	str	r1, [r3, #0]
 8000ec0:	e00e      	b.n	8000ee0 <_free_r+0x8c>
 8000ec2:	d902      	bls.n	8000eca <_free_r+0x76>
 8000ec4:	230c      	movs	r3, #12
 8000ec6:	602b      	str	r3, [r5, #0]
 8000ec8:	e00a      	b.n	8000ee0 <_free_r+0x8c>
 8000eca:	6821      	ldr	r1, [r4, #0]
 8000ecc:	1860      	adds	r0, r4, r1
 8000ece:	4282      	cmp	r2, r0
 8000ed0:	bf04      	itt	eq
 8000ed2:	6810      	ldreq	r0, [r2, #0]
 8000ed4:	6852      	ldreq	r2, [r2, #4]
 8000ed6:	6062      	str	r2, [r4, #4]
 8000ed8:	bf04      	itt	eq
 8000eda:	1809      	addeq	r1, r1, r0
 8000edc:	6021      	streq	r1, [r4, #0]
 8000ede:	605c      	str	r4, [r3, #4]
 8000ee0:	4628      	mov	r0, r5
 8000ee2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000ee6:	f000 b99e 	b.w	8001226 <__malloc_unlock>
 8000eea:	bd38      	pop	{r3, r4, r5, pc}
 8000eec:	20000088 	.word	0x20000088

08000ef0 <_malloc_r>:
 8000ef0:	b570      	push	{r4, r5, r6, lr}
 8000ef2:	1ccd      	adds	r5, r1, #3
 8000ef4:	f025 0503 	bic.w	r5, r5, #3
 8000ef8:	3508      	adds	r5, #8
 8000efa:	2d0c      	cmp	r5, #12
 8000efc:	bf38      	it	cc
 8000efe:	250c      	movcc	r5, #12
 8000f00:	2d00      	cmp	r5, #0
 8000f02:	4606      	mov	r6, r0
 8000f04:	db01      	blt.n	8000f0a <_malloc_r+0x1a>
 8000f06:	42a9      	cmp	r1, r5
 8000f08:	d902      	bls.n	8000f10 <_malloc_r+0x20>
 8000f0a:	230c      	movs	r3, #12
 8000f0c:	6033      	str	r3, [r6, #0]
 8000f0e:	e046      	b.n	8000f9e <_malloc_r+0xae>
 8000f10:	f000 f988 	bl	8001224 <__malloc_lock>
 8000f14:	4b23      	ldr	r3, [pc, #140]	; (8000fa4 <_malloc_r+0xb4>)
 8000f16:	681c      	ldr	r4, [r3, #0]
 8000f18:	461a      	mov	r2, r3
 8000f1a:	4621      	mov	r1, r4
 8000f1c:	b1a1      	cbz	r1, 8000f48 <_malloc_r+0x58>
 8000f1e:	680b      	ldr	r3, [r1, #0]
 8000f20:	1b5b      	subs	r3, r3, r5
 8000f22:	d40e      	bmi.n	8000f42 <_malloc_r+0x52>
 8000f24:	2b0b      	cmp	r3, #11
 8000f26:	d903      	bls.n	8000f30 <_malloc_r+0x40>
 8000f28:	600b      	str	r3, [r1, #0]
 8000f2a:	18cc      	adds	r4, r1, r3
 8000f2c:	50cd      	str	r5, [r1, r3]
 8000f2e:	e01e      	b.n	8000f6e <_malloc_r+0x7e>
 8000f30:	428c      	cmp	r4, r1
 8000f32:	bf0d      	iteet	eq
 8000f34:	6863      	ldreq	r3, [r4, #4]
 8000f36:	684b      	ldrne	r3, [r1, #4]
 8000f38:	6063      	strne	r3, [r4, #4]
 8000f3a:	6013      	streq	r3, [r2, #0]
 8000f3c:	bf18      	it	ne
 8000f3e:	460c      	movne	r4, r1
 8000f40:	e015      	b.n	8000f6e <_malloc_r+0x7e>
 8000f42:	460c      	mov	r4, r1
 8000f44:	6849      	ldr	r1, [r1, #4]
 8000f46:	e7e9      	b.n	8000f1c <_malloc_r+0x2c>
 8000f48:	4c17      	ldr	r4, [pc, #92]	; (8000fa8 <_malloc_r+0xb8>)
 8000f4a:	6823      	ldr	r3, [r4, #0]
 8000f4c:	b91b      	cbnz	r3, 8000f56 <_malloc_r+0x66>
 8000f4e:	4630      	mov	r0, r6
 8000f50:	f000 f8be 	bl	80010d0 <_sbrk_r>
 8000f54:	6020      	str	r0, [r4, #0]
 8000f56:	4629      	mov	r1, r5
 8000f58:	4630      	mov	r0, r6
 8000f5a:	f000 f8b9 	bl	80010d0 <_sbrk_r>
 8000f5e:	1c43      	adds	r3, r0, #1
 8000f60:	d018      	beq.n	8000f94 <_malloc_r+0xa4>
 8000f62:	1cc4      	adds	r4, r0, #3
 8000f64:	f024 0403 	bic.w	r4, r4, #3
 8000f68:	42a0      	cmp	r0, r4
 8000f6a:	d10d      	bne.n	8000f88 <_malloc_r+0x98>
 8000f6c:	6025      	str	r5, [r4, #0]
 8000f6e:	4630      	mov	r0, r6
 8000f70:	f000 f959 	bl	8001226 <__malloc_unlock>
 8000f74:	f104 000b 	add.w	r0, r4, #11
 8000f78:	1d23      	adds	r3, r4, #4
 8000f7a:	f020 0007 	bic.w	r0, r0, #7
 8000f7e:	1ac3      	subs	r3, r0, r3
 8000f80:	d00e      	beq.n	8000fa0 <_malloc_r+0xb0>
 8000f82:	425a      	negs	r2, r3
 8000f84:	50e2      	str	r2, [r4, r3]
 8000f86:	bd70      	pop	{r4, r5, r6, pc}
 8000f88:	1a21      	subs	r1, r4, r0
 8000f8a:	4630      	mov	r0, r6
 8000f8c:	f000 f8a0 	bl	80010d0 <_sbrk_r>
 8000f90:	3001      	adds	r0, #1
 8000f92:	d1eb      	bne.n	8000f6c <_malloc_r+0x7c>
 8000f94:	230c      	movs	r3, #12
 8000f96:	6033      	str	r3, [r6, #0]
 8000f98:	4630      	mov	r0, r6
 8000f9a:	f000 f944 	bl	8001226 <__malloc_unlock>
 8000f9e:	2000      	movs	r0, #0
 8000fa0:	bd70      	pop	{r4, r5, r6, pc}
 8000fa2:	bf00      	nop
 8000fa4:	20000088 	.word	0x20000088
 8000fa8:	20000084 	.word	0x20000084

08000fac <lflush>:
 8000fac:	8983      	ldrh	r3, [r0, #12]
 8000fae:	f003 0309 	and.w	r3, r3, #9
 8000fb2:	2b09      	cmp	r3, #9
 8000fb4:	d101      	bne.n	8000fba <lflush+0xe>
 8000fb6:	f7ff bde5 	b.w	8000b84 <fflush>
 8000fba:	2000      	movs	r0, #0
 8000fbc:	4770      	bx	lr
	...

08000fc0 <__srefill_r>:
 8000fc0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000fc2:	460c      	mov	r4, r1
 8000fc4:	4605      	mov	r5, r0
 8000fc6:	b118      	cbz	r0, 8000fd0 <__srefill_r+0x10>
 8000fc8:	6983      	ldr	r3, [r0, #24]
 8000fca:	b90b      	cbnz	r3, 8000fd0 <__srefill_r+0x10>
 8000fcc:	f7ff fe2c 	bl	8000c28 <__sinit>
 8000fd0:	4b3a      	ldr	r3, [pc, #232]	; (80010bc <__srefill_r+0xfc>)
 8000fd2:	429c      	cmp	r4, r3
 8000fd4:	d101      	bne.n	8000fda <__srefill_r+0x1a>
 8000fd6:	686c      	ldr	r4, [r5, #4]
 8000fd8:	e008      	b.n	8000fec <__srefill_r+0x2c>
 8000fda:	4b39      	ldr	r3, [pc, #228]	; (80010c0 <__srefill_r+0x100>)
 8000fdc:	429c      	cmp	r4, r3
 8000fde:	d101      	bne.n	8000fe4 <__srefill_r+0x24>
 8000fe0:	68ac      	ldr	r4, [r5, #8]
 8000fe2:	e003      	b.n	8000fec <__srefill_r+0x2c>
 8000fe4:	4b37      	ldr	r3, [pc, #220]	; (80010c4 <__srefill_r+0x104>)
 8000fe6:	429c      	cmp	r4, r3
 8000fe8:	bf08      	it	eq
 8000fea:	68ec      	ldreq	r4, [r5, #12]
 8000fec:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000ff0:	2300      	movs	r3, #0
 8000ff2:	6063      	str	r3, [r4, #4]
 8000ff4:	b293      	uxth	r3, r2
 8000ff6:	069e      	lsls	r6, r3, #26
 8000ff8:	d45b      	bmi.n	80010b2 <__srefill_r+0xf2>
 8000ffa:	0758      	lsls	r0, r3, #29
 8000ffc:	d41a      	bmi.n	8001034 <__srefill_r+0x74>
 8000ffe:	06d9      	lsls	r1, r3, #27
 8001000:	d405      	bmi.n	800100e <__srefill_r+0x4e>
 8001002:	2309      	movs	r3, #9
 8001004:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001008:	602b      	str	r3, [r5, #0]
 800100a:	81a2      	strh	r2, [r4, #12]
 800100c:	e051      	b.n	80010b2 <__srefill_r+0xf2>
 800100e:	071a      	lsls	r2, r3, #28
 8001010:	d50b      	bpl.n	800102a <__srefill_r+0x6a>
 8001012:	4621      	mov	r1, r4
 8001014:	4628      	mov	r0, r5
 8001016:	f7ff fd8b 	bl	8000b30 <_fflush_r>
 800101a:	2800      	cmp	r0, #0
 800101c:	d149      	bne.n	80010b2 <__srefill_r+0xf2>
 800101e:	89a3      	ldrh	r3, [r4, #12]
 8001020:	60a0      	str	r0, [r4, #8]
 8001022:	f023 0308 	bic.w	r3, r3, #8
 8001026:	81a3      	strh	r3, [r4, #12]
 8001028:	61a0      	str	r0, [r4, #24]
 800102a:	89a3      	ldrh	r3, [r4, #12]
 800102c:	f043 0304 	orr.w	r3, r3, #4
 8001030:	81a3      	strh	r3, [r4, #12]
 8001032:	e010      	b.n	8001056 <__srefill_r+0x96>
 8001034:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001036:	b171      	cbz	r1, 8001056 <__srefill_r+0x96>
 8001038:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800103c:	4299      	cmp	r1, r3
 800103e:	d002      	beq.n	8001046 <__srefill_r+0x86>
 8001040:	4628      	mov	r0, r5
 8001042:	f7ff ff07 	bl	8000e54 <_free_r>
 8001046:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001048:	6063      	str	r3, [r4, #4]
 800104a:	2000      	movs	r0, #0
 800104c:	6360      	str	r0, [r4, #52]	; 0x34
 800104e:	b113      	cbz	r3, 8001056 <__srefill_r+0x96>
 8001050:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8001052:	6023      	str	r3, [r4, #0]
 8001054:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001056:	6923      	ldr	r3, [r4, #16]
 8001058:	b91b      	cbnz	r3, 8001062 <__srefill_r+0xa2>
 800105a:	4621      	mov	r1, r4
 800105c:	4628      	mov	r0, r5
 800105e:	f7ff fead 	bl	8000dbc <__smakebuf_r>
 8001062:	f9b4 700c 	ldrsh.w	r7, [r4, #12]
 8001066:	b2be      	uxth	r6, r7
 8001068:	07b3      	lsls	r3, r6, #30
 800106a:	d00f      	beq.n	800108c <__srefill_r+0xcc>
 800106c:	2301      	movs	r3, #1
 800106e:	81a3      	strh	r3, [r4, #12]
 8001070:	4b15      	ldr	r3, [pc, #84]	; (80010c8 <__srefill_r+0x108>)
 8001072:	4916      	ldr	r1, [pc, #88]	; (80010cc <__srefill_r+0x10c>)
 8001074:	6818      	ldr	r0, [r3, #0]
 8001076:	f006 0609 	and.w	r6, r6, #9
 800107a:	f7ff fe41 	bl	8000d00 <_fwalk>
 800107e:	2e09      	cmp	r6, #9
 8001080:	81a7      	strh	r7, [r4, #12]
 8001082:	d103      	bne.n	800108c <__srefill_r+0xcc>
 8001084:	4621      	mov	r1, r4
 8001086:	4628      	mov	r0, r5
 8001088:	f7ff fcca 	bl	8000a20 <__sflush_r>
 800108c:	6922      	ldr	r2, [r4, #16]
 800108e:	6022      	str	r2, [r4, #0]
 8001090:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8001092:	6963      	ldr	r3, [r4, #20]
 8001094:	6a21      	ldr	r1, [r4, #32]
 8001096:	4628      	mov	r0, r5
 8001098:	47b0      	blx	r6
 800109a:	2800      	cmp	r0, #0
 800109c:	6060      	str	r0, [r4, #4]
 800109e:	dc0b      	bgt.n	80010b8 <__srefill_r+0xf8>
 80010a0:	89a3      	ldrh	r3, [r4, #12]
 80010a2:	bf17      	itett	ne
 80010a4:	2200      	movne	r2, #0
 80010a6:	f043 0320 	orreq.w	r3, r3, #32
 80010aa:	f043 0340 	orrne.w	r3, r3, #64	; 0x40
 80010ae:	6062      	strne	r2, [r4, #4]
 80010b0:	81a3      	strh	r3, [r4, #12]
 80010b2:	f04f 30ff 	mov.w	r0, #4294967295
 80010b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80010b8:	2000      	movs	r0, #0
 80010ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80010bc:	0800127c 	.word	0x0800127c
 80010c0:	0800129c 	.word	0x0800129c
 80010c4:	080012bc 	.word	0x080012bc
 80010c8:	08001278 	.word	0x08001278
 80010cc:	08000fad 	.word	0x08000fad

080010d0 <_sbrk_r>:
 80010d0:	b538      	push	{r3, r4, r5, lr}
 80010d2:	4c06      	ldr	r4, [pc, #24]	; (80010ec <_sbrk_r+0x1c>)
 80010d4:	2300      	movs	r3, #0
 80010d6:	4605      	mov	r5, r0
 80010d8:	4608      	mov	r0, r1
 80010da:	6023      	str	r3, [r4, #0]
 80010dc:	f7ff f9e2 	bl	80004a4 <_sbrk>
 80010e0:	1c43      	adds	r3, r0, #1
 80010e2:	d102      	bne.n	80010ea <_sbrk_r+0x1a>
 80010e4:	6823      	ldr	r3, [r4, #0]
 80010e6:	b103      	cbz	r3, 80010ea <_sbrk_r+0x1a>
 80010e8:	602b      	str	r3, [r5, #0]
 80010ea:	bd38      	pop	{r3, r4, r5, pc}
 80010ec:	2000008c 	.word	0x2000008c

080010f0 <__sread>:
 80010f0:	b510      	push	{r4, lr}
 80010f2:	460c      	mov	r4, r1
 80010f4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80010f8:	f000 f896 	bl	8001228 <_read_r>
 80010fc:	2800      	cmp	r0, #0
 80010fe:	bfab      	itete	ge
 8001100:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8001102:	89a3      	ldrhlt	r3, [r4, #12]
 8001104:	181b      	addge	r3, r3, r0
 8001106:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800110a:	bfac      	ite	ge
 800110c:	6563      	strge	r3, [r4, #84]	; 0x54
 800110e:	81a3      	strhlt	r3, [r4, #12]
 8001110:	bd10      	pop	{r4, pc}

08001112 <__swrite>:
 8001112:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001116:	461f      	mov	r7, r3
 8001118:	898b      	ldrh	r3, [r1, #12]
 800111a:	05db      	lsls	r3, r3, #23
 800111c:	4605      	mov	r5, r0
 800111e:	460c      	mov	r4, r1
 8001120:	4616      	mov	r6, r2
 8001122:	d505      	bpl.n	8001130 <__swrite+0x1e>
 8001124:	2302      	movs	r3, #2
 8001126:	2200      	movs	r2, #0
 8001128:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800112c:	f000 f868 	bl	8001200 <_lseek_r>
 8001130:	89a3      	ldrh	r3, [r4, #12]
 8001132:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001136:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800113a:	81a3      	strh	r3, [r4, #12]
 800113c:	4632      	mov	r2, r6
 800113e:	463b      	mov	r3, r7
 8001140:	4628      	mov	r0, r5
 8001142:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001146:	f000 b817 	b.w	8001178 <_write_r>

0800114a <__sseek>:
 800114a:	b510      	push	{r4, lr}
 800114c:	460c      	mov	r4, r1
 800114e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001152:	f000 f855 	bl	8001200 <_lseek_r>
 8001156:	1c43      	adds	r3, r0, #1
 8001158:	89a3      	ldrh	r3, [r4, #12]
 800115a:	bf15      	itete	ne
 800115c:	6560      	strne	r0, [r4, #84]	; 0x54
 800115e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8001162:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8001166:	81a3      	strheq	r3, [r4, #12]
 8001168:	bf18      	it	ne
 800116a:	81a3      	strhne	r3, [r4, #12]
 800116c:	bd10      	pop	{r4, pc}

0800116e <__sclose>:
 800116e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001172:	f000 b813 	b.w	800119c <_close_r>
	...

08001178 <_write_r>:
 8001178:	b538      	push	{r3, r4, r5, lr}
 800117a:	4c07      	ldr	r4, [pc, #28]	; (8001198 <_write_r+0x20>)
 800117c:	4605      	mov	r5, r0
 800117e:	4608      	mov	r0, r1
 8001180:	4611      	mov	r1, r2
 8001182:	2200      	movs	r2, #0
 8001184:	6022      	str	r2, [r4, #0]
 8001186:	461a      	mov	r2, r3
 8001188:	f7ff f956 	bl	8000438 <_write>
 800118c:	1c43      	adds	r3, r0, #1
 800118e:	d102      	bne.n	8001196 <_write_r+0x1e>
 8001190:	6823      	ldr	r3, [r4, #0]
 8001192:	b103      	cbz	r3, 8001196 <_write_r+0x1e>
 8001194:	602b      	str	r3, [r5, #0]
 8001196:	bd38      	pop	{r3, r4, r5, pc}
 8001198:	2000008c 	.word	0x2000008c

0800119c <_close_r>:
 800119c:	b538      	push	{r3, r4, r5, lr}
 800119e:	4c06      	ldr	r4, [pc, #24]	; (80011b8 <_close_r+0x1c>)
 80011a0:	2300      	movs	r3, #0
 80011a2:	4605      	mov	r5, r0
 80011a4:	4608      	mov	r0, r1
 80011a6:	6023      	str	r3, [r4, #0]
 80011a8:	f7ff f99c 	bl	80004e4 <_close>
 80011ac:	1c43      	adds	r3, r0, #1
 80011ae:	d102      	bne.n	80011b6 <_close_r+0x1a>
 80011b0:	6823      	ldr	r3, [r4, #0]
 80011b2:	b103      	cbz	r3, 80011b6 <_close_r+0x1a>
 80011b4:	602b      	str	r3, [r5, #0]
 80011b6:	bd38      	pop	{r3, r4, r5, pc}
 80011b8:	2000008c 	.word	0x2000008c

080011bc <_fstat_r>:
 80011bc:	b538      	push	{r3, r4, r5, lr}
 80011be:	4c07      	ldr	r4, [pc, #28]	; (80011dc <_fstat_r+0x20>)
 80011c0:	2300      	movs	r3, #0
 80011c2:	4605      	mov	r5, r0
 80011c4:	4608      	mov	r0, r1
 80011c6:	4611      	mov	r1, r2
 80011c8:	6023      	str	r3, [r4, #0]
 80011ca:	f7ff f99d 	bl	8000508 <_fstat>
 80011ce:	1c43      	adds	r3, r0, #1
 80011d0:	d102      	bne.n	80011d8 <_fstat_r+0x1c>
 80011d2:	6823      	ldr	r3, [r4, #0]
 80011d4:	b103      	cbz	r3, 80011d8 <_fstat_r+0x1c>
 80011d6:	602b      	str	r3, [r5, #0]
 80011d8:	bd38      	pop	{r3, r4, r5, pc}
 80011da:	bf00      	nop
 80011dc:	2000008c 	.word	0x2000008c

080011e0 <_isatty_r>:
 80011e0:	b538      	push	{r3, r4, r5, lr}
 80011e2:	4c06      	ldr	r4, [pc, #24]	; (80011fc <_isatty_r+0x1c>)
 80011e4:	2300      	movs	r3, #0
 80011e6:	4605      	mov	r5, r0
 80011e8:	4608      	mov	r0, r1
 80011ea:	6023      	str	r3, [r4, #0]
 80011ec:	f7ff f99e 	bl	800052c <_isatty>
 80011f0:	1c43      	adds	r3, r0, #1
 80011f2:	d102      	bne.n	80011fa <_isatty_r+0x1a>
 80011f4:	6823      	ldr	r3, [r4, #0]
 80011f6:	b103      	cbz	r3, 80011fa <_isatty_r+0x1a>
 80011f8:	602b      	str	r3, [r5, #0]
 80011fa:	bd38      	pop	{r3, r4, r5, pc}
 80011fc:	2000008c 	.word	0x2000008c

08001200 <_lseek_r>:
 8001200:	b538      	push	{r3, r4, r5, lr}
 8001202:	4c07      	ldr	r4, [pc, #28]	; (8001220 <_lseek_r+0x20>)
 8001204:	4605      	mov	r5, r0
 8001206:	4608      	mov	r0, r1
 8001208:	4611      	mov	r1, r2
 800120a:	2200      	movs	r2, #0
 800120c:	6022      	str	r2, [r4, #0]
 800120e:	461a      	mov	r2, r3
 8001210:	f7ff f99c 	bl	800054c <_lseek>
 8001214:	1c43      	adds	r3, r0, #1
 8001216:	d102      	bne.n	800121e <_lseek_r+0x1e>
 8001218:	6823      	ldr	r3, [r4, #0]
 800121a:	b103      	cbz	r3, 800121e <_lseek_r+0x1e>
 800121c:	602b      	str	r3, [r5, #0]
 800121e:	bd38      	pop	{r3, r4, r5, pc}
 8001220:	2000008c 	.word	0x2000008c

08001224 <__malloc_lock>:
 8001224:	4770      	bx	lr

08001226 <__malloc_unlock>:
 8001226:	4770      	bx	lr

08001228 <_read_r>:
 8001228:	b538      	push	{r3, r4, r5, lr}
 800122a:	4c07      	ldr	r4, [pc, #28]	; (8001248 <_read_r+0x20>)
 800122c:	4605      	mov	r5, r0
 800122e:	4608      	mov	r0, r1
 8001230:	4611      	mov	r1, r2
 8001232:	2200      	movs	r2, #0
 8001234:	6022      	str	r2, [r4, #0]
 8001236:	461a      	mov	r2, r3
 8001238:	f7ff f91e 	bl	8000478 <_read>
 800123c:	1c43      	adds	r3, r0, #1
 800123e:	d102      	bne.n	8001246 <_read_r+0x1e>
 8001240:	6823      	ldr	r3, [r4, #0]
 8001242:	b103      	cbz	r3, 8001246 <_read_r+0x1e>
 8001244:	602b      	str	r3, [r5, #0]
 8001246:	bd38      	pop	{r3, r4, r5, pc}
 8001248:	2000008c 	.word	0x2000008c

0800124c <_init>:
 800124c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800124e:	bf00      	nop
 8001250:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001252:	bc08      	pop	{r3}
 8001254:	469e      	mov	lr, r3
 8001256:	4770      	bx	lr

08001258 <_fini>:
 8001258:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800125a:	bf00      	nop
 800125c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800125e:	bc08      	pop	{r3}
 8001260:	469e      	mov	lr, r3
 8001262:	4770      	bx	lr
